[project]
name = "pcapi"
version = "0.0.0"
description = "The backend of the pass Culture"
license = "MPL-2.0"
authors = [
  { name = "Equipe pass Culture", email = "<contact@passculture.app>" },
]
requires-python = ">=3.11,<4.0"

dependencies = [
  "alembic==1.16.4",
  "algoliasearch==3.0.0",
  "authlib==1.6.1",
  "babel==2.17.0",
  "bcrypt==4.3.0",
  "beautifulsoup4==4.13.4",
  "boto3==1.35.99",                    # For compatibility with Outscale, do not upgrade to 1.36 until they solved the issue: https://status.outscale.com/incidents/hcq9vmjkl0k9
  "boussole==2.1.3",
  "brevo-python==1.1.2",
  "celery[redis]==5.5.3",
  "click-option-group==0.5.7",
  "click==8.2.1",
  "clickhouse-sqlalchemy==0.2.7",
  "cryptography (>=44.0.3,<45)",       # pyopenssl (24.3.0) depends on cryptography (>=41.0.5,<45)
  "ecdsa==0.19.1",                     # <0.20.0
  "email-validator==2.2.0",
  "factory-boy==3.3.3",
  "flask-cors (==6.0.1)",
  "flask-jwt-extended==4.7.1",
  "flask-login==0.5.0",
  "flask-shell-ipython>=0.5.3",
  "flask-sqlalchemy==2.5.*",
  "flask-wtf==1.2.2",
  "flask==2.0.*",
  "flower==2.0.1",
  # FIXME (fseguin-pass) tornado is a flower dependency. Dependabot cannot bump it to 6.5 so we bump it here manually
  "tornado (>=6.5.1,<7.0)",
  "geoalchemy2>=0.18.0",
  "google-api-python-client==2.177.0",
  "google-auth==2.40.3",
  "google-cloud-bigquery==3.35.1",
  "google-cloud-storage==3.2.0",
  "google-cloud-tasks==2.19.3",
  "googleapis-common-protos>=1.70.0",
  "googlemaps>=4.10.0",
  "gql[requests]>=3.5.3",
  "gunicorn==23.0.0",
  "html5lib>=1.1",
  "ipython==9.4.0",
  "jinja2>=3.1.6",
  "libsass==0.23.0",
  "markupsafe==3.0.2",
  "openpyxl>=3.1.5",
  "phonenumberslite==9.0.10",
  "pillow==11.3.0",
  "prometheus-flask-exporter>=0.23.2",
  "protobuf==5.29.5",
  "psycopg2>=2.9.10",
  "py7zr>=1.0.0",
  # required by schwifty, upgraded manually because of setuptools
  "pycountry==24.6.1",
  "pydantic[email]==2.11.7",
  "pyjwt[crypto]==2.10.1",
  "pyopenssl==24.3.0",
  "pypdf>=5.9.0",
  "pyproj>=3.7.1",
  "pysaml2>=7.5.0",
  "python-dateutil==2.9.0.post0",
  "python-dotenv==1.1.1",
  "pyshp (>=2.3.1,<3.0.0)",        # Used for iris importation
  "pytz==2025.2",
  "rapidfuzz==3.13.0",
  "regex==2025.7.34",
  "requests==2.32.4",
  "rq==2.4.1",
  "schwifty==2025.7.0",
  "semver==3.0.4",
  "sentry-sdk[flask]==2.34.1",
  "shapely (>=2.1.1,<3.0.0)",      # Used for iris importation
  "slack-sdk==3.36.0",
  "spectree==1.2.1",
  # Do not use 1.4.46 that has a new
  # deprecation warning for which we're not ready
  # (https://docs.sqlalchemy.org/en/20/changelog/changelog_14.html#change-e67bfa1efbe52ae40aa842124bc40c51).
  "sqlalchemy[mypy]==1.4.54",
  "time-machine>=2.16.0",
  "transitions (>=0.9.3,<0.10.0)",
  "weasyprint==66.0",
  "werkzeug==2.0.3",
  "wtforms-sqlalchemy==0.4.2",
  "wtforms==3.2.1",
  "xlsxwriter==3.2.5",
  "zeep==4.3.1",
  "sqlalchemy-easy-softdelete @ git+https://github.com/pass-culture/sqlalchemy-easy-softdelete.git",
]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
commitizen = "^4.8.3"
debugpy = "^1.8.15"
djlint = "1.36.4"
fakeredis = "^2.30.3"
mypy = "1.13.0"
pgcli = "^4.3.0"
pytest = "^8.4.1"
pytest-dotenv = "^0.5.2"
pytest-flask = "^1.3.0"
pytest-mock = "^3.14.1"
pytest-socket = "^0.7.0"
pytest-split = "^0.10.0"
requests-mock = "^1.12.1"
ruff = "^0.12.7"
types-protobuf = "^6.30.2.20250703"
types-python-dateutil = "^2.9.0.20250809"
types-pytz = "^2025.2.0.20250809"
types-pyyaml = "^6.0.12.20250809"
types-redis = "^4.6.0.20241004"
types-requests = "2.32.4.20250809"
types-urllib3 = "^1.26.25.14"

[tool.mypy]
python_version = "3.11"
mypy_path = "stubs/"
disallow_untyped_defs = true
# The following line solves the internal mypy (v>1.4) error due to
# the usage of @declared_attr. See github issue here:
# https://github.com/sqlalchemy/sqlalchemy/issues/10282
preserve_asts = true
ignore_missing_imports = true
show_column_numbers = true
warn_unused_ignores = true
show_error_codes = true
warn_redundant_casts = true
local_partial_types = true
plugins = "sqlalchemy.ext.mypy.plugin, pydantic.mypy"
exclude = """
(?x)(
    tests/.*
    | src/pcapi/alembic/.*
  )
"""
# FIXME (dbaty, 2022-11-08): this is temporary until we find a
# solution to type hybrid_property-decorated methods. Otherwise, mypy
# reports a "truthy-function" error on code that uses these methods.
disable_error_code = ["truthy-function"]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
extend-select = [
  "I",       # isort
  "D419",    # empty-docstring
  "W291",    # trailing-whitespace
  "PLC0414", # useless-import-alias
  "PLC2401", # non-ascii-name
  "PLC3002", # unnecessary-direct-lambda-call
  "PLE0101", # return-in-init
  "F706",    # return-outside-function
  "F704",    # yield-outside-function
  "PLE0115", # nonlocal-and-global
  "PLE0116", # continue-in-finally
  "PLE0117", # nonlocal-without-binding
  "PLE0241", # duplicate-bases
  "PLE0302", # unexpected-special-method-signature
  "PLE0604", # invalid-all-object
  "PLE0605", # invalid-all-format
  "PLE0643", # potential-index-error
  "PLE0704", # misplaced-bare-raise
  "PLE1205", # logging-too-many-args
  "PLE1206", # logging-too-few-args
  "PLE1307", # bad-string-format-type
  "PLE1310", # bad-str-strip-call
  "PLE1507", # invalid-envvar-value
  "PLE1519", # singledispatch-method
  "PLE1520", # singledispatchmethod-function
  "PLE2502", # bidirectional-unicode
  "PLE2510", # invalid-character-backspace
  "PLE2512", # invalid-character-sub
  "PLE2513", # invalid-character-esc
  "PLE2514", # invalid-character-nul
  "PLE2515", # invalid-character-zero-width-space
  "UP004",   # useless-object-inheritance
  "PLR0206", # property-with-parameters
  "PLR1704", # redefined-argument-from-local
  "PLR1711", # useless-return
  "C416",    # unnecessary-comprehension
  "PLR1736", # unnecessary-list-index-lookup
  "PLW0120", # useless-else-on-loop
  "PLW0127", # self-assigning-variable
  "PLW0128", # redeclared-assigned-name
  "PLW0129", # assert-on-string-literal
  "B033",    # duplicate-value
  "PLW0131", # named-expr-without-context
  "PLW0211", # bad-staticmethod-argument
  "PLW0245", # super-without-brackets
  "PLW0406", # import-self
  "PLW0602", # global-variable-not-assigned
  "PLW0603", # global-statement
  "PLW0604", # global-at-module-level
  "F401",    # unused-import
  "F841",    # unused-variable
  "E722",    # bare-except
  "PLW0711", # binary-op-exception
  "PLW1501", # bad-open-mode
  # "PLW1508",  # invalid-envvar-default not compatible by what is done in settings.py
  "PLW1509", # subprocess-popen-preexec-fn
  "PLW2101", # useless-with-lock
  "PLW3301", # nested-min-max
  # "E501",  # line-too-long
  # "PLR0904",  # too-many-public-methods -> preview mode only
  # "PLR0911",  # too-many-return-statements
  # "PLR0912",  # too-many-branches
  # "PLR0913",  # too-many-arguments
  # "PLR0914",  # too-many-locals -> preview mode only
  # "PLR0915",  # too-many-statements
  # "PLR0917",  # too-many-positional-arguments -> preview mode only
  "S704",   # unsafe-markup-use
  "TID251", # banned-api (requests)
]

ignore = [
  "E712", # Avoid equality comparisons to `True`; use `if offer.audioDisabilityCompliant:` for truth checks (issue in assert)
  "E711", # Use 'is' instead of '==' to test for None -> several incompatibilities with SQLAlchemy
]

[tool.ruff.lint.flake8-tidy-imports]
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"requests".msg = "Use `pcapi.utils.requests` instead."

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"] # unused-import -> required in some init files

[tool.ruff.lint.isort]
case-sensitive = true
force-single-line = true
lines-after-imports = 2
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "tests",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
tests = ["tests"]

[tool.pytest.ini_options]
addopts = [
  "--verbose",
  "--tb=short",
  "--disable-socket",
  # Use network range 172.16.0.0/12 once pytest-socket supports it (https://github.com/miketheman/pytest-socket/pull/185)
  "--allow-hosts=127.0.0.1,::1,172.18.0.2,172.18.0.3,172.18.0.4,172.19.0.2,172.19.0.3,172.19.0.4,172.20.0.2,172.20.0.3,172.20.0.4,172.21.0.2,192.168.16.2", # allow connections to local Redis
  "-p no:warnings",
]
filterwarnings = [
  # Mark warnings as errors
  "error",
]
testpaths = ["tests"]
norecursedirs = [".git", "venv", ".pytest_cache"]
python_files = ["*test.py", "test*.py"]
python_classes = ["*Test"]
python_functions = ["test_*", "when_*", "expect_*", "should_*"]
env_files = ["local_test_env_file"]
junit_family = "xunit1"
markers = ["backoffice", "features", "settings"]
requests_mock_case_sensitive = true
verbosity_assertions = 2
