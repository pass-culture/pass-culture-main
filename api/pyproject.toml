[project]
name = "pcapi"
version = "0.0.0"
description = "The backend of the pass Culture"
license = "MPL-2.0"
authors = [{name = "Equipe pass Culture", email= "<contact@passculture.app>"}]
requires-python = ">=3.11,<4.0"

dependencies = [
"alembic==1.15.2",
"algoliasearch==3.0.0",
"authlib==1.5.2",
"babel==2.17.0",
"bcrypt==4.3.0",
"beautifulsoup4==4.13.3",
"boto3==1.35.99",  # For compatibility with Outscale, do not upgrade to 1.36 until they solved the issue: https://status.outscale.com/incidents/hcq9vmjkl0k9
"boussole==2.1.3",
"brevo-python==1.1.2",
"celery[redis]==5.5.1",
"click-option-group==0.5.7",
"click==8.1.8",
"clickhouse-sqlalchemy==0.2.7",
"cryptography==44.0.2",
"ecdsa==0.19.1", # <0.20.0
"email-validator==2.2.0",
"factory-boy==3.3.2",
"fiona>=1.10.1",
"flask-cors==5.0.1",
"flask-jwt-extended==4.7.1",
"flask-login==0.5.0",
"flask-shell-ipython>=0.5.3",
"flask-sqlalchemy==2.5.*",
"flask-wtf==1.2.2",
"flask==2.0.*",
"flower==2.0.1",
"geoalchemy2>=0.17.1",
"google-api-python-client==2.166.0",
"google-auth==2.38.0",
"google-cloud-bigquery==3.31.0",
"google-cloud-storage==3.1.0",
"google-cloud-tasks==2.19.2",
"googleapis-common-protos>=1.69.2",
"googlemaps>=4.10.0",
"gql[requests]>=3.5.2",
"gunicorn==23.0.0",
"html5lib>=1.1",
"ipython==9.1.0",
"jinja2>=3.1.6",
"libsass==0.23.0",
"markupsafe==3.0.2",
"openpyxl>=3.1.5",
"phonenumberslite==9.0.2",
"pillow==11.2.0",
"prometheus-flask-exporter>=0.23.2",
"psycopg2>=2.9.10",
"py7zr>=0.22.0",
# required by schwifty, upgraded manually because of setuptools
"pycountry==24.6.1",
"pydantic[email]==2.11.3",
"pyjwt[crypto]==2.10.1",
"pyopenssl==24.3.0",
"pypdf>=5.4.0",
"pyproj>=3.7.1",
"pysaml2>=7.5.0",
"python-dateutil==2.9.0.post0",
"python-dotenv==1.1.0",
"pytz==2025.2",
"rapidfuzz==3.13.0",
"requests==2.32.3",
"rq==2.3.1",
"schwifty==2025.1.0",
"semver==3.0.4",
"sentry-sdk[flask]==2.25.1",
"slack-sdk==3.35.0",
"spectree==1.2.1",
# Do not use 1.4.46 that has a new
# deprecation warning for which we're not ready
# (https://docs.sqlalchemy.org/en/20/changelog/changelog_14.html#change-e67bfa1efbe52ae40aa842124bc40c51).
"sqlalchemy[mypy]==1.4.54",
"time-machine>=2.16.0",
"weasyprint==65.0",
"werkzeug==2.0.3",
"wtforms-sqlalchemy==0.4.2",
"wtforms==3.2.1",
"xlsxwriter==3.2.2",
"zeep==4.3.1"
]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
commitizen = "^4.1.0"
debugpy = "^1.8.11"
djlint = "1.36.4"
fakeredis = "^2.26.2"
isort = "^5.13.2"
mypy = "1.13.0"
pgcli = "^4.1.0"
pylint = "3.3.3"
pylint-pydantic = "^0.3.5"
pytest = "^8.3.4"
pytest-dotenv = "^0.5.2"
pytest-flask = "^1.3.0"
pytest-mock = "^3.14.0"
pytest-socket = "^0.7.0"
pytest-split = "^0.10.0"
requests-mock = "^1.12.1"
types-protobuf = "^5.29.1.20241207"
types-python-dateutil = "^2.9.0.20241206"
types-pytz = "^2024.2.0.20241221"
types-pyyaml = "^6.0.12.20241230"
types-redis = "^4.6.0.20241004"
types-requests = "<2.33.0"
types-urllib3 = "^1.26.25.14"

[tool.black]
extend-exclude = '''
(
  /(
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
  )/
)
'''
include = '\.pyi?$'
line-length = 120
target-version = ['py310']


[tool.isort]
combine_as_imports = true
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = true
force_sort_within_sections = true
include_trailing_comma = true
known_tests = ["tests"]
line_length = 120
lines_after_imports = 2
multi_line_output = 3
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,TESTS,LOCALFOLDER"
use_parentheses = true


[tool.mypy]
python_version = "3.11"
mypy_path = "stubs/"
disallow_untyped_defs = true
follow_imports = "silent"
# The following line solves the internal mypy (v>1.4) error due to
# the usage of @declared_attr. See github issue here:
# https://github.com/sqlalchemy/sqlalchemy/issues/10282
preserve_asts = true
ignore_missing_imports = true
show_column_numbers = true
warn_unused_ignores = true
show_error_codes = true
warn_redundant_casts = true
local_partial_types = true
plugins = "sqlalchemy.ext.mypy.plugin, pydantic.mypy"
exclude = """
(?x)(
    tests/.*
    | src/pcapi/alembic/.*
  )
"""
# FIXME (dbaty, 2022-11-08): this is temporary until we find a
# solution to type hybrid_property-decorated methods. Otherwise, mypy
# reports a "truthy-function" error on code that uses these methods.
disable_error_code = ["truthy-function"]


[tool.pylint.MASTER]
# Include info messages into score so that pylint fails if we have
# such messages (e.g. "useless-suppression").
evaluation = "max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention + info) / statement) * 10))"
extension-pkg-whitelist = ["pydantic"]
load-plugins = ["pcapi.utils.pylint", "pylint_pydantic"]

[tool.pylint."MESSAGES CONTROL"]
enable = ["use-symbolic-message-instead", "useless-suppression"]
disable = [
    "arguments-differ",
    "arguments-renamed",
    "attribute-defined-outside-init",
    "consider-using-f-string",
    "cyclic-import",
    "duplicate-code",
    "fixme",
    "file-ignored",
    "import-outside-toplevel",
    "invalid-name",
    "line-too-long",
    "locally-disabled",
    "missing-docstring",
    "no-member",
    "protected-access",
    "raise-missing-from",
    "singleton-comparison",
    "superfluous-parens",
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-positional-arguments",
    "too-many-lines",
    "too-many-locals",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-statements",
    "ungrouped-imports",
    "unnecessary-lambda-assignment",
    "unused-argument",
    "use-dict-literal",
    "wrong-import-order",             # we have a custom isort config, which pylint can't grok
    "wrong-import-position",          # same reason
]

[tool.pylint.REPORTS]
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"

[tool.pylint.FORMAT]
max-line-length = 120


[tool.pytest.ini_options]
addopts = [
    "--verbose",
    "--tb=short",
    "--disable-socket",
    # Use network range 172.16.0.0/12 once pytest-socket supports it (https://github.com/miketheman/pytest-socket/pull/185)
    "--allow-hosts=127.0.0.1,::1,172.18.0.2,172.18.0.3,172.18.0.4,172.19.0.2,172.19.0.3,172.19.0.4,172.20.0.2,172.20.0.3,172.20.0.4,172.21.0.2,192.168.16.2", # allow connections to local Redis
    "-p no:warnings",
]
filterwarnings = [
    # Mark warnings as errors
    "error",
    # -------------- Temporary ignored warnings due to SLQAlchemy bump to 1.4 -------------- #
    # FIXME (lixxday, 2022/06/09)
    # Warning on deprecated sqla function as_scalar()
    "ignore:The Query.as_scalar\\(\\) method is deprecated and will be removed in a future release:sqlalchemy.exc.SADeprecationWarning",
    # Warning on SELECT with IN. Fix: pass a select() construct explicitly
    "ignore:Coercing Subquery object into a select\\(\\) for use in IN\\(\\):sqlalchemy.exc.SAWarning",
    # ---------------------------- #
]
testpaths = ["tests"]
norecursedirs = [".git", "venv", ".pytest_cache"]
python_files = ["*test.py", "test*.py"]
python_classes = ["*Test"]
python_functions = ["test_*", "when_*", "expect_*", "should_*"]
env_files = ["local_test_env_file"]
junit_family = "xunit1"
markers = ["backoffice", "features", "settings"]
requests_mock_case_sensitive = true
verbosity_assertions = 2
