"""un_nullable_fields_for_collective_booking
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "eae19dd056f4"
down_revision = "71e86ae4d410"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("collective_booking", "cancellationLimitDate", existing_type=postgresql.TIMESTAMP(), nullable=False)
    op.alter_column("collective_booking", "confirmationLimitDate", existing_type=postgresql.TIMESTAMP(), nullable=False)
    op.add_column(
        "collective_stock", sa.Column("isSoftDeleted", sa.Boolean(), server_default=sa.text("false"), nullable=False)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("collective_stock", "isSoftDeleted")
    op.alter_column("collective_booking", "confirmationLimitDate", existing_type=postgresql.TIMESTAMP(), nullable=True)
    op.alter_column("collective_booking", "cancellationLimitDate", existing_type=postgresql.TIMESTAMP(), nullable=True)
    # ### end Alembic commands ###
