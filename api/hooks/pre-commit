#!/bin/bash

#
# To disable some checks, set DISABLED_API_PRE_COMMIT_CHECKS
# environment variable. For example:
#
#     export DISABLED_API_PRE_COMMIT_CHECKS="mypy,pylint"
#


ALEMBIC_STAGED_FILES=$(git diff --staged --name-only -- 'api/src/pcapi/alembic/versions/*.py')
if [[ "$ALEMBIC_STAGED_FILES" != "" ]]; then
  echo -e "\033[0;96mMigration changes detected: $ALEMBIC_STAGED_FILES \033[0m"
  echo -e "\033[0;96mUpdating alembic_version_conflict_detection.txt \033[0m\n"
  pushd `pwd`
  cd api
  alembic --config alembic.ini heads > alembic_version_conflict_detection.txt
  git add alembic_version_conflict_detection.txt
  popd
fi

counter=0

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.py')
if [[ "$STAGED_FILES" = "" ]]; then
  exit 0
fi

LINTED_FILES=""

for FILE in $STAGED_FILES; do
  LINTED_FILES+=" ${FILE}"
done

if [[ ! ",${DISABLED_API_PRE_COMMIT_CHECKS}," =~ ",isort," ]]
then
    echo -ne "\033[0;96mRunning isort to organize imports...\033[0m"
    isort $LINTED_FILES --check-only --settings-file api/pyproject.toml 2>/dev/null
    if [[ "$?" != 0 ]]; then
      edited_files=$(isort $LINTED_FILES --settings-file api/pyproject.toml | sed -E "s/Fixing (.*)/  - \\1/g")
      # Go up 1 line to overwrite "Running..." line
      echo -e "\033[1F"
      echo -e "\033[0;91misort: Add edited files to your commit:"
      echo -e "${edited_files}\033[0m"
      counter=$((counter + 1))
    else
      echo -e "\033[2K\r\033[0;92misort: Imports correctly sorted\033[0m"
    fi
fi

if [[ ! ",${DISABLED_API_PRE_COMMIT_CHECKS}," =~ ",black," ]]
then
    echo -ne "\033[0;96mRunning black to format files...\033[0m"
    black $LINTED_FILES --check --quiet --config api/pyproject.toml
    if [[ "$?" != 0 ]]; then
      edited_files=$(black $LINTED_FILES --config api/pyproject.toml 2>&1 | grep "^reformatted " | sed -E "s/reformatted (.*)/  - \\1/g")
      counter=$((counter + 1))
      # Go up 1 line to overwrite "Running..." line
      echo -e "\033[1F"
      echo -e "\033[0;91mblack: Add edited files to your commit:"
      echo -e "${edited_files}\033[0m"
    else
      echo -e "\033[2K\r\033[0;92mblack: Code correctly formatted\033[0m"
    fi
fi

if [[ ! ",${DISABLED_API_PRE_COMMIT_CHECKS}," =~ ",mypy," ]]
then
    echo -e "\033[0;96mRunning mypy for type checking (non-blocking step)...\033[0m"
    mypy $LINTED_FILES --pretty --show-error-codes --config-file api/mypy.ini
fi

if [[ ! ",${DISABLED_API_PRE_COMMIT_CHECKS}," =~ ",pylint," ]]
then
    echo -e "\033[0;96mRunning pylint for code linting...\033[0m"
    pylint $LINTED_FILES --output-format="colorized" --score=no --rcfile=api/.pylintrc
    if [[ "$?" != 0 ]]; then
        counter=$((counter + 1))
    fi
fi

if [[ $counter > 0 ]]; then
  echo -e "\033[0;96mIf you want to bypass these checks, add --no-verify option when committing.\033[0m"
  exit 1
fi
