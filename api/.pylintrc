[MASTER]

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=lxml,posix_ipc,spidev,netifaces,pydantic,math,binascii,unicodedata,pydantic

# Add files or directories to the blacklist. They should be base names, not
# paths.
#ignore=

# Add files or directories matching the regex patterns to the blacklist. The
# regex matches against base names, not paths.
#ignore-patterns=

# List of plugins (as comma separated values of python module names) to load,
# usually to register additional checkers.
load-plugins=
    pylint_strict_informational


[MESSAGES CONTROL]

enable=
    use-symbolic-message-instead,
    useless-suppression

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"

# FIXME (dbaty, 2020-11-03): we should enable back "line-too-long".
# Most cases that cannot be fixed or obviously disabled are test
# functions. And I believe that they really should be renamed to be
# less than 120 characters long.

# FIXME (dbaty, 2020-11-03): we probably could enable back
# "singleton-comparison". Most cases seem to be variations of:
#     assert some_boolean == True
#     Model.query.filter_by(Model.boolean_attr == None)

disable=
    arguments-differ,
    attribute-defined-outside-init,
    bad-continuation,
    cyclic-import,
    duplicate-code,
    fixme,
    file-ignored,
    import-outside-toplevel,
    invalid-name,
    line-too-long,
    locally-enabled,
    locally-disabled,
    missing-docstring,
    no-init,
    no-member,
    no-self-use,
    old-style-class,
    protected-access,
    raise-missing-from,
    redefined-variable-type,
    singleton-comparison,
    superfluous-parens,
    too-few-public-methods,
    too-many-ancestors,
    too-many-arguments,
    too-many-branches,
    too-many-instance-attributes,
    too-many-lines,
    too-many-locals,
    too-many-public-methods,
    too-many-statements,
    ungrouped-imports,
    unused-argument,
    useless-return,
    wrong-import-order,  # we have a custom isort config which pylint can't grok
    wrong-import-position  # same reason


[REPORTS]

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120
