version: "3.7"

services:
  postgres:
    image: circleci/postgres:12.3-postgis
    container_name: pc-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - env_file
    networks:
      - db_nw
    ports:
      - 5434:5432
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on

  postgres-test:
    image: circleci/postgres:12.3-postgis
    container_name: pc-postgres-pytest
    volumes:
      - postgres_data_test:/var/lib/postgresql-test/data
    environment:
      - POSTGRES_DB=pass_culture
      - POSTGRES_USER=pytest
      - POSTGRES_PASSWORD=pytest
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    ports:
      - 5433:5432
    networks:
      - db_nw

  flask:
    image: passcultureapp/api-flask:latest
    working_dir: /opt/services/flaskapp/src
    container_name: pc-flask
    command: ["./start-api-when-database-is-ready.sh"]
    volumes:
      - ./api:/opt/services/flaskapp/src
    env_file:
      - env_file
      - ${ENV:-development}_env_file
    networks:
      - db_nw
      - web_nw
    depends_on:
      - postgres
      - redis
      - postgres-test

  redis:
    image: scalingo/redis
    container_name: pc-redis
    command: redis-server
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - db_nw

  nginx:
    build: nginx
    container_name: pc-nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./certs-data:/data/letsencrypt
    networks:
      - web_nw
    depends_on:
      - flask

networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge

volumes:
  postgres_data:
  postgres_data_test:
  redis_data:
