version: "3.7"

services:
  postgres:
    image: postgres:11.6-alpine
    container_name: pc-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - env_file
    networks:
      - db_nw
    ports:
      - 5434:5432
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on

  postgres-test:
    image: postgres:11.6-alpine
    container_name: pc-postgres-pytest
    volumes:
      - postgres_data_test:/var/lib/postgresql-test/data
    environment:
      - POSTGRES_DB=pass_culture
      - POSTGRES_USER=pytest
      - POSTGRES_PASSWORD=pytest
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    ports:
      - 5433:5432
    networks:
      - db_nw

  flask:
    image: passcultureapp/api-flask:latest
    container_name: pc-flask
    command: >
      bash -c "set -x;
               cd /opt/services/flaskapp/src;
               pip install -r ./requirements.txt;
               python -m nltk.downloader punkt stopwords;
               while true; do python app.py; done;"
    volumes:
      - ./api:/opt/services/flaskapp/src
    env_file:
      - env_file
      - ${ENV:-development}_env_file
    environment:
      - ENV=${ENV:-development}
      - EXPORT_TOKEN=$EXPORT_TOKEN
      - MAILJET_API_KEY=$MAILJET_API_KEY
      - MAILJET_API_SECRET=$MAILJET_API_SECRET
      - OVH_BUCKET_NAME=$OVH_BUCKET_NAME
      - OVH_TENANT_NAME=$OVH_TENANT_NAME
      - OVH_PASSWORD=$OVH_PASSWORD
      - OVH_USER=$OVH_USER
      - PASS_CULTURE_IBAN=$PASS_CULTURE_IBAN
      - PASS_CULTURE_BIC=$PASS_CULTURE_BIC
      - PASS_CULTURE_REMITTANCE_CODE=$PASS_CULTURE_REMITTANCE_CODE
      - PAYMENTS_DETAILS_RECIPIENTS=$PAYMENTS_DETAILS_RECIPIENTS
      - PROFILE_REQUESTS=$PROFILE_REQUESTS
      - WALLET_BALANCES_RECIPIENTS=$WALLET_BALANCES_RECIPIENTS
      - TRANSACTIONS_RECIPIENTS=$TRANSACTIONS_RECIPIENTS
      - PAYMENTS_REPORT_RECIPIENTS=$PAYMENTS_REPORT_RECIPIENTS
      - ACTIVATION_USER_RECIPIENTS=$ACTIVATION_USER_RECIPIENTS
      - OBJECT_STORAGE_URL=$OBJECT_STORAGE_URL
      - DEMARCHES_SIMPLIFIEES_RIB_PROCEDURE_ID=$DEMARCHES_SIMPLIFIEES_RIB_PROCEDURE_ID
      - DEMARCHES_SIMPLIFIEES_ENROLLMENT_PROCEDURE_ID=$DEMARCHES_SIMPLIFIEES_ENROLLMENT_PROCEDURE_ID
      - DEMARCHES_SIMPLIFIEES_TOKEN=$DEMARCHES_SIMPLIFIEES_TOKEN
      - CRON_RETRIEVE_OFFERERS_BANK_INFORMATION=$CRON_RETRIEVE_OFFERERS_BANK_INFORMATION
      - SUPPORT_EMAIL_ADDRESS=$SUPPORT_EMAIL_ADDRESS
      - ADMINISTRATION_EMAIL_ADDRESS=$ADMINISTRATION_EMAIL_ADDRESS
      - DEV_EMAIL_ADDRESS=$DEV_EMAIL_ADDRESS
      - CRON_BENEFICIARIES_ENROLLMENT=$CRON_BENEFICIARIES_ENROLLMENT
      - PC_GOOGLE_KEY=$PC_GOOGLE_KEY
      - DASHBOARD_GSHEET_NAME=$DASHBOARD_GSHEET_NAME
      - ALLOCINE_API_KEY=$ALLOCINE_API_KEY
      - ALGOLIA_APPLICATION_ID=$ALGOLIA_APPLICATION_ID
      - ALGOLIA_API_KEY=$ALGOLIA_API_KEY
      - ALGOLIA_INDEX_NAME=$ALGOLIA_INDEX_NAME
    networks:
      - db_nw
      - web_nw
    depends_on:
      - postgres
      - redis
      - postgres-test

  redis:
    image: scalingo/redis
    container_name: pc-redis
    command: redis-server
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - db_nw

  nginx:
    build: nginx
    container_name: pc-nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./certs-data:/data/letsencrypt
    networks:
      - web_nw
    depends_on:
      - flask

networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge

volumes:
  postgres_data:
  postgres_data_test:
  redis_data:
