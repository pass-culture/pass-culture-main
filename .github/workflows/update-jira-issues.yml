name: Update jira issues
concurrency: ${{ github.workflow }}-${{ github.ref }}
on:
  push:
    branches:
      - master
jobs:
  issue-number:
    outputs:
      status: ${{ steps.issue-check.outputs.status }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false
          fetch-depth: 0 # Fetch all history for "git rev-list --count HEAD" info

      - name: Get commit info
        id: get_commit_info
        run: |
          COMMIT_NUMBER=$(git rev-list --count HEAD)
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "::set-output name=number::$COMMIT_NUMBER"
          echo "::set-output name=hash::$COMMIT_HASH"

      - name: Setup gajira cli
        uses: atlassian/gajira-cli@master
        with:
          version: 1.0.20

      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Get jira issue key in commit
        id: get_jira_key
        uses: atlassian/gajira-find-issue-key@master
        with:
          from: commits

      # set the output with the issue number, only if the issue type is not equal to "OPS Task"
      - id: issue-check
        name: issue check
        if: ${{ steps.get_jira_key.outputs.issue != null }}
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
          chmod +x ./jq
          issue_type=$(jira view ${{ steps.get_jira_key.outputs.issue }} -t json | ./jq -r '.fields.issuetype.name')
          if [[ $issue_type != "OPS Task" ]]; then 
            echo "status=${{ steps.get_jira_key.outputs.issue }}" >> $GITHUB_OUTPUT
          fi

  # run only if previous job issue-number has set his output to the issue number 
  update-jira-issues:
    runs-on: ubuntu-latest
    needs: issue-number
    if: needs.issue-number.outputs.status != null
    steps:
      - name: Setup gajira cli
        uses: atlassian/gajira-cli@master
        with:
          version: 1.0.20

      - name: Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Get jira previous commit number
        id: get_previous_commit_number
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        # The jira view command uses .jira.d/templates/view template by default
        run: echo "::set-output name=value::$(jira view ${{ needs.issue-number.outputs.status }})"

      - name: Mark issue as not deployable
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        if: ${{ steps.get_previous_commit_number.outputs.value != null && steps.get_previous_commit_number.outputs.value != '<no value>' }}
        # If previous_commit_number is not null, it means this push-to-master is a fix.
        # All commits with number between previous_commit_number and this commit number are therefore not safe to deploy.
        # So mark them as "impropre: true".

        # The echo command is to clear jira config.yml file set in get jira issue step
        # The jira edit command uses .jira.d/templates/edit template by default
        run: |
          echo "issue:" >> $HOME/.jira.d/config.yml
          jira edit --query='"Numéro de commit[Number]" > ${{ steps.get_previous_commit_number.outputs.value }}' --override customfield_10044=true --noedit

      - name: Push commit number and commit hash to jira issue
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          jira edit ${{ steps.get_jira_key.outputs.issue }} \
            --override customfield_10044=false \
            --override customfield_10059=${{ steps.get_commit_info.outputs.number }} \
            --override customfield_10060=${{ steps.get_commit_info.outputs.hash }} \
            --noedit
