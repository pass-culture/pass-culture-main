name: "[PRO] Deploy PR version for validation"

on:
  workflow_call:
    inputs:
      ENV:
        type: string
        required: true
      PUSH_RELEASE_TO_SENTRY:
        description: "If true, creates a release in Sentry and uploads sourcemaps"
        type: boolean
        default: false
      CHANNEL:
        type: string
        required: true
      EXPIRES:
        type: string
        default: "2d"
      REF:
        type: string
        required: true
    secrets:
      GCP_SERVICE_ACCOUNT:
        required: true
      GCP_WORKLOAD_IDENTITY_PROVIDER:
        required: true

env:
  CACHE_BUCKET_NAME: passculture-infra-prod-github-runner-cache

jobs:
  deploy_on_firebase:
    permissions: write-all
    defaults:
      run:
        working-directory: pro
    runs-on: [self-hosted, linux, x64]
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.REF }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'pro/.nvmrc'
      - id: openid-auth
        name: "OpenID Connect Authentication"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Get Secret
        id: "secrets"
        uses: "google-github-actions/get-secretmanager-secrets@v1"
        with:
          secrets: |-
            FIREBASE_TOKEN:passculture-metier-ehp/pc_pro_${{ inputs.ENV }}_firebase_json
            SENTRY_TOKEN:passculture-metier-ehp/passculture-app-pro-sentry-token
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: kopax-polyconseil/gcs-cache-action@v1.0.0
        with:
          compression-method: gzip
          bucket: ${{ env.CACHE_BUCKET_NAME }}
          path: |
            **/node_modules
          key: v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --immutable
      - run: |
          set -a; 
          source ../config/run_envs/${{ inputs.ENV }};
          yarn build:${{ inputs.ENV }};
        env:
          # By default NodeJS processes are limited to 512MB of memory
          # This is not enough for the build process when compiling sourcemaps
          # Increases the limit so that the build doesnt fail
          NODE_OPTIONS: --max_old_space_size=4096
      - if: ${{ inputs.ENV != 'testing' }}
        run: |
          cat package.json | grep -E '"version": "[0-9]+.[0-9]+.[0-9]+"' | grep -Eo '[0-9]+.[0-9]+.[0-9]+' > build/version.txt
      - name: Create Sentry release
        if: ${{ inputs.PUSH_RELEASE_TO_SENTRY }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ steps.secrets.outputs.SENTRY_TOKEN }}
          SENTRY_ORG: sentry
          SENTRY_PROJECT: pro
          SENTRY_URL: https://sentry.passculture.team/
        with:
          sourcemaps: ./build
          working_directory: pro
          version: ${{ inputs.CHANNEL }}
          url_prefix: "~"
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: ${{ steps.secrets.outputs.FIREBASE_TOKEN }}
          expires: ${{ inputs.EXPIRES }}
          projectId: pc-pro-${{ inputs.ENV }}
          entryPoint: pro
          channelId: ${{ inputs.CHANNEL }}
