name: "[Deployment] Deploy a release"

run-name: Deploy ${{ github.ref }} to ${{ github.event.inputs.target_environment }}

on:
  workflow_dispatch:
    inputs:
      target_environment:
        type: choice
        description: Environnement cible
        required: true
        options:
          - staging
          - production
          - testing

jobs:
  check-worflow-ref:
    name: Check worflow ref
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Check worflow ref
        run: |
          echo "Deploying to ${{ github.event.inputs.target_environment }} from ref: ${{ github.ref }}"
          if ! [[ ${{ github.ref }} == refs\/tags\/v* ]]; then
              echo "This workflow can only be triggered from a tag (starting with a 'v')"
              exit 1
          fi

  version:
    environment:  ${{ fromJSON('["deploy", "testing"]')[github.event.inputs.target_environment == 'testing'] }}
    runs-on: [self-hosted, linux, x64]
    needs: check-worflow-ref
    outputs:
      APP_VERSION: ${{ steps.app-version.outputs.APP_VERSION }}
    steps:
      - name: Checkout Release
        uses: actions/checkout@v3
        with:
          ref: "${{ github.ref }}"
          fetch-depth: 0

      - name: Get app version
        id: app-version
        run: |
          echo APP_VERSION="$(cat ./api/version.txt)" >> $GITHUB_OUTPUT

  deploy-ehp:
    if: github.event.inputs.target_environment != 'production'
    needs:
      - version
    name: "Deploy on EHP environnement"
    uses: ./.github/workflows/deploy.yml
    with:
      environment: ${{ github.event.inputs.target_environment }}
      app_version: ${{ needs.version.outputs.APP_VERSION }}
      teleport_version: 11.1.1
      teleport_proxy: teleport.ehp.passculture.team:443
      teleport_kubernetes_cluster: passculture-metier-ehp
      deploy_api: true
      deploy_pro: true
    secrets: inherit

  deploy-integration:
    if: github.event.inputs.target_environment == 'production'
    needs:
      - version
    name: "Deploy on integration environnement"
    uses: ./.github/workflows/deploy.yml
    with:
      environment: integration
      app_version: ${{ needs.version.outputs.APP_VERSION }}
      teleport_version: 11.1.1
      teleport_proxy: teleport.ehp.passculture.team:443
      teleport_kubernetes_cluster: passculture-metier-ehp
      deploy_api: true
      deploy_pro: true
    secrets: inherit

  deploy-prod:
    if: github.event.inputs.target_environment == 'production'
    needs:
      - version
    name: "Deploy on production environnement"
    uses: ./.github/workflows/deploy.yml
    with:
      environment: ${{ github.event.inputs.target_environment }}
      app_version: ${{ needs.version.outputs.APP_VERSION }}
      teleport_version: 11.1.1
      teleport_proxy: teleport.passculture.team:443
      teleport_kubernetes_cluster: passculture-metier-prod
      deploy_api: true
      deploy_pro: true
    secrets: inherit

  notification:
    name: "Notification"
    runs-on: [self-hosted, linux, x64]
    if: ${{ always() }}
    needs:
      - version
      - deploy-prod
      - deploy-ehp
    steps:
      - uses: technote-space/workflow-conclusion-action@v3

      - name: Post to a Slack channel
        id: slack
        if: ${{ always() }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ fromJSON('["C037KSSG38D", "CQAMNFVPS"]')[github.event.inputs.target_environment != 'testing'] }}
          payload: |
            {
                    "attachments": [
                        {
                            "mrkdwn_in": ["text"],
                            "color": "${{ fromJSON('["#36a64f", "#A30002"]')[ env.WORKFLOW_CONCLUSION == 'failure'] }}",
                            "author_name": "${{github.actor}}",
                            "author_link": "https://github.com/${{github.actor}}",
                            "author_icon": "https://github.com/${{github.actor}}.png",
                            "title": "PCAPI Deployment",
                            "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                            "text": "Le déploiement de la version `v${{ needs.version.outputs.APP_VERSION }}` a ${{ fromJSON('["réussi", "échoué"]')[env.WORKFLOW_CONCLUSION == 'failure'] }} sur `${{ github.event.inputs.target_environment }}` ${{ fromJSON('[":muscle:", ":boom:"]')[env.WORKFLOW_CONCLUSION == 'failure'] }}"
                        }
                    ],
                    "unfurl_links": false,
                    "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
