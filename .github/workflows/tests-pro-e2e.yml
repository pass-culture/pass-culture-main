name: Tests E2E pro
on:
  workflow_call:
    inputs:
      CACHE_BUCKET_NAME:
        type: string
        required: true
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        type: string
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        type: string
        required: true

defaults:
  run:
    working-directory: pro

permissions:
  contents: "read"
  id-token: "write"

jobs:
  tests-pro-e2e-tests:
    name: "E2E tests"
    runs-on: [self-hosted, linux, x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: "pro/.nvmrc"
      - name: Run API server
        run: docker-compose -f ../docker-compose-backend.yml up flask postgres redis --build -d
      - name: Wait for migrations to be run
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http://localhost:5001/health/api
          timeout: 120000
      - name: Load sandbox
        run: ../pc sandbox -n industrial
      # Doc : https://github.com/cypress-io/github-action
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          build: yarn build:development
          start: yarn serve
          config: baseUrl=http://localhost:3001
          browser: chrome
          wait-on: "http://localhost:3001,http://localhost:5001/health/api,http://localhost:5001/health/database"
          wait-on-timeout: 600
          working-directory: pro
      - name: "OpenID Connect Authentication"
        if: always()
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: 'Move cypress videos'
        run: |
          mkdir -p cypress/videos/${{ github.ref }}/${{ github.sha }} && \
          mv cypress/videos/*.mp4 cypress/videos/${{ github.ref }}/${{ github.sha }}/
      - name: Archive E2E results
        if: always()
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: "pro/cypress/videos"
          destination: "${{ inputs.CACHE_BUCKET_NAME }}/pro/cypress/videos/e2e-artifacts"

  notification:
    name: "Notification"
    runs-on: [self-hosted, linux, x64]
    if: ${{ failure() && github.ref == 'refs/heads/master' }}
    needs:
      - tests-pro-e2e-tests
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Authentification to Google
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

      - name: Get Secret
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # channel #dev
          channel-id: "CPZ7U1CNP"
          payload: |
            {
            "attachments": [
              {
                "mrkdwn_in": ["text"],
                "color": "#A30002",
                "author_name": "${{github.actor}}",
                "author_link": "https://github.com/${{github.actor}}",
                "author_icon": "https://github.com/${{github.actor}}.png",
                "title": "Tests pro E2E",
                "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                "text": "Les tests pro E2E Ã©chouent sur `master` :boom:"
              }
            ],
            "unfurl_links": false,
            "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
