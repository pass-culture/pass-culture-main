name: "[Deployment] Create a release"

on:
  workflow_dispatch:
    inputs:
      commitHash:
        description: "Hash du commit à déployer (ex: cadd172232c80206107e2f0122542adf19fb42af)"
        required: true
        type: string

      releaseNumber:
        description: "Numéro de l'itération (ex: 199)"
        required: true
        type: string

jobs:
  build-and-tag-version:
    name: Build and tag version
    uses: ./.github/workflows/reusable--build-and-tag.yml
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
    with:
      base_ref: ${{ github.event.inputs.commitHash }}
      tag_number: ${{ github.event.inputs.releaseNumber }}.0.0

  create-pro-staging-release:
    needs:
      - build-and-tag-version
    uses: ./.github/workflows/deploy-pro-pr-version-generic.yml
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
    with:
      ENV: staging
      CHANNEL: "${{ github.event.inputs.releaseNumber }}.0.0"
      EXPIRES: "30d"
      PUSH_RELEASE_TO_SENTRY: true
      REF: v${{ github.event.inputs.releaseNumber }}.0.0

  create-pro-integration-release:
    needs:
      - build-and-tag-version
    uses: ./.github/workflows/deploy-pro-pr-version-generic.yml
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
    with:
      ENV: integration
      CHANNEL: "${{ github.event.inputs.releaseNumber }}.0.0"
      EXPIRES: "30d"
      REF: v${{ github.event.inputs.releaseNumber }}.0.0

  create-pro-production-release:
    needs:
      - build-and-tag-version
    uses: ./.github/workflows/deploy-pro-pr-version-generic.yml
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
    with:
      ENV: production
      CHANNEL: "${{ github.event.inputs.releaseNumber }}.0.0"
      EXPIRES: "30d"
      REF: v${{ github.event.inputs.releaseNumber }}.0.0
      PUSH_RELEASE_TO_SENTRY: true

  create-maintenance-branch:
    name: Create maintenance branch
    needs:
      - build-and-tag-version
      - create-pro-production-release
      - create-pro-staging-release
      - create-pro-integration-release
    runs-on: [self-hosted, linux, x64]
    env:
      MAINTENANCE_BRANCH: maint/v${{ github.event.inputs.releaseNumber }}
    steps:
      - name: Checkout new tag
        uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseNumber }}.0.0
      - name: Create maintenance branch
        run: |
          git checkout -b "$MAINTENANCE_BRANCH"
          git push origin "$MAINTENANCE_BRANCH"
