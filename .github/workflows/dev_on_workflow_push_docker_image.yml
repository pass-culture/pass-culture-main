name: '3 [on_workflow] push docker image'

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      commit-hash:
        required: true
        type: string
      checksum-tag:
        required: true
        type: string
      tag-latest:
        required: false
        type: boolean
        default: false
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        required: true

env:
  registry: europe-west1-docker.pkg.dev/passculture-infra-prod/pass-culture-artifact-registry

jobs:
  push-docker-image:
    name: "Push ${{ inputs.image }}"
    runs-on: ubuntu-latest
    steps:
      - name: "Authentification to Google"
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get Secret"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER:passculture-metier-ehp/infra-prod-gcp-workload-identity-provider
            ARTIFACT_REGISTRY_SERVICE_ACCOUNT:passculture-metier-ehp/passculture-main-artifact-registry-service-account
      - name: "OpenID Connect Authentication"
        id: openid-auth
        uses: 'google-github-actions/auth@v2'
        with:
          create_credentials_file: false
          token_format: 'access_token'
          workload_identity_provider: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - name: 'Docker login'
        uses: 'docker/login-action@v3'
        id: "docker-login"
        with:
          registry: 'europe-west1-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.openid-auth.outputs.access_token }}'
      - name: "Compute docker image name:tag"
        id: compute-image-name
        run: echo "image_name=${{ env.registry }}/${{ inputs.image }}:${{ inputs.checksum-tag }}" | tee -a ${GITHUB_OUTPUT}
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.image }}-${{ inputs.checksum-tag }}.tar
          path: ${{ runner.temp }}
      - name: "Load and push docker image"
        run: |
          docker load --input ${{ runner.temp }}/${{ inputs.image }}-${{ inputs.checksum-tag }}.tar
          docker image tag ${{ steps.compute-image-name.outputs.image_name }} "${{ env.registry }}/${{ inputs.image }}:${{ inputs.commit-hash }}"
          if [ ${{ inputs.tag-latest }} == 'true' ]; then
            docker image tag ${{ steps.compute-image-name.outputs.image_name }} "${{ env.registry }}/${{ inputs.image }}:latest"
          fi
          docker image push --all-tags ${{ env.registry }}/${{ inputs.image }} 
