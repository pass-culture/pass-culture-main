name: Tests pro
on: workflow_call

env:
  CACHE_BUCKET_NAME: passculture-infra-prod-github-runner-cache

defaults:
  run:
    working-directory: pro

permissions:
   contents: 'read'
   id-token: 'write'

jobs:
  type-check:
    name: "Type check"
    runs-on: [self-hosted, linux, x64]
    container:
      image: node:18
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'pro/.nvmrc'
      - name: "OpenID Connect Authentication"
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: mansagroup/gcs-cache-action@867797f1a78d69e008ad0a321c1459ddd619e9fd
        with:
          bucket: ${{ env.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --immutable
      - run: yarn tsc -b

  quality-check:
    name: "Quality check"
    runs-on: [self-hosted, linux, x64]
    container:
      image: node:18
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'pro/.nvmrc'
      - name: "OpenID Connect Authentication"
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: mansagroup/gcs-cache-action@867797f1a78d69e008ad0a321c1459ddd619e9fd
        with:
          bucket: ${{ env.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --immutable
      - run: yarn lint:dead-code
      - run: yarn lint:js --max-warnings 0

  style-quality-check:
    name: "Style quality check"
    runs-on: [self-hosted, linux, x64]
    container:
      image: node:18
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'pro/.nvmrc'
      - name: "OpenID Connect Authentication"
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: mansagroup/gcs-cache-action@867797f1a78d69e008ad0a321c1459ddd619e9fd
        with:
          bucket: ${{ env.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --immutable
      - run: yarn lint:scss --max-warnings 0

  tests-pro-unit-tests:
    name: "Unit tests"
    runs-on: [self-hosted, linux, x64]
    container:
      image: node:18
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          git config --global --add safe.directory /__w/pass-culture-main/pass-culture-main
          git fetch --no-tags origin +refs/heads/master:refs/remotes/origin/master
          git update-ref refs/heads/master refs/remotes/origin/master
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'pro/.nvmrc'
      - name: "OpenID Connect Authentication"
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Cache the node_modules
        id: yarn-modules-cache
        uses: mansagroup/gcs-cache-action@867797f1a78d69e008ad0a321c1459ddd619e9fd
        with:
          bucket: ${{ env.CACHE_BUCKET_NAME }}
          path: |
            node_modules
            ~/.cache/yarn
          key: v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-pro-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --immutable
      - name: Run tests with coverage
        run: yarn test:unit:ci
      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: pro
          args: -Dsonar.qualitygate.wait=${{ github.event_name == 'pull_request' && 'true' || 'false'  }}
      - if: ${{ failure() && github.ref == 'refs/heads/master'  }}
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # channel #dev
          channel-id: "CPZ7U1CNP"
          payload: |
            {
            "attachments": [
              {
                "mrkdwn_in": ["text"],
                "color": "#A30002",
                "author_name": "${{github.actor}}",
                "author_link": "https://github.com/${{github.actor}}",
                "author_icon": "https://github.com/${{github.actor}}.png",
                "title": "Pro tests",
                "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                "text": "Les tests unitaires de pro Ã©chouent sur `master` :boom:"
              }
            ],
            "unfurl_links": false,
            "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  tests-pro-e2e-tests:
    name: "E2E tests"
    runs-on: [self-hosted, linux, x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'pro/.nvmrc'
      - name: Run API server
        run: docker-compose -f ../docker-compose-backend.yml up --build -d
      - name: Wait for migrations to be run
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http://localhost/health/api
      - name: Load sandbox
        run: ../pc sandbox -n industrial
      # Doc : https://github.com/cypress-io/github-action
      - name: Cypress run
        uses: cypress-io/github-action@v5
        # E2E tests are not stable enough for now.
        # Once they are reliable, we can remove the following line.
        continue-on-error: true
        with:
          build: yarn build:development
          start: yarn serve
          config: baseUrl=http://localhost:3001
          browser: chrome
          wait-on: "http://localhost:3001,http://localhost/health/api,http://localhost/health/database"
          wait-on-timeout: 600
          working-directory: pro
      - name: "OpenID Connect Authentication"
        if: always()
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Archive E2E results
        if: always()
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: 'pro/cypress/videos'
          destination: '${{ env.CACHE_BUCKET_NAME }}/pro/cypress/videos/e2e-artifacts'
