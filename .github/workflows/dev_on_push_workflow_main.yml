name: Test main
run-name: Test main${{ github.ref == 'refs/heads/master' && ' and deploy to testing' || '' }}
on:
  push:
    branches:
      - master
      - "maint/**"
  pull_request:
    branches-ignore:
      - docs

permissions: write-all

concurrency:
  # cancel previous workflow of the same branch except on master
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref == 'refs/heads/master' && false || true }}

jobs:
  check-api-folder-changes:
    name: Check api folder changes
    uses: ./.github/workflows/dev_on_workflow_check_folder_changes.yml
    with:
      folder: api

  check-pro-folder-changes:
    name: Check pro folder changes
    uses: ./.github/workflows/dev_on_workflow_check_folder_changes.yml
    with:
      folder: pro

  build-api:
    name: Build API (backend) Docker image
    needs:
      - check-api-folder-changes
      - check-pro-folder-changes
    if: |
      needs.check-api-folder-changes.outputs.folder_changed == 'true' ||
      needs.check-pro-folder-changes.outputs.folder_changed == 'true' ||
      github.ref == 'refs/heads/master' ||
      startsWith(github.ref,'refs/heads/maint/v')
    uses: ./.github/workflows/dev_on_workflow_build_and_push_docker_images.yml
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      tag: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      # Needed to run end-to-end tests, i.e. when either "pro" or
      # "api" source code changes, which is the condition under which
      # this step is run. In other words: always.
      pcapi: true
      # Extra when tests are run on master before deployment on testing.
      console: ${{ github.ref == 'refs/heads/master' }}
      # Needed to run backend tests.
      tests: ${{ needs.check-api-folder-changes.outputs.folder_changed == 'true' || github.ref == 'refs/heads/master' || startsWith(github.ref,'refs/heads/maint/v') }}
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

  test-api:
    name: Test api
    needs:
      - check-api-folder-changes
      - build-api
    if: |
      needs.check-api-folder-changes.outputs.folder_changed == 'true' ||
      github.ref == 'refs/heads/master' ||
      startsWith(github.ref,'refs/heads/maint/v')
    uses: ./.github/workflows/dev_on_workflow_tests_api.yml
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

  test-pro:
    needs: check-pro-folder-changes
    if: |
      needs.check-pro-folder-changes.outputs.folder_changed == 'true' ||
      github.ref == 'refs/heads/master' ||
      startsWith(github.ref,'refs/heads/maint/v')
    name: Tests pro
    uses: ./.github/workflows/dev_on_workflow_tests_pro.yml
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
    with:
      CACHE_BUCKET_NAME: passculture-infra-prod-github-runner-cache

  test-pro-e2e:
    needs:
      - check-api-folder-changes
      - check-pro-folder-changes
      - build-api
    if: |
      needs.check-api-folder-changes.outputs.folder_changed == 'true' ||
      needs.check-pro-folder-changes.outputs.folder_changed == 'true' ||
      github.ref == 'refs/heads/master' ||
      startsWith(github.ref,'refs/heads/maint/v')
    name: Tests pro E2E
    uses: ./.github/workflows/dev_on_workflow_tests_pro_e2e.yml
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
    with:
      CACHE_BUCKET_NAME: passculture-infra-prod-github-runner-cache

  dependabot-auto-merge:
    needs:
      - test-pro
    if: |
      github.event_name == 'pull_request' &&
      github.actor == 'dependabot[bot]'
    uses: ./.github/workflows/dev_on_workflow_dependabot_auto_merge.yml

  deploy-to-testing:
    name: Deploy to testing
    needs:
      - test-api
      - test-pro
    if: |
      always() &&
      github.ref == 'refs/heads/master' &&
      (needs.test-api.result == 'success' || needs.test-api.result == 'skipped') &&
      (needs.test-pro.result == 'success' || needs.test-pro.result == 'skipped')
    uses: ./.github/workflows/deploy.yml
    with:
      environment: testing
      app_version: ${{ github.sha }}
      teleport_version: 11.1.1
      teleport_proxy: teleport.ehp.passculture.team:443
      teleport_kubernetes_cluster: passculture-metier-ehp
      deploy_api: ${{ needs.test-api.result == 'success' }}
      deploy_pro: ${{ needs.test-pro.result == 'success' }}
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

  notification:
    name: "Notification"
    runs-on: [self-hosted, linux, x64]
    if: ${{ failure() && github.ref == 'refs/heads/master' }}
    needs:
      - deploy-to-testing
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Authentification to Google
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}

      - name: Get Secret
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # channel #alertes-deploiement
          channel-id: "CQAMNFVPS"
          payload: |
            {
            "attachments": [
              {
                "mrkdwn_in": ["text"],
                "color": "#A30002",
                "author_name": "${{github.actor}}",
                "author_link": "https://github.com/${{github.actor}}",
                "author_icon": "https://github.com/${{github.actor}}.png",
                "title": "PCAPI Deployment",
                "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                "text": "Le déploiement de la version `master` a échoué sur `testing` :boom:"
              }
            ],
            "unfurl_links": false,
            "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
