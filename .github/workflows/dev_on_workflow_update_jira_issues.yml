name: "3 [on_workflow/JIRA] Update issues"

on:
  workflow_call:
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        required: true

env:
  IMPROPRE_FIELD: customfield_10044
  SAFE_TO_DEPLOY_FIELD: customfield_10086
  COMMIT_NUMBER_FIELD: customfield_10059
  COMMIT_HASH_FIELD: customfield_10060


jobs:
  issue-number:
    outputs:
      status: ${{ steps.issue-check.outputs.status }}
      commit-hash: ${{ steps.get_commit_info.outputs.commit-hash }}
      commit-number: ${{ steps.get_commit_info.outputs.commit-number }}
    runs-on: ubuntu-latest
    steps:
      - name: "Authentification to Google"
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get Secret"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            JIRA_BASE_URL:passculture-metier-ehp/passculture-main-jira-base-url
            JIRA_USER_EMAIL:passculture-metier-ehp/passculture-main-jira-user-email
            JIRA_API_TOKEN:passculture-metier-ehp/passculture-main-jira-api-token
      - name: "Checkout üõéÔ∏è"
        uses: actions/checkout@v4.1.7
        with:
          persist-credentials: false
          fetch-depth: 0 # Fetch all history for "git rev-list --count HEAD" info
      - name: "Get commit info"
        id: "get_commit_info"
        run: |
          echo "commit-number=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
          echo "commit-hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: "Setup gajira cli"
        uses: atlassian/gajira-cli@master
        with:
          version: 1.0.20
      - name: "Login"
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ steps.secrets.outputs.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ steps.secrets.outputs.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ steps.secrets.outputs.JIRA_API_TOKEN }}
      - name: "Get jira issue key in commit"
        id: "get_jira_key"
        uses: atlassian/gajira-find-issue-key@master
        with:
          from: commits
      # set the output with the issue number, only if the issue type is not equal to "OPS Task" or "Infra Task"
      - name: "issue check"
        id: "issue-check"
        if: ${{ steps.get_jira_key.outputs.issue != null }}
        env:
          JIRA_API_TOKEN: ${{ steps.secrets.outputs.JIRA_API_TOKEN }}
        run: |
          issue_type=$(jira view ${{ steps.get_jira_key.outputs.issue }} --template viewTicketType)
          if [[ $issue_type != "OPS Task" && "$issue_type" != "Infra Task" ]]; then
            echo "status=${{ steps.get_jira_key.outputs.issue }}" | tee -a $GITHUB_OUTPUT
          fi

  # run only if previous job issue-number has set his output to the issue number
  update-jira-issues:
    runs-on: ubuntu-latest
    needs: issue-number
    if: needs.issue-number.outputs.status != null
    steps:
      - name: "Checkout üõéÔ∏è"
        uses: actions/checkout@v4.1.7
        with:
          persist-credentials: false
          fetch-depth: 0 # Fetch all history for "git rev-list --count HEAD" info
      - name: "Authentification to Google"
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get Secret"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            JIRA_BASE_URL:passculture-metier-ehp/passculture-main-jira-base-url
            JIRA_USER_EMAIL:passculture-metier-ehp/passculture-main-jira-user-email
            JIRA_API_TOKEN:passculture-metier-ehp/passculture-main-jira-api-token
      - name: "Setup gajira cli"
        uses: atlassian/gajira-cli@master
        with:
          version: 1.0.20
      - name: "Login"
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ steps.secrets.outputs.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ steps.secrets.outputs.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ steps.secrets.outputs.JIRA_API_TOKEN }}
      - name: "Get jira previous commit number"
        id: get_previous_commit_number
        env:
          JIRA_API_TOKEN: ${{ steps.secrets.outputs.JIRA_API_TOKEN }}
        # The jira view command uses .jira.d/templates/view template by default
        run: |
          echo "value=$(jira view ${{ needs.issue-number.outputs.status }})" | tee -a $GITHUB_OUTPUT
      - name: "Mark issue as not deployable"
        env:
          JIRA_API_TOKEN: ${{ steps.secrets.outputs.JIRA_API_TOKEN }}
        if: ${{ steps.get_previous_commit_number.outputs.value != null && steps.get_previous_commit_number.outputs.value != '<no value>' }}
        # If previous_commit_number is not null, it means this push-to-master is a fix.
        # All commits with number between previous_commit_number and this commit number are therefore not safe to deploy.
        # (deprecated) So mark them as "impropre: true"
        # (new) So mark them as "SafeToDeploy: false"

        # The echo command is to clear jira config.yml file set in get jira issue step
        # The jira edit command uses .jira.d/templates/edit template by default
        run: |
          echo "issue:" >> $HOME/.jira.d/config.yml
          jira edit --query='"Num√©ro de commit[Number]" > ${{ steps.get_previous_commit_number.outputs.value }}' \
            --override $IMPROPRE_FIELD=true \
            --override $SAFE_TO_DEPLOY_FIELD=false \
            --noedit
      - name: "Push commit number and commit hash to jira issue"
        env:
          JIRA_API_TOKEN: ${{ steps.secrets.outputs.JIRA_API_TOKEN }}
        run: |
          jira edit ${{ needs.issue-number.outputs.status }} \
            --override $IMPROPRE_FIELD=false \
            --override $SAFE_TO_DEPLOY_FIELD=true \
            --override $COMMIT_NUMBER_FIELD=${{ needs.issue-number.outputs.commit-number }} \
            --override $COMMIT_HASH_FIELD=${{ needs.issue-number.outputs.commit-hash }} \
            --noedit
