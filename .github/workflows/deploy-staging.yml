name: Tag a RC and deploy to staging

on:
  workflow_dispatch:
    inputs:
      releaseCandidateVersion:
        description: "NumÃ©ro de la RC sans le .0.0 (ex: 2150)"
        required: true
        type: string
      releaseNumber:
        description: "NumÃ©ro de l'itÃ©ration (ex: 199)"
        required: true
        type: string

env:
  RELEASE_VERSION: v${{ github.event.inputs.releaseNumber }}.0.0

jobs:
  tag-version:
    runs-on: ubuntu-latest

    env:
      GIT_CONFIG_EMAIL: github-actions-bot@passculture.app
      GIT_CONFIG_NAME: ${{ github.actor }}
      MAINTENANCE_BRANCH: maint/v${{ github.event.inputs.releaseNumber }}
      RELEASE_CANDIDATE_VERSION: RC-${{ github.event.inputs.releaseCandidateVersion }}.0.0

    steps:
      - name: Checkout RC
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_CANDIDATE_VERSION }}
      - name: Author
        run: |
          git config --global user.email "$GIT_CONFIG_EMAIL"
          git config --global user.name "$GIT_CONFIG_NAME"
      - name: Add version to api
        run: |
          cd ./api
          echo "$RELEASE_VERSION" > version.txt
          git add version.txt
      - name: Add version to pro
        run: |
          cd pro
          yarn version --new-version "$RELEASE_VERSION"
          git add package.json
      - name: Add version to adage
        run: |
          cd adage-front
          yarn version --new-version "$RELEASE_VERSION"
          git add package.json
      - name: Tag Release
        run: |
          git commit -m "ðŸš€ $RELEASE_VERSION" -n
          git tag -a "$RELEASE_VERSION" -m "ðŸš€ $RELEASE_VERSION"
          git push origin "$RELEASE_VERSION"
      - name: Create maintenance branch
        run: |
          git checkout -b "$MAINTENANCE_BRANCH"
          git push origin "$MAINTENANCE_BRANCH"

  deployment:
    needs: tag-version
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://app.circleci.com/pipelines/github/pass-culture/pass-culture-main?branch=staging
    steps:
      - name: Checkout Release
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_VERSION }}
      - name: Push release to staging
        run: |
          git push -f origin HEAD:staging
