name: "[Deployment] Create a hotfix release"

run-name: "Create a hotfix release from ${{ github.ref }}"

on:
  workflow_dispatch

permissions: write-all

jobs:
  check-worflow-ref:
    name: "Check worflow ref"
    runs-on: ubuntu-latest
    steps:
      - name: Check worflow ref
        run: |
          if ! [[ ${{ github.ref }} == refs/heads/maint/v* ]]; then
            echo "This workflow can only be triggered from a maintenance branch (starting with 'maint/v')"
            exit 1
          fi

  find-hotfix-tag-number:
    # Find the next hotfix version available
    # Example: given branch maint/v200 and existing tags v200.0.0, v200.0.1 then output == 200.0.2
    name: "Find hotfix tag number"
    needs: check-worflow-ref
    runs-on: ubuntu-latest
    outputs:
      hotfixTagNumber: ${{ steps.find-hotfix-tag-number.outputs.hotfixTagNumber }}
    steps:
      - name: "Checkout üõéÔ∏è"
        uses: actions/checkout@v4.1.1
        with:
          persist-credentials: false
          fetch-depth: 0 # Fetch all history to get all tags
      - name: "Find hotfix tag number"
        id: "find-hotfix-tag-number"
        run: |
          GITHUB_REF=${{ github.ref }}
          MAJOR_NUMBER=(${GITHUB_REF//refs\/heads\/maint\/v/ })
          CURRENT_PATCH_NUMBER=$(git tag -l "v${MAJOR_NUMBER}.0.*" | sort -V | tail -n 1 | cut -d. -f3)
          NEXT_PATCH_NUMBER=$((CURRENT_PATCH_NUMBER + 1))
          echo "hotfixTagNumber=${MAJOR_NUMBER}.0.${NEXT_PATCH_NUMBER}" | tee -a $GITHUB_OUTPUT

  build-and-tag-version:
    name: "Build and tag version"
    needs: find-hotfix-tag-number
    uses: ./.github/workflows/dev_on_workflow_build_and_tag.yml
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
    with:
      base_ref: ${{ github.ref }}
      tag_number: ${{ needs.find-hotfix-tag-number.outputs.hotfixTagNumber }}
      base_ref_is_a_branch: true

  create-pro-staging-release:
    name: "Pro staging"
    needs: [build-and-tag-version, find-hotfix-tag-number]
    uses: ./.github/workflows/dev_on_workflow_deploy_pro_pr_version_generic.yml
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
    with:
      ENV: "staging"
      CHANNEL: "${{ needs.find-hotfix-tag-number.outputs.hotfixTagNumber }}"
      EXPIRES: "30d"
      PUSH_RELEASE_TO_SENTRY: true
      REF: v${{ needs.find-hotfix-tag-number.outputs.hotfixTagNumber }}

  create-pro-integration-release:
    name: "Pro integration"
    needs: [build-and-tag-version, find-hotfix-tag-number]
    uses: ./.github/workflows/dev_on_workflow_deploy_pro_pr_version_generic.yml
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
    with:
      ENV: "integration"
      CHANNEL: "${{ needs.find-hotfix-tag-number.outputs.hotfixTagNumber }}"
      EXPIRES: "30d"
      REF: v${{ needs.find-hotfix-tag-number.outputs.hotfixTagNumber }}

  create-pro-production-release:
    name: "Pro production"
    needs: [build-and-tag-version, find-hotfix-tag-number]
    uses: ./.github/workflows/dev_on_workflow_deploy_pro_pr_version_generic.yml
    secrets:
      GCP_EHP_SERVICE_ACCOUNT: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
    with:
      ENV: "production"
      CHANNEL: "${{ needs.find-hotfix-tag-number.outputs.hotfixTagNumber }}"
      EXPIRES: "30d"
      PUSH_RELEASE_TO_SENTRY: true
      REF: v${{ needs.find-hotfix-tag-number.outputs.hotfixTagNumber }}