name: '[Deprecated] Build and push docker images to Artifact Registry'

on:
  workflow_call:
    inputs:
      ref:
        # The git ref to build from.
        # Can be a branch name, a tag or a commit.
        required: false
        type: string
      tag:
        # The docker image tag
        required: true
        type: string
      pcapi:
        required: false
        type: boolean
        default: false
      console:
        required: false
        type: boolean
        default: false
      tests:
        required: false
        type: boolean
        default: false
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        required: true

jobs:
  build-and-push-docker-images:
    name: 'Build and push Docker images'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/checkout@v4.1.1
      - name: "Authentification to Google"
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get Secret"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER:passculture-metier-ehp/infra-prod-gcp-workload-identity-provider
            ARTIFACT_REGISTRY_SERVICE_ACCOUNT:passculture-metier-ehp/passculture-main-artifact-registry-service-account
      - name: "OpenID Connect Authentication"
        id: openid-auth
        uses: 'google-github-actions/auth@v1'
        with:
          create_credentials_file: false
          token_format: 'access_token'
          workload_identity_provider: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - name: 'Docker login'
        uses: 'docker/login-action@v3'
        id: "docker-login"
        with:
          registry: 'europe-west1-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.openid-auth.outputs.access_token }}'
      - name: "Add version to api"
        working-directory: api
        run: |
          echo "${{ inputs.tag }}" > version.txt
          git add version.txt
      - name: "Install poetry"
        run: pip install poetry
      - name: "check poetry lock is up to date"
        working-directory: api
        run: poetry check
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker
      - name: "Build and push pcapi image"
        uses: docker/build-push-action@v5
        if: inputs.pcapi == true
        with:
          context: api
          push: true
          target: pcapi
          tags: europe-west1-docker.pkg.dev/passculture-infra-prod/pass-culture-artifact-registry/pcapi:${{ inputs.tag }}
      - name: "Build and push pcapi-console image"
        uses: docker/build-push-action@v5
        if: inputs.console == true
        with:
          context: api
          push: true
          target: pcapi-console
          tags: europe-west1-docker.pkg.dev/passculture-infra-prod/pass-culture-artifact-registry/pcapi-console:${{ inputs.tag }}
      - name: "Build and push pcapi-tests image"
        uses: docker/build-push-action@v5
        if: inputs.tests == true
        with:
          context: api
          push: true
          target: pcapi-tests
          tags: europe-west1-docker.pkg.dev/passculture-infra-prod/pass-culture-artifact-registry/pcapi-tests:${{ inputs.tag }}