name: "Tests E2E pro"

on:
  workflow_call:
    inputs:
      CACHE_BUCKET_NAME:
        type: string
        required: true
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        required: true

defaults:
  run:
    working-directory: pro

jobs:
  tests-pro-e2e-tests:
    name: "E2E tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: actions/setup-node@v3
        with:
          node-version-file: "pro/.nvmrc"
      - uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.23.3'
      - name: "Fix local permissions"
        run: sudo chown -R $PCAPI_UID:$PCAPI_GID .
        working-directory: api
        env:
          PCAPI_UID: 1000
          PCAPI_GID: 1000
      - name: "OpenID Connect Authentication"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Cache the node_modules"
        id: "yarn-modules-cache"
        uses: pass-culture-github-actions/cache@v1.0.0
        with:
          compression-method: "gzip"
          bucket: ${{ inputs.CACHE_BUCKET_NAME }}
          path: |
            ~/.cache/Cypress
            **/node_modules
          key: v1-yarn-pro-cypress-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-pro-cypress-dependency-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --immutable
      - name: "Run API server"
        run: docker-compose -f ../docker-compose-backend.yml up flask postgres redis --build -d
      - name: "Wait for migrations to be run"
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http://localhost:5001/health/api
          timeout: 120000
      - name: "Load sandbox"
        run: ../pc sandbox -n industrial
      - name: 'Build vite application'
        run: yarn build:development
      - name: 'Serve vite preview'
        run: yarn serve &
      # Using wait-on does not work well for this service, we use curl
      - name: 'Wait for front-end to listen'
        run: |
          timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3001)" != "200" ]]; do sleep 5; done' || false
      # Doc : https://github.com/cypress-io/github-action
      - name: "Cypress run"
        if: always()
        uses: cypress-io/github-action@v6
        with:
          config: baseUrl=http://localhost:3001
          browser: chrome
          wait-on: "http://localhost:5001/health/api,http://localhost:5001/health/database"
          wait-on-timeout: 600
          working-directory: pro
      - name: 'Move cypress videos'
        run: |
          mkdir -p cypress/videos/${{ github.ref }}/${{ github.sha }} && \
          mv cypress/videos/*.mp4 cypress/videos/${{ github.ref }}/${{ github.sha }}/
      - name: "Archive E2E results"
        if: always()
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: "pro/cypress/videos"
          destination: "${{ inputs.CACHE_BUCKET_NAME }}/pro/cypress/videos/e2e-artifacts"

  notification:
    name: "Notification"
    runs-on: ubuntu-latest
    if: ${{ failure() && github.ref == 'refs/heads/master' }}
    needs: tests-pro-e2e-tests
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: "Authentification to Google"
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get Secret"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token
      - name: "Post to a Slack channel"
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # channel #dev
          channel-id: "CPZ7U1CNP"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "#A30002",
                  "author_name": "${{github.actor}}",
                  "author_link": "https://github.com/${{github.actor}}",
                  "author_icon": "https://github.com/${{github.actor}}.png",
                  "title": "Tests pro E2E",
                  "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "text": "Les tests pro E2E Ã©chouent sur `master` :boom:"
                }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}