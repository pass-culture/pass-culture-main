on: workflow_call

env:
  region: europe-west1
  tests_docker_image: europe-west1-docker.pkg.dev/passculture-infra-prod/pass-culture-artifact-registry/pcapi-tests:${{ github.sha }}

defaults:
  run:
    working-directory: api

jobs:
  check-api-folder-changes:
    name: "Check if folder changed"
    uses: ./.github/workflows/check-folder-changes.yml
    with:
      folder: api

  build-tests-docker-image:
    name: "Build tests docker image"
    uses: ./.github/workflows/build-and-push-docker-images.yml
    needs: check-api-folder-changes
    if: needs.check-api-folder-changes.outputs.folder_changed == 'true' || github.ref == 'refs/heads/master'
    with:
      tag: ${{ github.sha }}
      tests: true
    secrets: inherit

  tests-api:
    name: "Tests"
    env:
      RUN_ENV: tests
      DATABASE_URL_TEST: postgresql://pytest:pytest@postgres:5432/pass_culture
      REDIS_URL: redis://redis:6379
    runs-on: [self-hosted, linux, x64]
    needs:
      - check-api-folder-changes
      - build-tests-docker-image
    if: ${{ needs.check-api-folder-changes.outputs.folder_changed == 'true' }}
    permissions:
      id-token: write
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        pytest_args:
          [
            "tests/routes/backoffice -m 'backoffice'"
          ]
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: cimg/postgres:12.9-postgis
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: pytest
          POSTGRES_PASSWORD: pytest
          POSTGRES_DB: pass_culture
    steps:
      - uses: actions/checkout@v3
      - id: openid-auth
        name: "OpenID Connect Authentication"
        uses: 'google-github-actions/auth@v1'
        with:
          create_credentials_file: false
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.INFRA_PROD_GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - uses: docker/login-action@v2
        with:
          registry: '${{ env.region }}-docker.pkg.dev'
          username: oauth2accesstoken
          password: ${{ steps.openid-auth.outputs.access_token }}
      - run: docker pull ${{ env.tests_docker_image }}
      - name: Running backoffice tests
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.tests_docker_image }}
          shell: bash
          options: -e RUN_ENV -e DATABASE_URL_TEST -e REDIS_URL
          run: |
            flask install_postgres_extensions
            alembic upgrade pre@head
            alembic upgrade post@head
            flask install_data
      - name: Mount a Volume with pcapi rights
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.tests_docker_image }}
          shell: bash
          options: -e RUN_ENV -e DATABASE_URL_TEST -e REDIS_URL -v ${{ runner.workspace }}/:/tests -u 0
          run: |
            echo "Changing owner and group fort directory test"
            chown -R pcapi:pcapi /tests
      - name: Run tests
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.tests_docker_image }}
          shell: bash
          options: -e TEST -e RUN_ENV -e DATABASE_URL_TEST -e REDIS_URL -v ${{ runner.workspace }}/:/tests
          run: |
            pytest ${{ matrix.pytest_args }} --durations=10 --junitxml='/tests/junit.xml'
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        env:
          WORKSPACE: ${{ runner.workspace }}
        if: always() # always run even if the previous step fails
        with:
          report_paths: '${{ runner.workspace }}/junit.xml'
          check_name: "Pytest Report"
          fail_on_failure: true
      - name: Slack Notification
        if: ${{ failure() && github.ref == 'refs/heads/master'  }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # channel #dev
          channel-id: "CPZ7U1CNP"
          payload: |
            {
            "attachments": [
              {
                "mrkdwn_in": ["text"],
                "color": "#A30002",
                "author_name": "${{github.actor}}",
                "author_link": "https://github.com/${{github.actor}}",
                "author_icon": "https://github.com/${{github.actor}}.png",
                "title": "Backoffice tests",
                "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                "text": "Les tests backoffice Ã©chouent sur `master` :boom:"
              }
            ],
            "unfurl_links": false,
            "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
