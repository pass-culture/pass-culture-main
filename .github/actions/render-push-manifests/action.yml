name: 'Render and push manifests'
description: 'This composite action executes helm template and push results to the render-manifests repository'
inputs:
  environment:
    type: string
    required: true
  app_name:
    type: string
    required: true
  app_version:
    type: string
    required: true
  additional_args:
    type: string
    required: false
  api_token_github_secret_name:
    type: string
    required: true
  registry_workload_identity_secret_name:
    type: string
    required: true
  registry_service_account_secret_name:
    type: string
    required: true
  chart_values_repository:
    description: "Repository containing helm chart values"
    type: string
    required: true
  chart_values_destination:
    description: "Path where repository will be cloned. Helmfile.yaml must reference this path"
    type: string
    required: true

runs:
  using: 'composite'
  steps:
    - name: "Get secrets (artifact registry, github)"
      id: 'get-secrets'
      uses: 'google-github-actions/get-secretmanager-secrets@v2'
      with:
        secrets: |-
          ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER:${{ inputs.registry_workload_identity_secret_name }}
          ARTIFACT_REGISTRY_SERVICE_ACCOUNT:${{ inputs.registry_service_account_secret_name }}
          API_TOKEN_GITHUB:${{ inputs.api_token_github_secret_name }}
    - name: "Connect to docker registry"
      id: "connect-registry"
      uses: 'google-github-actions/auth@v2'
      with:
        create_credentials_file: false
        token_format: 'access_token'
        workload_identity_provider: ${{ steps.get-secrets.outputs.ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ steps.get-secrets.outputs.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
    - uses: actions/checkout@v4.1.5
      with:
        repository: ${{ inputs.chart_values_repository }}
        token: ${{ steps.get-secrets.outputs.API_TOKEN_GITHUB }}
        path: ${{ inputs.chart_values_destination }}
    - name: "Render manifests"
      shell: bash
      run: |
        if [ -z "${ADDITIONAL_ARGS}" ]; then
          helmfile -e $ENVIRONMENT template --set image.tag=$APP_VERSION --output-dir ./rendered-manifests/ --output-dir-template "{{ .OutputDir }}/{{ .State.BaseName }}-{{ .Release.Name  }}"
        else
          helmfile -e $ENVIRONMENT template --set $ADDITIONAL_ARGS --set image.tag=$APP_VERSION --output-dir ./rendered-manifests/ --output-dir-template "{{ .OutputDir }}/{{ .State.BaseName }}-{{ .Release.Name  }}"
        fi
      env:
        ENVIRONMENT: ${{ inputs.environment }}
        APP_NAME: ${{ inputs.app_name }}
        APP_VERSION: ${{ inputs.app_version }}
        ADDITIONAL_ARGS: ${{ inputs.additional_args }}
        PASSCULTURE_USERNAME: "oauth2accesstoken"
        PASSCULTURE_PASSWORD: ${{ steps.connect-registry.outputs.access_token }}
    - name: "Push manifests to rendered-manifests repository"
      id: push-manifests
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ steps.get-secrets.outputs.API_TOKEN_GITHUB }}
      with:
        source-directory: ./rendered-manifests/helmfile-${{ inputs.environment }}/
        destination-github-username: 'pass-culture'
        destination-repository-name: 'rendered-manifests'
        commit-message: "${{ inputs.app_name }}(${{ inputs.environment }}) : pushed rendered manifests for app_version=${{ inputs.app_version }}"
        target-branch: ${{ inputs.environment }}
        create-target-branch-if-needed: true
