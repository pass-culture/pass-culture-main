name: 'Render and push manifests'
description: 'This composite action executes helm template and push results to the render-manifests repository'
inputs:
  environment:
    type: string
    required: true
  app_name:
    type: string
    required: true
  app_version:
    type: string
    required: true
  additional_args:
    type: string
    required: false
  PASSCULTURE_SA_ACCESS_TOKEN:
    required: true
  access_token:
    required: true

runs:
  using: 'composite'
  steps:
    - name: "Render manifests"
      shell: bash
      run: |
        PASSCULTURE_USERNAME="oauth2accesstoken"
        PASSCULTURE_PASSWORD=${{ inputs.access_token }}
        echo "ADDITIONAL_ARGS=$ADDITIONAL_ARGS-"
        echo "ENVIRONMENT=$ENVIRONMENT-"
        ehco "APP_NAME=$APP_NAME-"
        echo "APP_VERSION=$APP_VERSION-"
        echo "PASSCULTURE_SA_ACCESS_TOKEN=$PASSCULTURE_SA_ACCESS_TOKEN-"
        echo "access_token=$access_token-"
        if [ -z "${ADDITIONAL_ARGS}" ]; then
          helmfile -e $ENVIRONMENT template --set image.tag=$APP_VERSION --output-dir ./rendered-manifests/ --output-dir-template "{{ .OutputDir }}/{{ .State.BaseName }}-{{ .Release.Name  }}"
        else
          helmfile -e $ENVIRONMENT template --set $ADDITIONAL_ARGS --set image.tag=$APP_VERSION --output-dir ./rendered-manifests/ --output-dir-template "{{ .OutputDir }}/{{ .State.BaseName }}-{{ .Release.Name  }}"
        fi
      env:
        ENVIRONMENT: ${{ inputs.environment }}
        APP_NAME: ${{ inputs.app_name }}
        APP_VERSION: ${{ inputs.app_version }}
        ADDITIONAL_ARGS: ${{ inputs.additional_args }}
        PASSCULTURE_SA_ACCESS_TOKEN: ${{ inputs.PASSCULTURE_SA_ACCESS_TOKEN }}
        ACCESS_TOKEN: ${{ inputs.access_token }}
    - name: "Push manifests to rendered-manifests repository"
      id: push-manifests
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ inputs.PASSCULTURE_SA_ACCESS_TOKEN }}
      with:
        source-directory: ./rendered-manifests/helmfile-${{ inputs.environment }}/
        destination-github-username: 'pass-culture'
        destination-repository-name: 'rendered-manifests'
        commit-message: "${{ inputs.app_name }}(${{ inputs.environment }}) : pushed rendered manifests for app_version=${{ inputs.app_version }}"
        target-branch: fdehem
        create-target-branch-if-needed: true

