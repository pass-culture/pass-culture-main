{
    "configurations": [
        // Use these two configurations to run the backend without docker
        {
            "name": "Flask api server",
            "type": "debugpy",
            "request": "launch",
            "module": "flask",
            "cwd": "${workspaceFolder}/api",
            "justMyCode": false,
            "env": {
                "FLASK_APP": "src/pcapi/app",
                "FLASK_DEBUG": "1",
                "FLASK_RUN_IP": "0.0.0.0",
                "FLASK_RUN_PORT": "5001"
            },
            "args": ["run"]
        },
        {
            "name": "Flask backoffice server",
            "type": "debugpy",
            "request": "launch",
            "module": "flask",
            "cwd": "${workspaceFolder}/api",
            "justMyCode": false,
            "env": {
                "FLASK_APP": "src/pcapi/backoffice_app",
                "FLASK_DEBUG": "1",
                "FLASK_RUN_IP": "0.0.0.0",
                "FLASK_RUN_PORT": "5002"
            },
            "args": ["run"]
        },
        // Use these two configurations to attach to a running server
        // You will need the env var DEBUG_ACTIVATED=1
        {
            "name": "Attach to api server",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}",
                    "remoteRoot": "${workspaceFolder}"
                }
            ],
            "connect": {"host": "localhost", "port": 10002},
            "request": "attach",
            "subProcess": true,
            "type": "debugpy",
            "justMyCode": false
        },
        {
            "name": "Attach to backoffice server",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}",
                    "remoteRoot": "${workspaceFolder}"
                }
            ],
            "connect": {"host": "localhost", "port": 10003},
            "request": "attach",
            "subProcess": true,
            "type": "debugpy",
            "justMyCode": false
        }
    ]
}
