---
- name: Install Jupyterhub
  hosts: jupyterhub
  become: true
  tasks:
    - name: Check if jupyterhub is installed
      stat:
        path: /opt/tljh/installer.log
      register: jupyterhub_installer
      tags: 'install-jupyterhub'

    - name: Get jupyterhub install script
      get_url:
        url: "https://raw.githubusercontent.com/jupyterhub/the-littlest-jupyterhub/master/bootstrap/bootstrap.py"
        dest: /tmp/jupyterhub_install
      when: jupyterhub_installer.stat.exists == false
      tags: 'install-jupyterhub'

    - name: Run jupyterhub install script
      command: python3 jupyterhub_install --admin "{{Â admin_users[0] }}"
      args:
        chdir: /tmp
      when: jupyterhub_installer.stat.exists == false
      tags: 'install-jupyterhub'

    - name: Install pip
      apt:
        name: python3-pip
        state: present

    - name: Install setuptools
      apt:
        name: 'python3-setuptools'
        state: present

    - name: Create jupyterhub directory
      file:
        path: /opt/jupyterhub
        state: directory
        owner: ubuntu

    - name: Copy requirements.txt
      copy:
        src: requirements.txt
        dest: /opt/jupyterhub/requirements.txt
        owner: ubuntu

    - name: Install python requirements
      pip:
        requirements: /opt/jupyterhub/requirements.txt
        executable: /opt/tljh/user/bin/pip
      tags: 'pip'

    - name: Install git required packages
      apt:
        name: git-core
        update_cache: yes
      tags: 'git'

    - name: Copy tljh config
      template:
        src: tljh_config.yml.j2
        dest: /opt/tljh/config/config.yaml
        owner: ubuntu
        mode: u=rw,g=r,o=r
      tags: 'copy-tljh'
      notify: Reload tljh config

    - name: Copy tljh environment
      template:
        src: environment.py.j2
        dest: /opt/tljh/config/jupyterhub_config.d/environment.py
        owner: ubuntu
        mode: u=rw,g=r,o=r
      tags: 'copy-tljh-environment'
      notify: Reload tljh config

    - meta: flush_handlers

    - name: Copy create_database_tunnel.sh
      template:
        src: create_database_tunnel.sh.j2
        dest: /opt/jupyterhub/create_database_tunnel.sh
        owner: ubuntu
        mode: u=rwx,g=rx,o=rx
      tags: 'copy'

    - name: Check if scalingo cli is installed
      stat:
        path: /usr/local/bin/scalingo
      register: scalingo_cli
      tags: 'scalingo-cli'

    - name: Get scalingo cli install script
      get_url:
        url: https://cli-dl.scalingo.io/install
        dest: /tmp/scalingo_installer
      when: scalingo_cli.stat.exists == false
      tags: 'scalingo-cli'

    - name: Run scalingo install script
      command:  bash /tmp/scalingo_installer
      when: scalingo_cli.stat.exists == false
      tags: 'scalingo-cli'

    - name: Copy connect_to_database.service
      template:
        src: connect_to_database.service
        dest: /etc/systemd/system/connect_to_database.service
        owner: "{{ systemd_service_user }}"
      notify: Reload daemon
      tags: 'copy-service'

    - name: Start connection to database service
      systemd:
        state: started
        name: connect_to_database.service
        enabled: yes

  handlers:
    - name: Reload tljh config
      shell: |
        tljh-config reload
        tljh-config reload proxy

    - name: Reload daemon
      systemd:
        state: restarted
        daemon_reload: yes
        name: connect_to_database.service