@use 'styles/mixins/_fonts.scss' as fonts;
@use 'styles/mixins/_rem.scss' as rem;
@use 'styles/variables/_colors.scss' as colors;

.of-placeholder {
  @include fonts.button;

  align-items: center;
  background-color: colors.$grey-very-light;
  border: none;
  border-radius: rem.torem(3px);
  box-shadow: 0 0 rem.torem(20px) 0 colors.$black-shadow;
  display: flex;
  flex-direction: column;
  height: rem.torem(385px);
  justify-content: center;
  outline: none;
  position: relative;
  width: rem.torem(256px);

  svg {
    width: rem.torem(57px);
  }

  &:hover,
  &:focus {
    text-decoration: underline;
  }

  img {
    border-radius: rem.torem(4px);
    height: 100%;
    width: 100%;
  }

  .of-error-message {
    @include fonts.highlight();

    color: colors.$primary-dark;
    display: flex;
    justify-content: center;
    margin: rem.torem(16px) rem.torem(31px);
    position: absolute;
    text-align: left;
    top: 60%;
    z-index: 1;

    svg {
      margin-right: rem.torem(5px);
    }
  }
}

.of-image {
  background-color: colors.$white;

  img {
    object-fit: cover;
  }

  &::after,
  &::before {
    opacity: 0;
    position: absolute;
  }

  &::after {
    background: rgba(colors.$black, 0.6);
    border-radius: rem.torem(4px);
    content: '';
    height: 100%;
    width: 100%;
  }

  &::before {
    background: url('assets/edit-thumbnail.svg') no-repeat center 0;
    box-sizing: border-box;
    color: colors.$white;
    content: attr(title);
    padding-top: rem.torem(50px);
    text-decoration: underline;
    z-index: 1;
  }

  &:hover::after,
  &:hover::before,
  &:focus::after,
  &:focus::before {
    opacity: 1;
  }
}

.of-thumbnail-error {
  border: solid 2px colors.$red-error;
  border-radius: rem.torem(4px);
}
