@use "styles/variables/_colors.scss" as colors;
@use "styles/mixins/_fonts.scss" as fonts;
@use "styles/mixins/_rem.scss" as rem;

.toggle {
  @include fonts.title4;

  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
  margin-bottom: rem.torem(16px);
  cursor: pointer;
  gap: 1ch;
  border: 0;
  padding: 0;
  background-color: transparent;
}

.toggle:active:not([disabled]) {
  opacity: 0.64;
}

.toggle-display {
  --offset: 2px;
  --diameter: 28px;

  display: inline-flex;
  align-items: center;
  justify-content: space-around;
  box-sizing: content-box;
  width: rem.torem(56px);
  height: rem.torem(32px);
  position: relative;
  border-radius: 100vw;
  background-color: colors.$grey-semi-dark;
  transform: inherit;
}

.toggle-display::before {
  content: "";
  z-index: 2;
  position: absolute;
  top: 50%;
  left: var(--offset);
  box-sizing: border-box;
  width: var(--diameter);
  height: var(--diameter);
  border-radius: 50%;
  background-color: colors.$white;
  transform: translate(0, -50%);
  will-change: transform;
  transition: inherit;
}

.toggle:focus .toggle-display {
  outline: rem.torem(1px) dotted colors.$black;
  outline-offset: rem.torem(2px);
}

.toggle:focus,
.toggle:focus:not(:focus-visible) .toggle-display {
  outline: 0;
}

.toggle[aria-pressed="true"] .toggle-display {
  background-color: colors.$valid;
}

.toggle[aria-pressed="true"] .toggle-display::before {
  background: center / contain no-repeat url("./assets/check.png") colors.$white;
  background-size: rem.torem(16px);
  left: rem.torem(-2px);
  transform: translate(100%, -50%);
}

.toggle[disabled] {
  color: colors.$black;
  cursor: not-allowed;
}

.toggle[disabled] .toggle-display::before {
  background: center / contain no-repeat url("./assets/lock.png") colors.$white;
  background-size: rem.torem(16px);
}
