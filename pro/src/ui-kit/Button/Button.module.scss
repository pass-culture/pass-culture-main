@use "styles/mixins/_fonts.scss" as fonts;
@use "styles/mixins/_rem.scss" as rem;
@use "styles/mixins/_size.scss" as size;
@use "styles/mixins/_outline.scss" as outline;

.button {
  @include fonts.button;

  margin: 0;
  border: rem.torem(2px) solid;
  border-radius: rem.torem(24px);
  display: inline-flex;
  vertical-align: top;
  justify-content: center;
  padding: 0 rem.torem(16px);

  &:hover {
    cursor: pointer;
  }

  &:disabled,
  &.button-disabled {
    cursor: default;
  }

  &.button-disabled {
    pointer-events: none;
  }

  &-icon {
    height: var(--typography-body-line-height);
    width: size.$button-icon-size;
    flex-shrink: 0;
    vertical-align: text-bottom;
  }

  &-center {
    padding: 0 rem.torem(8px);
  }

  &.button-left {
    .button-icon:not(.button-icon-arrow, .has-tooltip) {
      margin-right: rem.torem(8px);
    }
  }

  &.button-right {
    .button-icon:not(.button-icon-arrow, .has-tooltip) {
      margin-left: rem.torem(8px);
    }
  }

  &:focus-visible {
    @include outline.focus-outline;
  }

  &-primary {
    min-height: rem.torem(40px);
    align-items: center;
    color: var(--color-text-inverted);
    background-color: var(--color-background-brand-primary);
    border-color: var(--color-border-brand-primary);

    &:hover {
      background-color: var(--color-background-brand-primary-hover);
      border-color: var(--color-border-brand-primary-hover);
      color: var(--color-text-locked-inverted);

      .button-icon {
        color: var(--color-text-locked-inverted);
      }
    }

    &:disabled,
    &.button-disabled {
      background-color: var(--color-background-disabled);
      color: var(--color-text-disabled);
      border-color: var(--color-border-disabled);

      .button-icon {
        color: var(--color-icon-disabled);
      }
    }

    .button-icon {
      color: var(--color-icon-inverted);
    }
  }

  &-secondary {
    min-height: rem.torem(40px);
    align-items: center;
    color: var(--color-text-brand-primary);
    background-color: var(--color-background-default);
    border-color: var(--color-border-brand-primary);

    &:hover {
      background-color: var(--color-background-brand-primary-hover);
      border-color: var(--color-border-brand-primary-hover);
      color: var(--color-text-locked-inverted);

      .button-icon {
        color: var(--color-text-locked-inverted);
      }
    }

    &:disabled,
    &.button-disabled {
      background-color: var(--color-background-disabled);
      color: var(--color-text-disabled);
      border-color: var(--color-border-disabled);

      .button-icon {
        color: var(--color-icon-disabled);
      }
    }

    .button-icon {
      color: var(--color-icon-brand-primary);
    }
  }

  &-ternary,
  &-quaternary,
  &-ternary-brand {
    color: var(--color-text-default);
    align-items: flex-start;
    justify-content: flex-start;
    background-color: transparent;
    border-radius: rem.torem(4px);
    padding: 0;
    border: none;
    height: auto;

    &-icon {
      color: var(--color-icon-default);
    }

    &-brand {
      color: var(--color-text-brand-primary);

      .button-icon {
        color: var(--color-icon-brand);
      }
    }

    &:hover,
    &:focus-visible {
      text-decoration: underline;
    }

    &:disabled,
    &.button-disabled {
      text-decoration: none;
      color: var(--color-text-disabled);

      .button-icon {
        color: var(--color-icon-disabled);
      }
    }

    .button-icon:not(.has-tooltip) {
      height: var(--typography-body-line-height);
      width: rem.torem(20px);
      margin-right: rem.torem(8px);
    }

    &.button-center {
      .button-icon {
        margin-right: 0;
      }
    }
  }

  &-quaternary {
    @include fonts.body-accent-xs;

    margin-top: rem.torem(6px);
    margin-bottom: rem.torem(6px);
    color: var(--color-text-default);

    .button-icon:not(.has-tooltip) {
      height: var(--typography-body-xs-line-height);
      width: rem.torem(16px);
      margin-right: rem.torem(4px);
    }

    &.button-left {
      .button-icon:not(.button-icon-arrow, .has-tooltip) {
        margin-right: rem.torem(4px);
      }
    }

    &.button-right {
      .button-icon:not(.button-icon-arrow, .has-tooltip) {
        margin-left: rem.torem(4px);
      }
    }

    &:focus-visible {
      padding: rem.torem(2px) rem.torem(4px);
    }
  }

  &-box {
    background-color: var(--color-background-default);
    justify-content: flex-start;
    width: 100%;
    padding: rem.torem(12px) rem.torem(8px);
    border: rem.torem(1px) solid var(--color-border-default);
    border-radius: rem.torem(6px);
    max-width: rem.torem(400px);
    color: var(--color-text-default);

    .button-icon {
      color: var(--color-icon-default);
    }

    &:hover:not(:disabled, .button-disabled) {
      box-shadow: rem.torem(0) rem.torem(3px) rem.torem(4px)
        var(--color-medium-shadow);
    }

    &:disabled,
    &.button-disabled {
      background: var(--color-background-disabled);
      border-color: var(--color-border-disabled);
      color: var(--color-text-disabled);

      .button-icon {
        color: var(--color-icon-disabled);
      }
    }
  }
}

.spinner-icon {
  height: rem.torem(20px);
  width: rem.torem(20px);
  margin-right: rem.torem(8px);
}

.loading-spinner {
  @media screen and (prefers-reduced-motion: reduce) {
    svg {
      animation: none;
    }
  }

  svg {
    animation: rotation 3s infinite linear;
  }
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}
