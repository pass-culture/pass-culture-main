@use "styles/variables/_forms.scss" as forms;
@use "styles/mixins/_rem.scss" as rem;
@use "styles/mixins/_fonts.scss" as fonts;
@use "styles/mixins/_size.scss" as size;
@use "styles/mixins/_a11y.scss" as a11y;
@use "styles/mixins/_outline.scss" as outline;

.base-checkbox {
  &-label-row {
    display: inline-flex;
    width: 100%;
    align-items: center;
  }

  &-label {
    width: 100%;
    cursor: pointer;
    display: flex;
    align-items: center;
  }

  &-description {
    @include fonts.body-accent-xs;

    color: var(--color-text-subtle);
    margin-top: rem.torem(4px);
  }

  &-icon {
    margin-right: rem.torem(8px);
    display: inline-flex;
    vertical-align: text-bottom;
    flex-direction: column;

    &-svg {
      width: rem.torem(20px);
      fill: var(--color-icon-default);
    }
  }

  &-input {
    appearance: none;
    border: rem.torem(2px) solid var(--color-border-default);
    border-radius: rem.torem(3px);
    transition:
      border 150ms ease,
      background 150ms ease;
    flex: 0 0 auto;
    margin-right: rem.torem(8px);
    outline: none;
    padding: 0;
    position: relative;
    vertical-align: middle;
    height: size.$checkbox-size;
    width: size.$checkbox-size;
    cursor: pointer;

    &:checked,
    &:indeterminate {
      background-color: var(--color-background-brand-primary);
      border-color: var(--color-border-brand-primary);

      &::after {
        //  CSS variables do not worh when used within a background-image SVG.
        //  Thus the need to have the background be the check color
        //  Also, the svg "fill" and "stroke" properties of the checks must be white because its a mask
        background-color: var(--color-icon-inverted);
        mask: url("./checkbox-check.svg");
        mask-position: center;
        mask-repeat: no-repeat;
        content: "";
        height: 100%;
        position: absolute;
        width: 100%;
      }
    }

    &:indeterminate {
      &::after {
        mask: url("./checkbox-partial.svg");
        mask-position: center;
        mask-repeat: no-repeat;
      }
    }

    &:focus-visible {
      @include outline.focus-outline(rem.torem(4px));
    }
  }

  &.has-error {
    .base-checkbox-input {
      border-color: var(--color-border-error);

      &:checked,
      &:indeterminate {
        background-color: var(--color-background-error);

        &::after {
          background-color: var(--color-icon-error);
        }
      }
    }

    &:hover .base-checkbox-input {
      border-color: var(--color-border-error);

      &:checked,
      &:indeterminate {
        background-color: var(--color-background-error);

        &::after {
          background-color: var(--color-icon-error);
        }
      }
    }
  }

  &.is-disabled {
    color: var(--color-text-disabled);

    .base-checkbox-label {
      cursor: not-allowed;
    }

    .base-checkbox-input {
      border-color: var(--color-border-subtle);
      cursor: not-allowed;

      &:checked,
      &:indeterminate {
        background-color: var(--color-background-disabled);

        &::after {
          background-color: var(--color-icon-disabled);
        }
      }
    }
  }
}

.base-checkbox-row {
  display: inline-flex;
  vertical-align: top;
  width: 100%;

  &:hover {
    text-decoration: underline;

    .base-checkbox-input {
      border-color: var(--color-border-brand-primary);

      &:checked,
      &:indeterminate {
        background-color: var(--color-background-brand-primary-hover);
      }

      &:disabled {
        background-color: var(--color-background-disabled);
        border-color: var(--color-border-subtle);
      }
    }
  }
}

.box-variant,
.inline-box-variant {
  border: rem.torem(1px) solid var(--color-border-default);
  border-radius: rem.torem(8px);
  min-width: 100%;
  padding-left: rem.torem(16px);

  &.is-checked {
    background-color: var(--color-background-info);
    border-color: var(--color-border-brand-primary);
  }

  &.has-error {
    background-color: transparent;
    border-color: var(--color-border-error);
  }

  &.is-disabled {
    background-color: var(--color-background-disabled);
    border-color: var(--color-border-disabled);
  }

  .base-checkbox-input:focus-visible {
    outline: none;
  }

  .base-checkbox-label {
    padding: rem.torem(16px) rem.torem(16px) rem.torem(16px) 0;
  }

  &:focus-within {
    @include outline.focus-outline(rem.torem(4px));
  }

  @supports selector(:has(*)) {
    &:focus-within {
      outline: none;
    }

    &:has(.base-checkbox-input:focus-visible) {
      @include outline.focus-outline(rem.torem(4px));
    }
  }
}

.visually-hidden {
  @include a11y.visually-hidden;
}

.base-checkbox-children-on-checked {
  padding: 0 rem.torem(16px) rem.torem(16px) 0;
}

.base-checkbox.has-children {
  &.is-checked:not(.is-disabled) {
    background: none;
  }
}
