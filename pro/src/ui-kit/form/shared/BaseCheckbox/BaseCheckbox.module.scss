@use "styles/variables/_forms.scss" as forms;
@use "styles/mixins/_rem.scss" as rem;
@use "styles/mixins/_fonts.scss" as fonts;
@use "styles/variables/_colors.scss" as colors;
@use "styles/variables/_size.scss" as size;


.base-checkbox {
  display: flex;

  &-label-row {
    display: inline-flex;
    cursor: pointer;
    align-items: flex-start;
  }

  &-description {
    @include fonts.caption;

    margin-left: rem.torem(28px);
    color: colors.$grey-dark;

    &.disabled {
      color: colors.$grey-medium;
    }
  }

  &-label {
    display: flex;
    width: 100%;

    :disabled + & {
      color: forms.$input-text-color-disabled;
      cursor: default;
    }

  }

  &-icon {
    margin-right: rem.torem(8px);
    display: flex;
    flex-direction: column;

    &-svg {
      width: rem.torem(20px);
      fill: colors.$input-text-color;

      :disabled + & {
        fill: forms.$input-text-color-disabled;
      }
    }
  }

  &-input {
    appearance: none;
    background-color: forms.$input-bg-color;
    border: rem.torem(2px) solid forms.$input-border-color;
    border-radius: rem.torem(3px);
    transition: border 150ms ease,
    background 150ms ease;
    flex: 0 0 auto;
    font-size: inherit;
    margin-right: rem.torem(8px);
    outline: none;
    padding: 0;
    position: relative;
    vertical-align: middle;
    height: size.$checkbox-size;
    width: size.$checkbox-size;
    cursor: pointer;

    &:checked, &:indeterminate {
      background-color: colors.$grey-dark;

      &::after {
        background-image: url("./checkbox-check.svg");
        background-position: center;
        background-repeat: no-repeat;
        content: "";
        height: 100%;
        position: absolute;
        width: 100%;
      }

      &:hover {
        background-color: colors.$primary;
        border-color: colors.$primary;
      }

      &:focus-visible {
        background-color: colors.$primary-dark;
        border-color: colors.$primary-dark;
      }

      &.has-error {
        border-color: forms.$input-border-color-error;
      }
    }

    &:indeterminate {
      &::after {
        background-image: url("./checkbox-partial.svg");
      }
    }

    &:disabled, &:disabled:checked, &:disabled:indeterminate {
      background-color: colors.$grey-medium;
      border-color: colors.$grey-medium;
      cursor: not-allowed;
      opacity: 1;
    }

    &:not(:checked, :indeterminate) {
      background-color: colors.$white;

      &:hover {
        border-color: colors.$primary;
      }

      &:focus-visible {
        border-color: colors.$primary-dark;
      }

      &:disabled {
        border-color: colors.$grey-medium;
        opacity: 1;
      }

      &.has-error {
        border-color: forms.$input-border-color-error;
      }
    }

    &:focus-visible {
      outline: rem.torem(1px) solid colors.$input-text-color;
      outline-offset: rem.torem(4px);
      border-radius: rem.torem(4px);
    }
  }
}

.with-border {
  border: rem.torem(1px) solid colors.$grey-semi-dark;
  border-radius: rem.torem(6px);
  min-width: 100%;
  padding-left: rem.torem(16px);
  padding-top: rem.torem(16px);
  padding-bottom: rem.torem(16px);

  .base-checkbox-input:focus-visible {
    outline: none;
  }

  &:focus-within {
    outline: rem.torem(1px) solid colors.$input-text-color;
    outline-offset: rem.torem(4px);
    border-radius: rem.torem(4px);
  }
}
