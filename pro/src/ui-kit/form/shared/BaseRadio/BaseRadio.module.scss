@use "styles/variables/_forms.scss" as forms;
@use "styles/mixins/_rem.scss" as rem;

.base-radio {
  display: inline-flex;
  align-items: center;
  cursor: pointer;

  &-label {
    line-height: rem.torem(16px);
    flex-grow: 1;
    cursor: pointer;

    :disabled + & {
      color: var(--color-input-text-color-disabled);
      cursor: default;
    }
  }

  &:hover:not(.is-disabled) {
    text-decoration: underline;
  }

  &:focus-within {
    outline: rem.torem(1px) solid var(--color-input-text-color);
    outline-offset: rem.torem(4px);
    border-radius: rem.torem(4px);
  }

  &-input {
    height: rem.torem(20px);
    width: rem.torem(20px);
    border: rem.torem(2px) solid var(--color-grey-dark);
    border-radius: 50%;
    background-color: var(--color-white);
    flex: 0 0 auto;
    font-size: inherit;
    margin-right: rem.torem(8px);
    appearance: none;
    outline: none;
    cursor: pointer;
    transition:
      border 150ms ease,
      background 150ms ease,
      box-shadow 150ms ease;

    &:hover,
    &:focus-visible {
      border-color: var(--color-secondary-light);
    }

    &:disabled {
      cursor: default;
      border-color: var(--color-input-border-color-disabled);
    }

    &.has-error {
      border-color: var(--color-input-border-color-error);
    }

    &:checked {
      border-color: var(--color-secondary-light);
      background: radial-gradient(
        var(--color-secondary-light) 0%,
        var(--color-secondary-light) 40%,
        transparent 50%,
        transparent
      );

      &:disabled {
        box-shadow: inset 0 0 0 rem.torem(2px) var(--color-white);
        border-color: var(--color-input-border-color-disabled);
        background: radial-gradient(
          var(--color-input-border-color-disabled) 0%,
          var(--color-input-border-color-disabled) 40%,
          transparent 50%,
          transparent
        );
      }

      &.has-error {
        box-shadow: inset 0 0 0 rem.torem(2px) var(--color-white);
        border-color: var(--color-input-border-color-error);
        background: radial-gradient(
          var(--color-input-border-color-error) 0%,
          var(--color-input-border-color-error) 40%,
          transparent 50%,
          transparent
        );
      }
    }
  }
}

.with-border {
  border: rem.torem(1px) solid var(--color-grey-dark);
  border-radius: rem.torem(8px);
  padding: 0 0 0 rem.torem(16px);

  .base-radio-label {
    padding: rem.torem(16px) rem.torem(16px) rem.torem(16px) 0;
  }

  &:focus-within {
    outline: rem.torem(1px) solid var(--color-black);
    outline-offset: rem.torem(4px);
  }

  &:hover {
    box-shadow: forms.$input-hover-shadow;
    cursor: pointer;
  }

  .is-disabled {
    border: none;
    background-color: var(--color-grey-light);
    color: var(--color-grey-dark);

    &:focus-within {
      outline: none;
    }

    &:hover {
      box-shadow: none;
    }
  }

  &-checked {
    border: rem.torem(2px) solid var(--color-secondary-light);
    background-color: var(--color-background-secondary);

    .base-radio-label {
      font-weight: 700;
      padding: rem.torem(16px) rem.torem(16px) rem.torem(16px) 0;
    }
  }
}

.full-width {
  width: 100%;
}
