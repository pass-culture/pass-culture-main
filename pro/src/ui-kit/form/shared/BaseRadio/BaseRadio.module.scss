@use "styles/variables/_forms.scss" as forms;
@use "styles/mixins/_fonts.scss" as fonts;
@use "styles/mixins/_rem.scss" as rem;
@use "styles/mixins/_outline.scss" as outline;

.base-radio {
  display: flex;
  align-items: center;

  &-label {
    line-height: rem.torem(16px);
    flex-grow: 1;
    cursor: pointer;

    :disabled + & {
      color: var(--color-input-text-color-disabled);
      cursor: default;
    }
  }

  &:hover:not(.is-disabled) {
    text-decoration: underline;
  }

  &-input {
    display: flex;
    align-items: center;
    height: rem.torem(20px);
    min-width: rem.torem(20px);
    width: rem.torem(20px);
    border: rem.torem(2px) solid var(--color-grey-dark);
    border-radius: 50%;
    background-color: var(--color-background-default);
    margin-right: rem.torem(8px);
    appearance: none;
    outline: none;
    cursor: pointer;

    &:disabled {
      cursor: default;
      border-color: var(--color-input-border-color-disabled);
      background-color: transparent;
    }

    &.has-error {
      border-color: var(--color-input-border-color-error);
    }

    &:checked {
      box-shadow: inset 0 0 0 rem.torem(3px) var(--color-white);
      border-color: var(--color-secondary-light);
      background-color: var(--color-secondary-light);

      &:disabled {
        box-shadow: inset 0 0 0 rem.torem(3px) var(--color-grey-light);
        border-color: var(--color-grey-semi-dark);
        background-color: var(--color-grey-semi-dark);
      }

      &.has-error {
        box-shadow: inset 0 0 0 rem.torem(3px) var(--color-white);
        border-color: var(--color-input-border-color-error);
        background-color: var(--color-input-border-color-error);
      }
    }
  }
}

.radio:focus-within {
  @include outline.focus-outline(rem.torem(4px));

  border-radius: rem.torem(8px);
}

@supports selector(:has(*)) {
  .radio:focus-within {
    outline: none;
  }

  .radio:has(.base-radio-input:focus-visible) {
    @include outline.focus-outline(rem.torem(4px));

    border-radius: rem.torem(8px);
  }
}

.radio.box-variant {
  border: rem.torem(1px) solid var(--color-grey-dark);
  border-radius: rem.torem(8px);
  padding: 0 0 0 rem.torem(16px);

  .base-radio-label {
    padding: rem.torem(16px) rem.torem(16px) rem.torem(16px) 0;
  }

  &:hover {
    box-shadow: forms.$input-hover-shadow;
  }

  &.is-checked {
    border-color: var(--color-secondary-light);
    background-color: var(--color-background-secondary);
  }

  &.has-error {
    border-color: var(--color-input-border-color-error);
    background-color: var(--color-background-error);
  }

  &.is-disabled {
    border-color: var(--color-input-border-color-disabled);
    background-color: var(--color-grey-light);
    color: var(--color-grey-dark);

    &:hover {
      box-shadow: none;
    }
  }
}

.radio.has-children {
  &.is-checked:not(.is-disabled) {
    background: none;
  }
}

.base-radio-children-on-checked {
  padding: 0 rem.torem(16px) rem.torem(8px) 0;
}
