@use "styles/mixins/_fonts.scss" as fonts;
@use "styles/variables/_size.scss" as size;
@use "styles/mixins/_rem.scss" as rem;

.income {
  &-filters {
    display: flex;
    flex-direction: column;
    margin-bottom: rem.torem(20px);
    row-gap: rem.torem(10px);

    @media (min-width: size.$tablet) {
      margin-bottom: rem.torem(12px);
      flex-direction: row;
    }

    &-divider {
      display: none;

      @media (min-width: size.$tablet) {
        display: block;
        margin-top: rem.torem(26.75px);
        margin-right: rem.torem(24px);
        width: rem.torem(1px);
        height: rem.torem(40px);
        background: var(--color-grey-semi-dark);
      }
    }

    &-by-venue {
      max-width: rem.torem(300px);
      margin-right: rem.torem(24px);

      // Selected tags must be displayed to occupy available width.
      // Width must be calculated based on the viewport width minus
      // various padding values since they belong to a component that
      // is not a direct child of the main content container and
      // has a restricted width.
      &-selected-tags {
        width: calc(100vw - size.$main-content-padding-xs * 2);

        @media (min-width: size.$mobile) {
          width: calc(100vw - (size.$main-content-padding) * 2);
        }

        @media (min-width: size.$laptop) {
          // On very large screens the layout does not exceed 90rem.
          width: calc(
            100vw - (size.$main-content-padding * 2) - size.$side-nav-width
          );
          max-width: calc(
            size.$desktop - (size.$main-content-padding * 2) -
              size.$side-nav-width
          );
        }
      }
    }

    &-by-year {
      display: flex;
      flex-flow: row wrap;
      flex-direction: row;
      gap: rem.torem(8px);
      height: fit-content;

      @media (min-width: size.$tablet) {
        margin-top: rem.torem(26.75px);

        &-is-only-filter {
          margin-top: 0;
        }
      }

      &-button {
        display: flex;
        justify-content: center;
        align-items: center;
        background: none;
        cursor: pointer;
        padding: rem.torem(10px);
        color: var(--color-black);
        border: solid rem.torem(1px) var(--color-grey-dark);
        border-radius: rem.torem(4px);

        &:hover,
        &:focus {
          outline: rem.torem(1px) solid var(--color-primary);
        }

        &-active {
          @include fonts.button;

          border-color: var(--color-black);

          &::before {
            content: "";
            display: block;
            width: rem.torem(8px);
            height: rem.torem(8px);
            background-color: var(--color-secondary-light);
            border-radius: 50%;
            margin-right: rem.torem(8px);
          }
        }
      }
    }
  }
}
