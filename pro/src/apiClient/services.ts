import type { MutatorOptions, SWRConfiguration } from 'swr'

interface Query {
  cacheKey: (...args: any[]) => string[]
  options: SWRConfiguration
}
interface Mutation {
  cacheKey: (...args: any[]) => string[]
  options: MutatorOptions
}

export const queries: Record<string, Query> = {
  getOffer: {
    cacheKey: (offerId: number) => [`OFFER_${offerId}`],
    options: { dedupingInterval: 60000 },
  },
  getOffers: {
    cacheKey: () => ['OFFER'],
    options: { dedupingInterval: 60000 },
  },
}

export const mutations: Record<string, Mutation> = {
  patchOffer: {
    tag: (offerId: number) => (cacheKey) =>
      cacheKey === 'OFFER' ||
      cacheKey === `OFFER_${offerId}` ||
      cacheKey === 'STOCK_{OfferId}',
    options: {},
  },
  patchDraftOffer: {
    tag: (offerId: number) => (cacheKey) =>
      cacheKey === 'OFFER' || cacheKey === `OFFER_${offerId}`,
    options: {},
  },
  postOffer: {
    tag: (offerId: number) => (cacheKey) =>
      cacheKey === 'OFFER' || cacheKey === `OFFER_${offerId}`,
    options: {},
  },
  postDraftOffer: {
    tag: (offerId: number) => (cacheKey) =>
      cacheKey === 'OFFER' || cacheKey === `OFFER_${offerId}`,
    options: {},
  },
  postPriceCategories: {
    tag: (offerId: number) => (cacheKey) =>
      cacheKey === 'OFFER' || cacheKey === `OFFER_${offerId}`,
    options: {},
  },
}

// # https://swr.vercel.app/fr-FR/docs/mutation#mutate-multiple-items

// ALL
export const ttags = {
  readonly: () => [''],
  getBookingsCsv: () => [''],
  getOfferPriceCategoriesAndSchedulesByDates: () => [''],
  getBookingsExcel: () => [''],
  patchBookingKeepByToken: () => [''],
  exportBookingsForOfferAsCsv: () => [''],
  exportBookingsForOfferAsExcel: () => [''],
  getBookingsPro: () => [''],
  getUserHasBookings: () => [''],
  getBookingByToken: () => [''],
  patchBookingUseByToken: () => [''],
  getCollectiveBookingsCsv: () => [''],
  getCollectiveBookingsExcel: () => [''],
  getCollectiveBookingsPro: () => [''],
  getUserHasCollectiveBookings: () => [''],
  getCollectiveBookingById: () => [''],
  listEducationalDomains: () => [''],
  getCollectiveOffers: () => [''],
  createCollectiveOffer: () => [''],
  createCollectiveOfferTemplate: () => [''],
  patchCollectiveOffersTemplateActiveStatus: () => [''],
  patchCollectiveOffersTemplateArchive: () => [''],
  getCollectiveOfferRequest: () => [''],
  getCollectiveOfferTemplate: () => [''],
  editCollectiveOfferTemplate: () => [''],
  deleteOfferTemplateImage: () => [''],
  attachOfferTemplateImage: () => [''],
  patchCollectiveOfferTemplatePublication: () => [''],
  patchCollectiveOffersArchive: () => [''],
  getCollectiveOffersCsv: () => [''],
  getCollectiveOffersExcel: () => [''],
  getAutocompleteEducationalRedactorsForUai: () => [''],
  getCollectiveOffer: () => [''],
  editCollectiveOffer: () => [''],
  cancelCollectiveOfferBooking: () => [''],
  duplicateCollectiveOffer: () => [''],
  patchCollectiveOffersEducationalInstitution: () => [''],
  deleteOfferImage: () => [''],
  attachOfferImage: () => [''],
  patchCollectiveOfferPublication: () => [''],
  createCollectiveStock: () => [''],
  editCollectiveStock: () => [''],
  getEducationalPartners: () => [''],
  getEducationalInstitutions: () => [''],
  listFeatures: () => [''],
  getBankAccounts: () => [''],
  getCombinedInvoices: () => [''],
  getOfferVideoMetadata: () => [''],
  getStatistics: () => [''],
  getProductByEan: () => [''],
  createOfferer: () => [''],
  listEducationalOfferers: () => [''],
  listOfferersNames: () => [''],
  saveNewOnboardingData: () => [''],
  getOfferer: () => [''],
  getOffererBankAccountsAndAttachedVenues: () => [''],
  linkVenueToBankAccount: () => [''],
  getOffererEligibility: () => [''],
  getOffererHeadlineOffer: () => [''],
  inviteMember: () => [''],
  inviteMemberAgain: () => [''],
  getOffererMembers: () => [''],
  getOffererAddresses: () => [''],
  getOffererStats: () => [''],
  getOffererV2Stats: () => [''],
  listOffers: () => [''],
  postOffer: () => [''],
  patchOffersActiveStatus: () => [''],
  patchAllOffersActiveStatus: () => [''],
  getCategories: () => [''],
  deleteDraftOffers: () => [''],
  deleteHeadlineOffer: () => [''],
  postDraftOffer: () => [''],
  patchDraftOffer: () => [''],
  getMusicTypes: () => [''],
  patchPublishOffer: () => [''],
  createThumbnail: () => [''],
  deleteThumbnail: () => [''],
  upsertHeadlineOffer: () => [''],
  getOffer: () => [''],
  patchOffer: () => [''],
  postHighlightRequestOffer: () => [''],
  getOfferOpeningHours: () => [''],
  upsertOfferOpeningHours: () => [''],
  postPriceCategories: () => [''],
  deletePriceCategory: () => [''],
  getStocksStats: () => [''],
  getStocks: () => [''],
  deleteAllFilteredStocks: () => [''],
  deleteStocks: () => [''],
  getActiveVenueOfferByEan: () => [''],
  getReimbursementsCsv: () => [''],
  createThingStock: () => [''],
  bulkUpdateEventStocks: () => [''],
  bulkCreateEventStocks: () => [''],
  deleteStock: () => [''],
  updateThingStock: () => [''],
  getStructureData: () => [''],
  postCheckToken: () => [''],
  connectAs: () => [''],
  cookiesConsent: () => [''],
  getProfile: () => [''],
  postUserEmail: () => [''],
  getUserEmailPendingValidation: () => [''],
  patchUserIdentity: () => [''],
  submitUserReview: () => [''],
  postNewPassword: () => [''],
  postChangePassword: () => [''],
  patchUserPhone: () => [''],
  resetPassword: () => [''],
  patchProUserRgsSeen: () => [''],
  signin: () => [''],
  signout: () => [''],
  signupPro: () => [''],
  patchUserTutoSeen: () => [''],
  patchValidateEmail: () => [''],
  validateUser: () => [''],
  hasInvoice: () => [''],
  getInvoicesV2: () => [''],
  getReimbursementsCsvV2: () => [''],
  fetchVenueLabels: () => [''],
  getVenueTypes: () => [''],
  listVenueProviders: () => [''],
  createVenueProvider: () => [''],
  updateVenueProvider: () => [''],
  getProvidersByVenue: () => [''],
  deleteVenueProvider: () => [''],
  getVenues: () => [''],
  getVenuesEducationalStatuses: () => [''],
  getVenuesOfOffererFromSiret: () => [''],
  getVenue: () => [''],
  editVenue: () => [''],
  deleteVenueBanner: () => [''],
  editVenueCollectiveData: () => [''],
  linkVenueToPricingPoint: () => [''],
}
