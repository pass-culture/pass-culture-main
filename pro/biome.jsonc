{
  "$schema": "https://biomejs.dev/schemas/2.2.2/schema.json",
  // https://biomejs.dev/guides/big-projects/#monorepo
  "root": false,
  "extends": "//",
  // Ignore .gitignore files
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": {
          "level": "on",
          "options": {
            "groups": [
              [
                ":BUN:",
                ":NODE:",
                ":PACKAGE:",
                ":PACKAGE_WITH_PROTOCOL:",
                ":URL:"
              ],
              ":BLANK_LINE:",
              ":ALIAS:",
              ":BLANK_LINE:",
              [":PATH:", "**"]
            ]
          }
        }
      }
    }
  },
  "formatter": {
    "enabled": true,
    "attributePosition": "auto",
    "bracketSameLine": false,
    "bracketSpacing": true,
    "expand": "auto",
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 80,
    "useEditorconfig": true
  },
  "files": {
    "includes": [
      "**",
      "!coverage",
      "!scripts/customRequest.ts",
      "!src/apiClient/adage",
      "!src/apiClient/v1",
      "!**/*.stories.tsx"
    ],
    "ignoreUnknown": true
  },
  "linter": {
    "enabled": true,
    "rules": {
      // TODO (igabriele, 2025-08-08): Most of the above "error" rules are likely part of the "recommended" set. Check which we can remove from the lists thanks to that.
      "recommended": true,
      "a11y": {
        "noHeaderScope": "warn", // default: "error"
        "noLabelWithoutControl": "warn", // default: "error"
        "noNoninteractiveElementToInteractiveRole": "warn", // default: "error"
        "noNoninteractiveTabindex": "warn", // default: "error"
        "noRedundantRoles": "warn", // default: "error"
        "noStaticElementInteractions": "warn", // default: "error"
        "noSvgWithoutTitle": "warn", // default: "error"
        "useButtonType": "warn", // default: "error"
        "useKeyWithClickEvents": "warn", // default: "error"
        "useKeyWithMouseEvents": "warn", // default: "error"
        "useSemanticElements": "warn" // default: "error"
      },
      "complexity": {
        "noAdjacentSpacesInRegex": "error",
        "noArguments": "error",
        "noExtraBooleanCast": "error",
        "noUselessCatch": "error",
        "noUselessEscapeInRegex": "error",
        "noUselessFragments": "warn", // default: "info"
        "noUselessTypeConstraint": "error",
        "useLiteralKeys": "off" // default: "info" (because we use that everywhere for `className={styles['...']}`)
      },
      "correctness": {
        "noChildrenProp": "error",
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noNestedComponentDefinitions": "warn", // default: "error"
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedImports": "error", // default: "warn"
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "useExhaustiveDependencies": "info",
        "useHookAtTopLevel": "error",
        "useIsNan": "error",
        "useJsxKeyInIterable": "error",
        "useUniqueElementIds": "warn", // default: "error"
        "useValidForDirection": "error",
        "useValidTypeof": "error",
        "useYield": "error"
      },
      "security": {
        "noDangerouslySetInnerHtmlWithChildren": "error"
      },
      "style": {
        "noCommonJs": "error",
        "noDefaultExport": "error",
        "noNamespace": "error",
        "noRestrictedTypes": "error",
        "useArrayLiterals": "error",
        "useAsConstAssertion": "error",
        "useBlockStatements": "error",
        "useConst": "error"
      },
      "suspicious": {
        "noAssignInExpressions": "warn", // default: "error"
        "noArrayIndexKey": "warn", // default: "error"
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCommentText": "error",
        "noCompareNegZero": "error",
        "noConsole": {
          "level": "error",
          "options": {
            "allow": ["error", "info", "warn"]
          }
        },
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateElseIf": "error",
        "noDuplicateJsxProps": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "warn",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImplicitAnyLet": "warn", // default: "error"
        "noImportAssign": "error",
        "noIrregularWhitespace": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noThenProperty": "off", // `.then()` is used by Yup
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "noWith": "error",
        "useAwait": "error",
        "useGetterReturn": "error",
        "useIterableCallbackReturn": "warn", // default: "error"
        "useNamespaceKeyword": "error"
      }
    }
  },

  // -------------------------------------------------------------------------
  // Language-specific configurations

  "html": {
    "formatter": {
      "selfCloseVoidElements": "always"
    }
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "es5",
      "semicolons": "asNeeded",
      "arrowParentheses": "always",
      "bracketSameLine": false,
      "quoteStyle": "single",
      "attributePosition": "auto",
      "bracketSpacing": true
    },
    "globals": ["assert"]
  },

  "overrides": [
    // -------------------------------------------------------------------------
    // package.json
    // We don't want Biome linting to conflict with Yarn `JSON.stringify` formatting when Yarn updates version or dependencies.

    {
      "includes": ["package.json"],
      "json": {
        "formatter": {
          "expand": "always"
        }
      }
    },

    // -------------------------------------------------------------------------
    // CSS

    {
      "includes": ["**/*.css", "**/*.scss"],
      "javascript": {
        "formatter": {
          "quoteStyle": "double"
        }
      }
    },

    // -------------------------------------------------------------------------
    // Non-production codebase

    {
      "includes": [
        ".templatron/**/*.mjs",
        "cypress/**/*.ts",
        "src/**/__mocks__/*.ts",
        "src/**/__specs__/*.ts",
        "src/**/tests/*.ts",
        "src/**/*.spec.ts",
        "src/**/*.spec.tsx",
        // TODO (igabriele, 2025-08-08): We need to move all test-related common files to a dedicated folder.
        "src/commons/utils/renderWithProviders.tsx",
        "src/commons/utils/factories/*.ts",
        "src/vitest.setup.ts",
        "scripts/**/*.ts",
        "vite.config.ts",
        "**/*.d.ts",
        "**/*.stories.tsx"
      ],
      "linter": {
        "rules": {
          "a11y": "off",
          "correctness": {
            "noNodejsModules": "off",
            "noUndeclaredVariables": "off"
          },
          "style": {
            "noDefaultExport": "off",
            "noNamespace": "off"
          },
          "suspicious": {
            "noEmptyBlockStatements": "off",
            "noExportsInTest": "off",
            "noImplicitAnyLet": "off"
          }
        }
      }
    }
  ]
}
