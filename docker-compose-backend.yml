version: "3.7"

services:
  redis:
    image: scalingo/redis
    container_name: pc-redis
    command: redis-server
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      - db_nw
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]

  postgres:
    image: postgis/postgis:15-3.4-alpine
    container_name: pc-postgres
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    env_file:
      - env_file
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      # This port is used outside docker-compose network
      # (E2E tests and developers launching flask api on their local machines):
      - 5434:5432
    networks:
      - db_nw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-test:
    image: postgis/postgis:15-3.4-alpine
    container_name: pc-postgres-pytest
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on
    environment:
      - POSTGRES_DB=pass_culture
      - POSTGRES_USER=pytest
      - POSTGRES_PASSWORD=pytest
    volumes:
      - postgres_data_test:/var/lib/postgresql-test/data
    ports:
      - 5433:5432
    networks:
      - db_nw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  flask:
    build:
      context: ./api
      target: api-flask
    working_dir: /usr/src/app
    container_name: pc-api
    command: ./start-api.sh
    env_file:
      - env_file
    volumes:
      - ./api:/usr/src/app
    ports:
      - 5001:5001
      - 10002:10002  # debugger port
    networks:
      - db_nw
      - web_nw
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      postgres-test:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://flask:5001/health/api", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 2m

  backoffice:
    build:
      context: ./api
      target: api-flask
    working_dir: /usr/src/app
    container_name: pc-backoffice
    command: python src/pcapi/backoffice_app.py
    env_file:
      - env_file
    volumes:
      - ./api:/usr/src/app
    ports:
      - 5002:5001
      - 10004:10003  # debugger port
    networks:
      - db_nw
      - web_nw
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      postgres-test:
        condition: service_healthy
      redis:
        condition: service_healthy
      flask:
        condition: service_healthy

  nginx:
    build: nginx
    container_name: pc-nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/letsencrypt
      - ./certs-data:/data/letsencrypt
    ports:
      - 80:80
      - 443:443
    networks:
      - web_nw
    depends_on:
      flask:
        condition: service_healthy

networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
  postgres_data_test:
