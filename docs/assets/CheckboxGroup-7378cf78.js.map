{"version":3,"file":"CheckboxGroup-7378cf78.js","sources":["../../src/ui-kit/form/CheckboxGroup/CheckboxGroupItem.tsx","../../src/ui-kit/form/CheckboxGroup/CheckboxGroup.tsx"],"sourcesContent":["import { useField } from 'formik'\nimport React from 'react'\n\nimport { BaseCheckbox } from '../shared'\n\ninterface CheckboxGroupItemProps {\n  setGroupTouched(): void\n  name: string\n  label: string\n  description?: string\n  icon?: string\n  hasError?: boolean\n  disabled?: boolean\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst CheckboxGroupItem = ({\n  setGroupTouched,\n  label,\n  description,\n  name,\n  hasError,\n  icon,\n  disabled,\n  onChange,\n}: CheckboxGroupItemProps): JSX.Element => {\n  const [field] = useField({ name, type: 'checkbox' })\n\n  const onCustomChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setGroupTouched()\n    field.onChange(event)\n    if (onChange) {\n      onChange(event)\n    }\n  }\n\n  return (\n    <BaseCheckbox\n      {...field}\n      icon={icon}\n      hasError={hasError}\n      label={label}\n      description={description}\n      onChange={onCustomChange}\n      disabled={disabled}\n    />\n  )\n}\n\nexport default CheckboxGroupItem\n","import cn from 'classnames'\nimport { useField } from 'formik'\nimport React from 'react'\n\nimport { FieldSetLayout } from '../shared'\n\nimport styles from './CheckboxGroup.module.scss'\nimport CheckboxGroupItem from './CheckboxGroupItem'\n\nexport interface CheckboxGroupProps {\n  groupName: string\n  legend: string\n  group: {\n    name: string\n    label: string\n    description?: string\n    icon?: string\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n  }[]\n  className?: string\n  disabled?: boolean\n}\n\nconst CheckboxGroup = ({\n  group,\n  groupName,\n  legend,\n  className,\n  disabled,\n}: CheckboxGroupProps): JSX.Element => {\n  const [, meta, helpers] = useField({ name: groupName })\n\n  return (\n    <FieldSetLayout\n      className={cn(styles['checkbox-group'], className)}\n      error={meta.touched && !!meta.error ? meta.error : undefined}\n      legend={legend}\n      name={groupName}\n    >\n      {group.map(item => (\n        <div className={styles['checkbox-group-item']} key={item.name}>\n          <CheckboxGroupItem\n            icon={item.icon}\n            hasError={meta.touched && !!meta.error}\n            label={item.label}\n            description={item.description}\n            name={item.name}\n            setGroupTouched={() =>\n              !meta.touched ? helpers.setTouched(true) : null\n            }\n            disabled={disabled}\n            onChange={item.onChange}\n          />\n        </div>\n      ))}\n    </FieldSetLayout>\n  )\n}\n\nexport default CheckboxGroup\n"],"names":["CheckboxGroupItem","setGroupTouched","label","description","name","hasError","icon","disabled","onChange","field","useField","onCustomChange","event","jsx","BaseCheckbox","CheckboxGroup","group","groupName","legend","className","meta","helpers","FieldSetLayout","cn","styles","item","CheckboxGroup$1"],"mappings":"8aAgBAA,EAAA,CAAA,CAA2B,gBAAAC,EACzB,MAAAC,EACA,YAAAC,EACA,KAAAC,EACA,SAAAC,EACA,KAAAC,EACA,SAAAC,EACA,SAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,CAAA,EAAAC,EAAA,CAAA,KAAAN,EAAA,KAAA,UAAA,CAAA,EAEAO,EAAAC,GAAA,CACEX,IACAQ,EAAA,SAAAG,CAAA,EACAJ,GACEA,EAAAI,CAAA,CACF,EAGF,OAAAC,EAAA,IACEC,EAAC,CAAA,GAAAL,EACK,KAAAH,EACJ,SAAAD,EACA,MAAAH,EACA,YAAAC,EACA,SAAAQ,EACU,SAAAJ,CACV,CAAA,CAGN,64BCxBA,MAAAQ,EAAA,CAAA,CAAuB,MAAAC,EACrB,UAAAC,EACA,OAAAC,EACA,UAAAC,EACA,SAAAZ,CAEF,IAAA,CACE,KAAA,CAAA,CAAAa,EAAAC,CAAA,EAAAX,EAAA,CAAA,KAAAO,CAAA,CAAA,EAEA,OAAAJ,EAAA,IACES,EAAC,CAAA,UAAAC,EAAAC,EAAA,gBAAA,EAAAL,CAAA,EACkD,MAAAC,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAAA,OACE,OAAAF,EACnD,KAAAD,EACM,SAAAD,EAAA,IAAAS,GAAAZ,EAAA,IAAA,MAAA,CAAA,UAAAW,EAAA,qBAAA,EAAA,SAAAX,EAAA,IAIFb,EAAC,CAAA,KAAAyB,EAAA,KACY,SAAAL,EAAA,SAAA,CAAA,CAAAA,EAAA,MACsB,MAAAK,EAAA,MACrB,YAAAA,EAAA,YACM,KAAAA,EAAA,KACP,gBAAA,IAAAL,EAAA,QAAA,KAAAC,EAAA,WAAA,EAAA,EAEkC,SAAAd,EAE7C,SAAAkB,EAAA,QACe,CAAA,GAAAA,EAAA,IAAA,CAAA,CAGpB,CAAA,CAGP,EAEAC,EAAAX"}