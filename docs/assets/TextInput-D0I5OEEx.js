import{j as n}from"./jsx-runtime-Nms4Y4qS.js";import{u as $}from"./formik.esm-C73rln7k.js";import{B as K}from"./BaseInput-BhJRejd7.js";import{F as O}from"./FieldLayout-4p-Dtox3.js";const P={"text-input-readonly":"_text-input-readonly_1my34_1"},y=({name:a,type:t="text",className:h,classNameFooter:b,classNameLabel:g,classNameInput:V,disabled:q,readOnly:x,hideFooter:w,label:I,isLabelHidden:L=!1,placeholder:v,countCharacters:i,maxLength:s=255,smallLabel:A,isOptional:o=!1,refForInput:u,leftIcon:E,rightButton:N,rightIcon:B,step:k,hasDecimal:F=!0,inline:T=!1,description:d,clearButtonProps:_,hasLabelLineBreak:D=!0,externalError:c,ErrorDetails:H,showMandatoryAsterisk:M,...p})=>{const[f,r]=$({name:a,type:t}),j=/[0-9,.]/,R=/[0-9]/,U=/Tab|Backspace|Enter/,m=!!c||r.touched&&!!r.error,l=[];return d&&l.push(`description-${a}`),i&&l.push(`field-characters-count-description-${a}`),n.jsx(O,{className:h,classNameLabel:g,classNameFooter:b,classNameInput:V,count:i?f.value.length:void 0,error:c||r.error,isOptional:o,showMandatoryAsterisk:M,label:I,isLabelHidden:L,maxLength:s,name:a,showError:m,smallLabel:A,inline:T,hideFooter:w,description:d,clearButtonProps:_,ErrorDetails:H,hasLabelLineBreak:D,children:x?n.jsx("span",{className:P["text-input-readonly"],ref:u,children:p.value}):n.jsx(K,{disabled:q,hasError:m,maxLength:s,placeholder:v,step:k,type:t,rightButton:N,ref:u,rightIcon:B,leftIcon:E,"aria-required":!o,"aria-describedby":l.join(" ")||void 0,onKeyDown:e=>{if(t==="number"){if(U.test(e.key))return;(F?!j.test(e.key):!R.test(e.key))&&e.preventDefault()}},onWheel:e=>{t==="number"&&e.currentTarget.blur()},...f,...p})})};try{y.displayName="TextInput",y.__docgenInfo={description:"",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:{value:"true"},description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:{value:"false"},description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},showMandatoryAsterisk:{defaultValue:null,description:"",name:"showMandatoryAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},hideFooter:{defaultValue:null,description:`A flag to hide the footer.
To be used with caution, as it can affect accessibility.`,name:"hideFooter",required:!1,type:{name:"boolean"}},inline:{defaultValue:{value:"false"},description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},countCharacters:{defaultValue:null,description:`Allows to display input characters count.
Must be provided with maxLength to be effective,
Adds \`field-characters-count-description-\${name}\`
to the aria-describedby attribute of the input.
Used for FieldLayout count prop.`,name:"countCharacters",required:!1,type:{name:"boolean"}},hasDecimal:{defaultValue:{value:"true"},description:`Allows decimal numbers in the input.
Must be provided with type="number" to be effective.
Unused when readOnly is true.`,name:"hasDecimal",required:!1,type:{name:"boolean"}},refForInput:{defaultValue:null,description:"A forward ref to the span or the input element.",name:"refForInput",required:!1,type:{name:"ForwardedRef<HTMLInputElement>"}},externalError:{defaultValue:null,description:`A custom error message to be displayed.
If this prop is provided, the error message will be displayed
and the field will be marked as errored
regardless of the field's formik state.
Used for error & showError FieldLayout props.`,name:"externalError",required:!1,type:{name:"string"}}}}}catch{}export{y as T};
