{"version":3,"file":"ListIconButton.stories-08897546.js","sources":["../../src/ui-kit/ListIconButton/ListIconButton.tsx"],"sourcesContent":["/* istanbul ignore file : no need to test styled html tag  */\nimport cn from 'classnames'\nimport React, { useId } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\nimport Tooltip from 'ui-kit/Tooltip'\n\nimport styles from './ListIconButton.module.scss'\n\nexport interface ListIconButtonProps\n  extends React.HTMLProps<HTMLButtonElement> {\n  icon: string\n  innerRef?: React.RefObject<HTMLButtonElement>\n  className?: string\n  hasTooltip?: boolean\n  onClick?: () => void\n  url?: string\n  isExternal?: boolean\n}\n\nconst LIST_ICON_SIZE = '16'\n\nconst ListIconButton = ({\n  children,\n  className,\n  icon,\n  innerRef,\n  hasTooltip,\n  onClick,\n  url,\n  isExternal = true,\n  ...buttonAttrs\n}: ListIconButtonProps): JSX.Element => {\n  const tooltipId = useId()\n\n  const svgicon = (\n    <SvgIcon\n      src={icon}\n      alt=\"\"\n      className={cn(styles['button-icon'])}\n      width={LIST_ICON_SIZE}\n    />\n  )\n  const content =\n    hasTooltip && !buttonAttrs?.disabled ? (\n      <Tooltip id={tooltipId} content={children} className={styles['tooltip']}>\n        {svgicon}\n      </Tooltip>\n    ) : (\n      svgicon\n    )\n\n  const button = (\n    <button\n      className={cn(styles['button'], className)}\n      ref={innerRef}\n      {...buttonAttrs}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {content}\n    </button>\n  )\n\n  const link = isExternal ? (\n    <a className={cn(styles['button'], className)} href={url} onClick={onClick}>\n      {content}\n    </a>\n  ) : (\n    <Link className={className} onClick={onClick} to={`${url}`}>\n      {content}\n    </Link>\n  )\n\n  return url ? link : button\n}\n\nexport default ListIconButton\n"],"names":["LIST_ICON_SIZE","ListIconButton","children","className","icon","innerRef","hasTooltip","onClick","url","isExternal","buttonAttrs","tooltipId","useId","svgicon","jsx","SvgIcon","cn","styles","content","Tooltip","button","link","Link","ListIconButton$1"],"mappings":"oeAqBAA,EAAA,KAEAC,EAAA,CAAA,CAAwB,SAAAC,EACtB,UAAAC,EACA,KAAAC,EACA,SAAAC,EACA,WAAAC,EACA,QAAAC,EACA,IAAAC,EACA,WAAAC,EAAA,GACa,GAAAC,CAEf,IAAA,CACE,MAAAC,EAAAC,EAAAA,QAEAC,EAAAC,EAAA,IACEC,EAAC,CAAA,IAAAX,EACM,IAAA,GACD,UAAAY,EAAAC,EAAA,aAAA,CAAA,EAC+B,MAAAjB,CAC5B,CAAA,EAGXkB,EAAAZ,GAAA,EAAAI,GAAA,MAAAA,EAAA,UAAAI,MAAAK,EAAA,CAAA,GAAAR,EAAA,QAAAT,EAAA,UAAAe,EAAA,QAAA,SAAAJ,EAAA,EAAAA,EASAO,EAAAN,EAAA,IACE,SAAC,CAAA,UAAAE,EAAAC,EAAA,OAAAd,CAAA,EAC0C,IAAAE,EACpC,GAAAK,EACD,QAAAH,EACJ,KAAA,SACK,SAAAW,CAEJ,CAAA,EAILG,EAAAZ,EAAAK,EAAA,IAAA,IAAA,CAAA,UAAAE,EAAAC,EAAA,OAAAd,CAAA,EAAA,KAAAK,EAAA,QAAAD,EAAA,SAAAW,CAAA,CAAA,EAAAJ,EAAAA,IAAAQ,EAAA,CAAA,UAAAnB,EAAA,QAAAI,EAAA,GAAA,GAAAC,CAAA,GAAA,SAAAU,CAAA,CAAA,EAUA,OAAAV,EAAAa,EAAAD,CACF,EAEAG,EAAAtB;;;;;"}