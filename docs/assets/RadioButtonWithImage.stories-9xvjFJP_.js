import{j as t}from"./jsx-runtime-CfatFE5O.js";import{c as j}from"./index-DeARc5FM.js";import{S as r}from"./SvgIcon-B6esR8Vf.js";import"./index-ClcD9ViR.js";import"./_commonjsHelpers-Cpj98o6Y.js";const w=""+new URL("stroke-prof-CdIlVma-.svg",import.meta.url).href,C=""+new URL("ico-radio-off-DezZSzFC.svg",import.meta.url).href,V=""+new URL("ico-radio-on-BdJUH6GV.svg",import.meta.url).href,N="_button_12g48_1",e={button:N,"button-radio-on":"_button-radio-on_12g48_8","button-radio-off":"_button-radio-off_12g48_8","button-icon":"_button-icon_12g48_21","is-selected":"_is-selected_12g48_35","is-disabled":"_is-disabled_12g48_41","button-check-mark":"_button-check-mark_12g48_49","button-text":"_button-text_12g48_52","button-description":"_button-description_12g48_56","layout-column":"_layout-column_12g48_64","layout-row":"_layout-row_12g48_78","visually-hidden":"_visually-hidden_12g48_100"},l=({name:o,isChecked:i,icon:_,label:b,description:s,onChange:y,className:v,disabled:d=!1,value:x,dataTestid:I})=>t.jsxs("label",{className:j(e.button,s===void 0?e["layout-column"]:e["layout-row"],{[e["is-selected"]]:i,[e["is-disabled"]]:d},v),children:[i?t.jsx(r,{alt:"",src:V,className:e["button-radio-on"],viewBox:"0 0 16 16",width:"16"}):t.jsx(r,{alt:"",src:C,className:e["button-radio-off"],viewBox:"0 0 16 16",width:"16"}),t.jsx(r,{src:_,className:e["button-icon"],alt:""}),t.jsx("input",{checked:i,className:e["visually-hidden"],disabled:d,name:o,onChange:y,type:"radio",value:x,"data-testid":I}),t.jsxs("span",{className:e["button-text"],children:[t.jsx("span",{children:b}),s!==void 0&&t.jsx("span",{className:e["button-description"],children:s})]})]});try{l.displayName="RadioButtonWithImage",l.__docgenInfo={description:`The RadioButtonWithImage component is a custom radio button that includes an image and optional description.
It is intended to provide a more visually appealing way to present radio button options.

---
**Important: Use \`isChecked\` to control the selection state of the radio button, and \`onChange\` to handle state changes.**
---`,displayName:"RadioButtonWithImage",props:{name:{defaultValue:null,description:"The name of the radio button group.",name:"name",required:!0,type:{name:"string"}},isChecked:{defaultValue:null,description:"Indicates if the radio button is currently selected.",name:"isChecked",required:!0,type:{name:"boolean"}},icon:{defaultValue:null,description:"The icon to display alongside the radio button.",name:"icon",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"The label text for the radio button.",name:"label",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"An optional description for the radio button.",name:"description",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback function triggered when the radio button value changes.",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}},className:{defaultValue:null,description:"Custom CSS class for additional styling of the radio button.",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Indicates if the radio button is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"The value of the radio button.",name:"value",required:!0,type:{name:"string"}},dataTestid:{defaultValue:null,description:"Custom test ID for targeting the component in tests.",name:"dataTestid",required:!1,type:{name:"string"}}}}}catch{}const W={title:"ui-kit/RadioButtonWithImage",component:l,decorators:[o=>t.jsx("div",{style:{maxWidth:"300px"},children:t.jsx(o,{})})]},h={name:"offerType",label:"Offre Collective",icon:w,value:"collective"},a={args:{...h}},n={args:{...h,description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit"}};var u,c,m;a.parameters={...a.parameters,docs:{...(u=a.parameters)==null?void 0:u.docs,source:{originalSource:`{
  args: {
    ...defaultProps
  }
}`,...(m=(c=a.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};var p,f,g;n.parameters={...n.parameters,docs:{...(p=n.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    ...defaultProps,
    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit'
  }
}`,...(g=(f=n.parameters)==null?void 0:f.docs)==null?void 0:g.source}}};const S=["Default","WithDescription"];export{a as Default,n as WithDescription,S as __namedExportsOrder,W as default};
