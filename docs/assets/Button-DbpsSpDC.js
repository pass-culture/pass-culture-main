import{j as e}from"./jsx-runtime-BYYWji4R.js";import{c as i}from"./index-DeARc5FM.js";import{r as j}from"./index-ClcD9ViR.js";import{s as q}from"./stroke-pass-CALgybTM.js";import{S as l}from"./SvgIcon-CyWUmZpn.js";import{T as B}from"./Tooltip-BU5AxWXW.js";import{b as t}from"./Button.module-CuYk9XQn.js";import{I as s,B as N}from"./types-DjX_gQD6.js";const u=j.forwardRef(({className:d,children:f,icon:n,iconClassName:c,iconAlt:p,iconPosition:r=s.LEFT,variant:v=N.PRIMARY,type:h="button",testId:y,isLoading:a=!1,disabled:b,tooltipContent:o,...x},I)=>{const V=e.jsx("div",{className:t["spinner-icon"],"data-testid":"spinner",children:e.jsx(l,{src:q,alt:""})}),g=e.jsxs(e.Fragment,{children:[n&&!a&&r!==s.RIGHT&&e.jsx(l,{src:n,alt:p,className:i(t["button-icon"],c,{[t["has-tooltip"]]:!!o}),width:"20"}),e.jsxs(e.Fragment,{children:[a&&V,!a&&f]}),n&&!a&&r===s.RIGHT&&e.jsx(l,{src:n,alt:p,className:i(t["button-icon"],c),width:"20"})]}),m=e.jsx("button",{className:i(t.button,t[`button-${v}`],t[`button-${r}`],{[t["loading-spinner"]]:a},d),type:h,"data-testid":y,disabled:b||a,...x,ref:I,children:g});return o?e.jsx(B,{content:o,children:m}):m});u.displayName="Button";try{u.displayName="Button",u.__docgenInfo={description:"The Button component provides a customizable button element that can include icons, tooltips, and loading states.\nIt supports various styles through the `variant` prop and can display icons on either side of the button text.",displayName:"Button",props:{isLoading:{defaultValue:{value:"false"},description:"",name:"isLoading",required:!1,type:{name:"boolean"}},tooltipContent:{defaultValue:null,description:"",name:"tooltipContent",required:!1,type:{name:"ReactNode"}},iconClassName:{defaultValue:null,description:"",name:"iconClassName",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:`The icon to display within the button (or button-link).
If provided, the icon will be displayed as an SVG.`,name:"icon",required:!1,type:{name:"string | null"}},iconAlt:{defaultValue:null,description:`An alternative text for the icon.
If provided and non-empty, the SVG will have a role="img" and an aria-label attribute.
If undefined or empty, the SVG will have an aria-hidden attribute instead, as a
decorative icon.`,name:"iconAlt",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"ButtonVariant.PRIMARY"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ternary"'},{value:'"ternary-pink"'},{value:'"quaternary"'},{value:'"quaternary-pink"'},{value:'"box"'}]}},iconPosition:{defaultValue:{value:"IconPositionEnum.LEFT"},description:"",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"right"'},{value:'"left"'},{value:'"center"'}]}},testId:{defaultValue:null,description:"",name:"testId",required:!1,type:{name:"string"}}}}}catch{}export{u as B};
