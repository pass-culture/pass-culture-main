import{j as s}from"./jsx-runtime-CfatFE5O.js";import{u as j,a as A,F as E}from"./formik.esm-DyanDbCL.js";import{c as N}from"./index-DeARc5FM.js";import{r as i}from"./index-ClcD9ViR.js";import{C as S}from"./Checkbox-BdgYlH6a.js";import{T as C}from"./TextInput-5Pg7PxdZ.js";const u={"quantity-input":"_quantity-input_1ptf4_1","quantity-input-checkbox":"_quantity-input-checkbox_1ptf4_5","quantity-input-checkbox-for-small-label":"_quantity-input-checkbox-for-small-label_1ptf4_9","quantity-input-checkbox-for-hidden-label":"_quantity-input-checkbox-for-hidden-label_1ptf4_12"},d=({label:n="Quantité",name:r="quantity",onChange:t,disabled:m,className:I,classNameFooter:w,isLabelHidden:p,smallLabel:f,hideFooter:F,isOptional:v,min:h=0})=>{const y=i.useRef(null),b=i.useRef(null),[c]=j(r),{setFieldValue:V}=A(),[o,q]=i.useState(c.value==="");i.useEffect(()=>{q(c.value==="")},[c.value]),i.useEffect(()=>{var x;const e=document.activeElement===b.current;!o&&e&&((x=y.current)==null||x.focus())},[o]);const Q=a=>{const e=a.target.value?parseInt(a.target.value):"";t==null||t(e)},T=async()=>{const a=!o;q(a);let e=h;a&&(e=""),t?t(e):await V(r,e)};return s.jsxs("div",{className:u["quantity-input"],role:"group","aria-label":n,children:[s.jsx(C,{refForInput:y,smallLabel:f,name:r,label:n,isOptional:v,disabled:m,type:"number",hasDecimal:!1,className:I,classNameFooter:w,min:h,max:1e6,isLabelHidden:p,hideFooter:F,step:1,...t&&{onChange:Q}}),s.jsx(S,{refForInput:b,hideFooter:!0,label:"Illimité",name:"unlimited",onChange:T,checked:o,className:N(u["quantity-input-checkbox"],{[u["quantity-input-checkbox-for-small-label"]]:f,[u["quantity-input-checkbox-for-hidden-label"]]:p}),disabled:m})]})};try{d.displayName="QuantityInput",d.__docgenInfo={description:`The QuantityInput component is a combination of a TextInput and a Checkbox to define quantities.
It integrates with Formik for form state management and is used when an undefined quantity is meant to be interpreted as unlimited.

---
**Important: Always use QuantityInput instead of a simple TextInput when dealing with unlimited quantities.**
Placeholder text is not accessible, as it disappears when the input is focused or when the user starts typing.
---`,displayName:"QuantityInput",props:{className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},hideFooter:{defaultValue:null,description:`A flag to hide the footer.
To be used with caution, as it can affect accessibility.`,name:"hideFooter",required:!1,type:{name:"boolean"}},isLabelHidden:{defaultValue:null,description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:null,description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},label:{defaultValue:{value:"Quantité"},description:"A label for the input, also used as the aria-label for the group.",name:"label",required:!1,type:{name:"string"}},name:{defaultValue:{value:"quantity"},description:"The name of the input, mind what's being used in the formik form.",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:`A callback when the quantity changes.
If not provided, the value will be set in the formik form, otherwise, setFieldValue must be called manually.
This is to support custom logic when the quantity changes.`,name:"onChange",required:!1,type:{name:"((quantity: Quantity) => void)"}},min:{defaultValue:{value:"0"},description:"The minimum value allowed for the quantity. Make sure it matches formik validation schema.",name:"min",required:!1,type:{name:"Quantity"}}}}}catch{}const O={title:"ui-kit/forms/QuantityInput",component:d,decorators:[n=>s.jsx(E,{initialValues:{quantity:""},onSubmit:()=>{},children:s.jsx(n,{})})]},l={args:{}};var g,_,k;l.parameters={...l.parameters,docs:{...(g=l.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: {}
}`,...(k=(_=l.parameters)==null?void 0:_.docs)==null?void 0:k.source}}};const R=["Default"],H=Object.freeze(Object.defineProperty({__proto__:null,Default:l,__namedExportsOrder:R,default:O},Symbol.toStringTag,{value:"Module"}));export{H as Q};
