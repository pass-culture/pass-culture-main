import{j as r}from"./jsx-runtime-BYYWji4R.js";import{u as F,a as S,F as j}from"./index.esm-8YUF6BUU.js";import{r as h}from"./index-ClcD9ViR.js";import{f as C}from"./full-next-B_76kGmE.js";import{B as N}from"./Button-CMQcpNQM.js";import{I as A,B}from"./types-yVZEaApa.js";import{e as b}from"./index-6_QEwcTq.js";import{T as D}from"./TextInput-Cn-XS-xI.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DeARc5FM.js";import"./stroke-pass-CALgybTM.js";import"./SvgIcon-CyWUmZpn.js";import"./Tooltip-BpKRYYrm.js";import"./Button.module-CpX5ULHU.js";import"./BaseInput-BI1b_EYZ.js";import"./FieldError-azuIsM2E.js";import"./stroke-error-DSZD431a.js";import"./FieldLayoutCharacterCount-CTPArH5Q.js";import"./index.module-DF6qn1Ex.js";const L=["gmail.com","orange.fr","wanadoo.fr","yahoo.fr","hotmail.fr","free.fr","fnac.com","hotmail.com","outlook.fr","cultura.fr"],O={domainThreshold:4,domains:L,secondLevelDomains:[],topLevelDomains:[]},P=(e,a)=>{var t;if(!a)return(t=b.run({...O,email:e}))==null?void 0:t.full},V={"email-validation-error":"_email-validation-error_n28t9_1","email-validation-tip":"_email-validation-tip_n28t9_9"},i=h.forwardRef(({name:e,description:a,label:t,className:o,onApplyTip:E,maxLength:_=255,required:k,asterisk:q=!0,error:m,...n},T)=>{const[s,u]=h.useState(),I=d=>{var f;const c=d.target.value;if(c.length>0){const g=P(c.toString(),!!m);g?u(g):p()}(f=n.onBlur)==null||f.call(n,d)},p=()=>{u(null)};return r.jsxs(r.Fragment,{children:[r.jsx(D,{ref:T,label:t,name:e,description:a,autoComplete:"email",className:o,maxLength:_,required:k,asterisk:q,error:m,...n,onBlur:I}),s&&r.jsxs("div",{className:V["email-validation-error"],children:[r.jsxs("div",{className:V["email-validation-tip"],children:["Voulez-vous plutÃ´t dire ",s," ?"]}),r.jsx(N,{variant:B.TERNARY,icon:C,iconPosition:A.LEFT,onClick:()=>{E(s),p()},autoFocus:!0,children:"Appliquer la modification"})]})]})});i.displayName="EmailSpellCheckInput";try{i.displayName="EmailSpellCheckInput",i.__docgenInfo={description:"",displayName:"EmailSpellCheckInput",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},onApplyTip:{defaultValue:null,description:"",name:"onApplyTip",required:!0,type:{name:"(tip: string) => void"}},overrideInitialTip:{defaultValue:null,description:"",name:"overrideInitialTip",required:!1,type:{name:"string | null"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},asterisk:{defaultValue:{value:"true"},description:"",name:"asterisk",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void)"}}}}}catch{}const R=({children:e})=>{const a=S({defaultValues:{email:"jmclery@htomil.com"}});return r.jsx(j,{...a,children:e})},ne={title:"ui-kit/formsV2/EmailSpellCheckInput",component:i,decorators:[e=>r.jsx(R,{children:r.jsx(e,{})})]},l={args:{name:"email",label:"Adresse email",description:"Format: email@exemple.com",error:"",required:!0,asterisk:!0},render:e=>{const{setValue:a,register:t}=F();return r.jsx(i,{...e,...t("email"),onApplyTip:o=>{a("email",o)}})}};var x,y,v;l.parameters={...l.parameters,docs:{...(x=l.parameters)==null?void 0:x.docs,source:{originalSource:`{
  args: {
    name: 'email',
    label: 'Adresse email',
    description: 'Format: email@exemple.com',
    error: '',
    required: true,
    asterisk: true
  },
  render: args => {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const {
      setValue,
      register
    } = useFormContext<WrapperFormValues>();
    return <EmailSpellCheckInput {...args} {...register('email')} onApplyTip={tip => {
      setValue('email', tip);
    }} />;
  }
}`,...(v=(y=l.parameters)==null?void 0:y.docs)==null?void 0:v.source}}};const le=["Default"];export{l as Default,le as __namedExportsOrder,ne as default};
