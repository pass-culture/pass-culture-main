import{j as e}from"./jsx-runtime-BYYWji4R.js";import{c as r}from"./index-DeARc5FM.js";import{R as B,r as y}from"./index-ClcD9ViR.js";import{B as T}from"./BaseInput-BI1b_EYZ.js";import{F}from"./FieldError-azuIsM2E.js";import{F as D}from"./FieldLayoutCharacterCount-CTPArH5Q.js";const a={"grid-layout-input-container":"_grid-layout-input-container_1amem_1","has-footer":"_has-footer_1amem_8","grid-layout-footer":"_grid-layout-footer_1amem_11","grid-layout-label":"_grid-layout-label_1amem_15","grid-layout-label-description":"_grid-layout-label-description_1amem_23","grid-layout-input":"_grid-layout-input_1amem_1","grid-input-extension":"_grid-input-extension_1amem_35","visually-hidden":"_visually-hidden_1amem_47"},s=B.forwardRef(({name:t,type:o="text",disabled:h,readOnly:b,label:g,className:x,labelClassName:_,isLabelHidden:V=!1,maxLength:d=255,required:u=!1,asterisk:q=!0,leftIcon:v,rightButton:I,rightIcon:N,hasDecimal:w=!0,description:i,error:l,count:n,InputExtension:p,...m},j)=>{const c=y.useId(),k=y.useId(),A=`${l?c:""}${i?` ${k}`:""}`,L=e.jsx(T,{name:t,disabled:h,hasError:!!l,maxLength:d,type:o,ref:j,rightButton:I,rightIcon:N,leftIcon:v,"aria-required":u,"aria-describedby":A,onKeyDown:f=>{o==="number"&&!w&&/[,.]/.test(f.key)&&f.preventDefault()},...m}),E=l||n!==void 0;return e.jsxs("div",{className:r(a["grid-layout-input-container"],{[a["has-footer"]]:E},x),"data-testid":`wrapper-${t}`,children:[e.jsx("div",{className:a["grid-layout-label"],children:e.jsxs("div",{className:r({[a["visually-hidden"]]:V}),children:[e.jsxs("label",{className:_,htmlFor:t,children:[g," ",u&&q&&"*"]}),i&&e.jsx("span",{id:`description-${t}`,"data-testid":`description-${t}`,className:a["grid-layout-label-description"],children:i})]})}),b?e.jsx("span",{className:r(a["grid-layout-input"]),children:m.value}):e.jsxs(e.Fragment,{children:[e.jsx("div",{className:a["grid-layout-input"],children:L}),e.jsxs("div",{className:a["grid-layout-footer"],children:[e.jsx("div",{role:"alert",id:c,children:l&&e.jsx(F,{name:t,className:a["input-layout-error"],children:l})}),n!==void 0&&e.jsx(D,{count:n,maxLength:d,name:t})]}),p&&e.jsx("div",{className:a["grid-input-extension"],children:p})]})]})});s.displayName="TextInput";try{s.displayName="TextInput",s.__docgenInfo={description:"The TextInput component is a customizable input field that integrates with Formik for form state management.\nIt supports features like character counting, read-only mode, decimal number input, and accessibility enhancements.\n\n---\n** Important: Do not use the `placeholder` to indicate the format of the field.**\nUse the `label` or `description` props instead to provide instructions on the expected format.\n---",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:null,description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:null,description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},hideAsterisk:{defaultValue:null,description:`Can be false only when it's the only field in a form and it's mandatory,
or when all fields are mandatory and the form indicates that all fields are mandatory`,name:"hideAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},hasDecimal:{defaultValue:{value:"true"},description:'Allows decimal numbers in the input.\nMust be provided with `type="number"` to be effective.\nUnused when `readOnly` is true.',name:"hasDecimal",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:`A custom error message to be displayed.
If this prop is provided, the error message will be displayed and the field will be marked as errored`,name:"error",required:!1,type:{name:"string"}},count:{defaultValue:null,description:`A custom character counter to be displayed.
If this prop is provided, the counter will be displayed`,name:"count",required:!1,type:{name:"number"}},asterisk:{defaultValue:{value:"true"},description:`A property to not displayed asterisk even if field is required
If this prop is provided, the asterisk will not be displayed`,name:"asterisk",required:!1,type:{name:"boolean"}},InputExtension:{defaultValue:null,description:`A custom component to be displayed next to the input.
It can be used to display additional information or related actions like
a checkbox to reset the input value.`,name:"InputExtension",required:!1,type:{name:"ReactNode"}},labelClassName:{defaultValue:null,description:`An extra class name to be applied to the label element.
This can be used to customize the label's appearance.`,name:"labelClassName",required:!1,type:{name:"string"}}}}}catch{}export{s as T};
