{"version":3,"file":"EmailSpellCheckInput-b56c71cb.js","sources":["../../src/ui-kit/form/RadioGroup/RadioGroup.tsx","../../src/core/shared/utils/validation.ts","../../src/ui-kit/form/PasswordInput/ValidationMessageList/ValidationMessageList.tsx","../../src/ui-kit/form/PasswordInput/PasswordInput.tsx","../../src/ui-kit/form/SirenInput/SirenInput.tsx","../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/assert.js","../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/assert-valid-user-options.js","../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/encode-email.js","../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/find-closest-domain.js","../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/trim.js","../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/parse-email.js","../../node_modules/@zootools/email-spell-checker/dist/lib/suggest-email.js","../../node_modules/@zootools/email-spell-checker/dist/lib/fuzzy-detection/sift3-distance.js","../../node_modules/@zootools/email-spell-checker/dist/lib/config/index.js","../../node_modules/@zootools/email-spell-checker/dist/lib/helpers/get-options.js","../../node_modules/@zootools/email-spell-checker/dist/lib/run.js","../../node_modules/@zootools/email-spell-checker/dist/index.js","../../src/ui-kit/form/EmailSpellCheckInput/suggestEmail.ts","../../src/ui-kit/form/EmailSpellCheckInput/EmailSpellCheckInput.tsx"],"sourcesContent":["import cn from 'classnames'\nimport { useField } from 'formik'\nimport React from 'react'\n\nimport { RadioButton } from '..'\nimport { FieldSetLayout } from '../shared'\nimport { BaseRadioVariant } from '../shared/BaseRadio/types'\n\nimport styles from './RadioGroup.module.scss'\n\nexport enum Direction {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n}\nexport interface RadioGroupProps {\n  direction?: Direction.HORIZONTAL | Direction.VERTICAL\n  disabled?: boolean\n  hideFooter?: boolean\n  name: string\n  legend?: string\n  group: {\n    label: string\n    value: string\n  }[]\n  className?: string\n  withBorder?: boolean\n  variant?: BaseRadioVariant\n}\n\nconst RadioGroup = ({\n  direction = Direction.VERTICAL,\n  disabled,\n  hideFooter = false,\n  group,\n  name,\n  legend,\n  className,\n  withBorder,\n  variant = BaseRadioVariant.PRIMARY,\n}: RadioGroupProps): JSX.Element => {\n  const [, meta] = useField({ name })\n\n  return (\n    <FieldSetLayout\n      className={cn(\n        styles['radio-group'],\n        styles[`radio-group-${direction}`],\n        className\n      )}\n      dataTestId={`wrapper-${name}`}\n      error={meta.touched && !!meta.error ? meta.error : undefined}\n      hideFooter={hideFooter}\n      legend={legend}\n      name={`radio-group-${name}`}\n    >\n      {group.map(item => (\n        <div className={styles['radio-group-item']} key={item.label}>\n          <RadioButton\n            disabled={disabled}\n            label={item.label}\n            name={name}\n            value={item.value}\n            withBorder={withBorder}\n            hasError={meta.touched && !!meta.error}\n            variant={variant}\n          />\n        </div>\n      ))}\n    </FieldSetLayout>\n  )\n}\n\nexport default RadioGroup\n","import { StringSchema } from 'yup'\n\nimport { SelectOption } from 'custom_types/form'\n\nimport { parseAndValidateFrenchPhoneNumber } from './parseAndValidateFrenchPhoneNumber'\n\nexport const isPhoneValid = (phone: string | undefined): boolean => {\n  if (!phone) {\n    return false\n  }\n  try {\n    parseAndValidateFrenchPhoneNumber(phone)\n  } catch {\n    return false\n  }\n  return true\n}\n\nexport const isPasswordValid = (password: string | undefined): boolean => {\n  if (!password) {\n    return false\n  }\n  if (password.length < 12) {\n    return false\n  }\n  const hasUpperCase = /[A-Z]/.test(password)\n  const hasLowerCase = /[a-z]/.test(password)\n  const hasNumber = /[0-9]/.test(password)\n  const hasSymbole = /[!\"#$%&'()*+,-./:;<=>?@[\\\\^_`{|}~\\]]/.test(password)\n  if (hasUpperCase && hasLowerCase && hasNumber && hasSymbole) {\n    return true\n  }\n  return false\n}\n\nenum PasswordValidationCheck {\n  LENGTH = 'LENGTH',\n  UPPER_CASE = 'UPPER_CASE',\n  LOWER_CASE = 'LOWER_CASE',\n  NUMBER = 'NUMBER',\n  SYMBOLE = 'SYMBOLE',\n}\n\nexport const getPasswordRuleLabel = (value: string) => {\n  switch (value) {\n    case PasswordValidationCheck.LENGTH:\n      return '12 caractères'\n    case PasswordValidationCheck.UPPER_CASE:\n      return '1 majuscule'\n    case PasswordValidationCheck.LOWER_CASE:\n      return '1 minuscule'\n    case PasswordValidationCheck.NUMBER:\n      return '1 chiffre'\n    case PasswordValidationCheck.SYMBOLE:\n      return '1 caractère spécial (!@#$%^&*...)'\n    default:\n      return ''\n  }\n}\n\nexport const passwordValidationStatus = (\n  password: string | undefined\n): { [key: string]: boolean } => {\n  const errors: { [key: string]: boolean } = {}\n  if (password) {\n    errors[PasswordValidationCheck.LENGTH] = password.length < 12\n    const hasUpperCase = /[A-Z]/.test(password)\n    errors[PasswordValidationCheck.UPPER_CASE] = !hasUpperCase\n    const hasLowerCase = /[a-z]/.test(password)\n    errors[PasswordValidationCheck.LOWER_CASE] = !hasLowerCase\n    const hasNumber = /[0-9]/.test(password)\n    errors[PasswordValidationCheck.NUMBER] = !hasNumber\n    const hasSymbole = /[!\"#$%&'()*+,-./:;<=>?@[\\\\^_`{|}~\\]]/.test(password)\n    errors[PasswordValidationCheck.SYMBOLE] = !hasSymbole\n  }\n  return errors\n}\n\nexport const oneOfSelectOption = (\n  field: StringSchema,\n  options: SelectOption[]\n) =>\n  field.oneOf(\n    options.map(({ value }) => String(value)).concat(['']),\n    ({ value }) => `\"${String(value)} \" n’est pas une valeur valide de la liste`\n  )\n","import { useField } from 'formik'\nimport React, { useEffect, useState } from 'react'\n\nimport {\n  getPasswordRuleLabel,\n  passwordValidationStatus,\n} from 'core/shared/utils/validation'\n\nimport { FieldError, FieldSuccess } from '../../shared'\n\nimport styles from './ValidationMessageList.module.scss'\n\ninterface ValidationMessageListProps {\n  name: string\n}\n\nconst ValidationMessageList = ({ name }: ValidationMessageListProps) => {\n  const [field] = useField({ name })\n  const [errors, setErrors] = useState<{ [key: string]: boolean }>({})\n\n  useEffect(() => {\n    setErrors(passwordValidationStatus(field.value))\n  }, [field.value])\n\n  return (\n    <div className={styles['password-footer']}>\n      {Object.keys(errors).map(k => {\n        return (\n          <div key={k} className={styles['field-layout-error']}>\n            {errors[k] ? (\n              <FieldError name={getPasswordRuleLabel(k)} iconAlt=\"Il manque \">\n                {getPasswordRuleLabel(k)}\n              </FieldError>\n            ) : (\n              <FieldSuccess\n                name={getPasswordRuleLabel(k)}\n                iconAlt=\"Il y a bien \"\n              >\n                {getPasswordRuleLabel(k)}\n              </FieldSuccess>\n            )}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ValidationMessageList\n","import { useField } from 'formik'\nimport React, { useState } from 'react'\n\nimport strokeHideIcon from 'icons/stroke-hide.svg'\nimport strokeShowIcon from 'icons/stroke-show.svg'\nimport { Button } from 'ui-kit/Button'\nimport { ButtonVariant } from 'ui-kit/Button/types'\n\nimport TextInput from '../TextInput'\n\nimport styles from './PasswordInput.module.scss'\nimport ValidationMessageList from './ValidationMessageList'\n\ninterface PasswordInputProps {\n  label: string\n  name: string\n  placeholder?: string\n  withErrorPreview?: boolean\n  autoComplete?: string\n}\n\nconst PasswordInput = ({\n  label,\n  name,\n  placeholder,\n  withErrorPreview = false,\n  autoComplete,\n  ...props\n}: PasswordInputProps): JSX.Element => {\n  const [isPasswordHidden, setPasswordHidden] = useState(true)\n  const [field] = useField({ name })\n  const displayLocalErrors = withErrorPreview && field.value.length > 0\n\n  const handleToggleHidden = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault()\n    setPasswordHidden(currentSetPasswordHidden => !currentSetPasswordHidden)\n  }\n\n  return (\n    <div className={styles['password-input-wrapper']}>\n      <TextInput\n        className={styles['password-input']}\n        label={label}\n        name={name}\n        placeholder={placeholder}\n        type={isPasswordHidden ? 'password' : 'text'}\n        autoComplete={autoComplete}\n        rightButton={() => (\n          <Button\n            icon={isPasswordHidden ? strokeHideIcon : strokeShowIcon}\n            title={\n              isPasswordHidden\n                ? 'Afficher le mot de passe'\n                : 'Cacher le mot de passe'\n            }\n            onClick={handleToggleHidden}\n            variant={ButtonVariant.TERNARY}\n          />\n        )}\n        ErrorDetails={\n          displayLocalErrors && <ValidationMessageList name={name} />\n        }\n        {...props}\n      />\n    </div>\n  )\n}\n\nexport default PasswordInput\n","import { useField } from 'formik'\nimport React, { useEffect } from 'react'\n\nimport { humanizeSiren } from 'core/Offerers/utils'\n\nimport TextInput from '../TextInput'\n\nconst formatSiren = (siren: string) => {\n  const lastChar = siren.charAt(siren.length - 1)\n  // remove character when it's not a number\n  // this way we're sure that this field only accept number\n  if (lastChar && isNaN(Number(lastChar))) {\n    return siren.slice(0, -1)\n  }\n  return humanizeSiren(siren)\n}\n\ninterface SirenInputProps {\n  label: string\n  name?: string\n  placeholder?: string\n  onValidSiren: (value: string) => void\n}\n\nconst SirenInput = ({\n  label,\n  name = 'siren',\n  placeholder = '123456789',\n  onValidSiren,\n}: SirenInputProps): JSX.Element => {\n  const [field, meta, helpers] = useField({ name })\n  const { setValue } = helpers\n  useEffect(() => {\n    setValue(formatSiren(field.value))\n    if (!meta.error && meta.touched) {\n      onValidSiren(field.value)\n    }\n  }, [meta.touched, meta.error, field.value])\n\n  return (\n    <TextInput\n      label={label}\n      maxLength={11}\n      name={name}\n      placeholder={placeholder}\n      type=\"text\"\n    />\n  )\n}\n\nexport default SirenInput\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\nexports.default = assert;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_1 = __importDefault(require(\"./assert\"));\nfunction assertValidUserOptions(options) {\n    assert_1.default(Array.isArray(options.domains), 'domains must be an array');\n    assert_1.default(Array.isArray(options.topLevelDomains), 'topLevelDomains must be an array');\n    assert_1.default(Array.isArray(options.secondLevelDomains), 'secondLevelDomains must be an array');\n    assert_1.default(typeof options.distanceFunction === 'function', 'distanceFunction must be a function');\n}\nexports.default = assertValidUserOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Encode the email address to prevent XSS but leave in valid\n// characters, following this official spec:\n// http://en.wikipedia.org/wiki/Email_address#Syntax\n//\n// We have to replace all the possible characters.\n// that's why we use a regex with a global flag.\nfunction encodeEmail(email) {\n    const result = encodeURI(email)\n        .replace(/%20/g, ' ')\n        .replace(/%25/g, '%')\n        .replace(/%5E/g, '^')\n        .replace(/%60/g, '`')\n        .replace(/%7B/g, '{')\n        .replace(/%7C/g, '|')\n        .replace(/%7D/g, '}');\n    return result;\n}\nexports.default = encodeEmail;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction findClosestDomain(opts) {\n    const { domain, domains, distanceFunction, threshold } = opts;\n    let dist;\n    let minDist = Infinity;\n    let closestDomain = null;\n    if (!domain || !domains) {\n        return undefined;\n    }\n    for (let i = 0; i < domains.length; i++) {\n        if (domain === domains[i]) {\n            return domain;\n        }\n        dist = distanceFunction(domain, domains[i]);\n        if (dist < minDist) {\n            minDist = dist;\n            closestDomain = domains[i];\n        }\n    }\n    if (minDist <= threshold && closestDomain !== null) {\n        return closestDomain;\n    }\n    else {\n        return undefined;\n    }\n}\nexports.default = findClosestDomain;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst WHITESPACE_PATTERN = /\\s/;\n/**\n * Just in case a browser doesn't support .trim\n * Copied from https://github.com/Trott/trim\n * Credits to them\n */\nfunction trim(str) {\n    if (str.trim) {\n        return str.trim();\n    }\n    return right(left(str));\n}\nfunction left(str) {\n    if (str.trimLeft)\n        return str.trimLeft();\n    return str.replace(/^\\s\\s*/, '');\n}\nfunction right(str) {\n    if (str.trimRight)\n        return str.trimRight();\n    let i = str.length;\n    while (WHITESPACE_PATTERN.test(str.charAt(--i)))\n        ;\n    return str.slice(0, i + 1);\n}\nexports.default = trim;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trim_1 = __importDefault(require(\"./trim\"));\nconst MINIUM_EMAIL_PARTS = 2;\nfunction parseEmail(emailStr) {\n    const email = trim_1.default(emailStr);\n    const parts = email.split('@');\n    if (parts.length < MINIUM_EMAIL_PARTS) {\n        return false;\n    }\n    for (let i = 0; i < parts.length; i++) {\n        if (parts[i] === '') {\n            return false;\n        }\n    }\n    // FYI, in hello@example.com\n    // secondLevelDomain -> example\n    // topLevelDomain -> com\n    let sld = '';\n    let tld = '';\n    const domain = parts.pop();\n    const domainParts = domain.split('.');\n    if (domainParts.length === 0) {\n        // The address does not have a top-level domain\n        return false;\n    }\n    else if (domainParts.length == 1) {\n        // The address has only a top-level domain (valid under RFC)\n        tld = domainParts[0];\n    }\n    else {\n        // The address has a domain and a top-level domain\n        sld = domainParts[0];\n        for (let j = 1; j < domainParts.length; j++) {\n            tld += domainParts[j] + '.';\n        }\n        tld = tld.substring(0, tld.length - 1);\n    }\n    return {\n        topLevelDomain: tld,\n        secondLevelDomain: sld,\n        domain,\n        address: parts.join('@'),\n    };\n}\nexports.default = parseEmail;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst encode_email_1 = __importDefault(require(\"./helpers/encode-email\"));\nconst find_closest_domain_1 = __importDefault(require(\"./helpers/find-closest-domain\"));\nconst parse_email_1 = __importDefault(require(\"./helpers/parse-email\"));\nfunction suggestEmail(opts) {\n    const encodedEmail = encode_email_1.default(opts.email.toLowerCase());\n    const email = parse_email_1.default(encodedEmail);\n    if (!email) {\n        return undefined;\n    }\n    const { domains, domainThreshold, distanceFunction, secondLevelDomains, topLevelDomains, } = opts;\n    if (secondLevelDomains && topLevelDomains) {\n        // If the email is a valid 2nd-level + top-level, do not suggest anything.\n        // if (hasValidSecondLevelDomain(email) && hasValidTopLevelDomain(email)) {\n        if (secondLevelDomains.indexOf(email.secondLevelDomain) !== -1 &&\n            topLevelDomains.indexOf(email.topLevelDomain) !== -1) {\n            return undefined;\n        }\n    }\n    let closestDomain = find_closest_domain_1.default({\n        domain: email.domain,\n        domains,\n        distanceFunction,\n        threshold: domainThreshold,\n    });\n    if (closestDomain) {\n        if (closestDomain == email.domain) {\n            // The email address exactly matches one of the supplied domains; do not return a suggestion.\n            return undefined;\n        }\n        else {\n            // The email address closely matches one of the supplied domains; return a suggestion\n            return {\n                address: email.address,\n                domain: closestDomain,\n                full: email.address + '@' + closestDomain,\n            };\n        }\n    }\n    // The email address does not closely match one of the supplied domains\n    const closestSecondLevelDomain = find_closest_domain_1.default({\n        domain: email.secondLevelDomain,\n        domains: secondLevelDomains,\n        distanceFunction,\n        threshold: opts.secondLevelThreshold,\n    });\n    const closestTopLevelDomain = find_closest_domain_1.default({\n        domain: email.topLevelDomain,\n        domains: topLevelDomains,\n        distanceFunction,\n        threshold: opts.topLevelThreshold,\n    });\n    if (email.domain) {\n        closestDomain = email.domain;\n        let rtrn = false;\n        if (closestSecondLevelDomain &&\n            closestSecondLevelDomain != email.secondLevelDomain) {\n            // The email address may have a mispelled second-level domain; return a suggestion\n            closestDomain = closestDomain.replace(email.secondLevelDomain, closestSecondLevelDomain);\n            rtrn = true;\n        }\n        if (closestTopLevelDomain &&\n            closestTopLevelDomain != email.topLevelDomain &&\n            email.secondLevelDomain !== '') {\n            // The email address may have a mispelled top-level domain; return a suggestion\n            closestDomain = closestDomain.replace(new RegExp(email.topLevelDomain + '$'), closestTopLevelDomain);\n            rtrn = true;\n        }\n        if (rtrn) {\n            return {\n                address: email.address,\n                domain: closestDomain,\n                full: email.address + '@' + closestDomain,\n            };\n        }\n    }\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n    return undefined;\n}\nexports.default = suggestEmail;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction sift3Distance(s1, s2) {\n    // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html\n    if (s1 == null || s1.length === 0) {\n        if (s2 == null || s2.length === 0) {\n            return 0;\n        }\n        else {\n            return s2.length;\n        }\n    }\n    if (s2 == null || s2.length === 0) {\n        return s1.length;\n    }\n    let c = 0;\n    let offset1 = 0;\n    let offset2 = 0;\n    let lcs = 0;\n    const maxOffset = 5;\n    while (c + offset1 < s1.length && c + offset2 < s2.length) {\n        if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n            lcs++;\n        }\n        else {\n            offset1 = 0;\n            offset2 = 0;\n            for (let i = 0; i < maxOffset; i++) {\n                if (c + i < s1.length && s1.charAt(c + i) == s2.charAt(c)) {\n                    offset1 = i;\n                    break;\n                }\n                if (c + i < s2.length && s1.charAt(c) == s2.charAt(c + i)) {\n                    offset2 = i;\n                    break;\n                }\n            }\n        }\n        c++;\n    }\n    return (s1.length + s2.length) / 2 - lcs;\n}\nexports.default = sift3Distance;\n","\"use strict\";\n// Default configuration options\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.POPULAR_TLDS = exports.POPULAR_DOMAINS = exports.DEFAULT_CONFIG = void 0;\nconst sift3_distance_1 = __importDefault(require(\"../fuzzy-detection/sift3-distance\"));\n/***\n * Default list of popular emails for 2022 and onwards.\n * https://www.mailmunch.com/blog/best-email-service-providers\n *\n * If you find a domain you want to add, please submit a PR.\n * Also, notice that this list is not exhaustive.\n * You can always pass your own list of domains.\n */\nconst POPULAR_DOMAINS = [\n    'msn.com',\n    'bellsouth.net',\n    'telus.net',\n    'comcast.net',\n    'optusnet.com.au',\n    'earthlink.net',\n    'qq.com',\n    'sky.com',\n    'icloud.com',\n    'sympatico.ca',\n    'googlemail.com',\n    'att.net',\n    'xtra.co.nz',\n    'web.de',\n    'cox.net',\n    'gmail.com',\n    'ymail.com',\n    'aim.com',\n    'rogers.com',\n    'verizon.net',\n    'rocketmail.com',\n    'optonline.net',\n    'sbcglobal.net',\n    // aol\n    'aol.com',\n    'aim.com',\n    'me.com',\n    'mailw.com',\n    'btinternet.com',\n    'charter.net',\n    'shaw.ca',\n    'hey.com',\n    // Proton\n    'proton.me',\n    'pm.com',\n    'protonmail.com',\n    'zoho.com',\n    'yandex.com',\n    'titan.email',\n];\nexports.POPULAR_DOMAINS = POPULAR_DOMAINS;\nconst POPULAR_TLDS = [\n    'com',\n    'com.au',\n    'com.tw',\n    'co',\n    'ca',\n    'co.nz',\n    'co.uk',\n    'de',\n    'fr',\n    'it',\n    'ru',\n    'org',\n    'edu',\n    'gov',\n    'jp',\n    'nl',\n    'kr',\n    'se',\n    'eu',\n    'ie',\n    'co.il',\n    'us',\n    'at',\n    'be',\n    'dk',\n    'hk',\n    'es',\n    'gr',\n    'ch',\n    'no',\n    'cz',\n    'net',\n    'net.au',\n    'info',\n    'biz',\n    'mil',\n    'co.jp',\n    'sg',\n    'hu',\n    'uk',\n    'sk',\n    // Country specific popular domains\n    'ar',\n    'cf',\n    'cl',\n    'cn',\n    'ga',\n    'gq',\n    'ir',\n    'ml',\n    'mx',\n    'nu',\n    'nz',\n    'ph',\n    'pl',\n    'ro',\n    'tk',\n    'tw',\n    'ua',\n    'vg',\n    'ws',\n    'xn',\n    'za',\n    // popular TLDs that startup use in 2022\n    // https://thewebsiteflip.com/domains/funded-startup-brands-2021/#:~:text=from%20the%20data.-,1.,TLDs%20for%20the%20foreseeable%20future.\n    // https://martijnoud.com/most-popular-tld-crypto/\n    'app',\n    'au',\n    'ai',\n    'biz',\n    'br',\n    'blog',\n    'cloud',\n    'club',\n    'cc',\n    'de',\n    'dev',\n    'digital',\n    'fi',\n    'finance',\n    'id',\n    'in',\n    'io',\n    'me',\n    'mobi',\n    'network',\n    'pw',\n    'so',\n    'xyz',\n    'software',\n    'to',\n    'tech',\n];\nexports.POPULAR_TLDS = POPULAR_TLDS;\nconst DEFAULT_CONFIG = {\n    domainThreshold: 2,\n    domains: POPULAR_DOMAINS,\n    secondLevelThreshold: 2,\n    secondLevelDomains: ['yahoo', 'hotmail', 'mail', 'live', 'outlook'],\n    topLevelThreshold: 2,\n    topLevelDomains: POPULAR_TLDS,\n    distanceFunction: sift3_distance_1.default,\n};\nexports.DEFAULT_CONFIG = DEFAULT_CONFIG;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"../config\");\nfunction getOptions(userOptions) {\n    return {\n        email: userOptions.email,\n        domains: userOptions.domains || config_1.DEFAULT_CONFIG.domains,\n        topLevelDomains: userOptions.topLevelDomains || config_1.DEFAULT_CONFIG.topLevelDomains,\n        secondLevelDomains: userOptions.secondLevelDomains || config_1.DEFAULT_CONFIG.secondLevelDomains,\n        distanceFunction: userOptions.distanceFunction || config_1.DEFAULT_CONFIG.distanceFunction,\n        domainThreshold: userOptions.domainThreshold || config_1.DEFAULT_CONFIG.domainThreshold,\n        secondLevelThreshold: userOptions.secondLevelThreshold || config_1.DEFAULT_CONFIG.secondLevelThreshold,\n        topLevelThreshold: userOptions.topLevelThreshold || config_1.DEFAULT_CONFIG.topLevelThreshold,\n        suggested: userOptions.suggested || undefined,\n        empty: userOptions.suggested || undefined,\n    };\n}\nexports.default = getOptions;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_valid_user_options_1 = __importDefault(require(\"./helpers/assert-valid-user-options\"));\nconst suggest_email_1 = __importDefault(require(\"./suggest-email\"));\nconst get_options_1 = __importDefault(require(\"./helpers/get-options\"));\nfunction run(userOptions) {\n    const options = get_options_1.default(userOptions);\n    assert_valid_user_options_1.default(options || {});\n    const email = suggest_email_1.default(options);\n    if (!email && userOptions.empty) {\n        userOptions.empty();\n    }\n    if (email && userOptions.suggested) {\n        userOptions.suggested(email);\n    }\n    return email;\n}\nexports.default = run;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.POPULAR_TLDS = exports.POPULAR_DOMAINS = exports.run = void 0;\nconst run_1 = __importDefault(require(\"./lib/run\"));\nexports.run = run_1.default;\nconst config_1 = require(\"./lib/config\");\nObject.defineProperty(exports, \"POPULAR_DOMAINS\", { enumerable: true, get: function () { return config_1.POPULAR_DOMAINS; } });\nObject.defineProperty(exports, \"POPULAR_TLDS\", { enumerable: true, get: function () { return config_1.POPULAR_TLDS; } });\nconst MailSpellChecker = {\n    run: run_1.default,\n    POPULAR_DOMAINS: config_1.POPULAR_DOMAINS,\n    POPULAR_TLDS: config_1.POPULAR_TLDS,\n};\nexports.default = MailSpellChecker;\n","import emailSpellChecker from '@zootools/email-spell-checker'\n\nconst TOP_MOST_USED_DOMAINS = [\n  'gmail.com',\n  'orange.fr',\n  'wanadoo.fr',\n  'yahoo.fr',\n  'hotmail.fr',\n  'free.fr',\n  'fnac.com',\n  'hotmail.com',\n  'outlook.fr',\n  'cultura.fr',\n]\n\nconst config = {\n  domainThreshold: 4,\n  domains: TOP_MOST_USED_DOMAINS,\n  secondLevelDomains: [],\n  topLevelDomains: [],\n}\n\nexport const suggestEmail = (\n  email: string,\n  fieldHasError: boolean\n): string | undefined => {\n  if (fieldHasError) {\n    return undefined\n  }\n\n  return emailSpellChecker.run({ ...config, email })?.full\n}\n","import { useField, useFormikContext } from 'formik'\nimport React, { useState } from 'react'\n\nimport fullNextIcon from 'icons/full-next.svg'\nimport { Button } from 'ui-kit/Button'\nimport { ButtonVariant, IconPositionEnum } from 'ui-kit/Button/types'\nimport { suggestEmail } from 'ui-kit/form/EmailSpellCheckInput/suggestEmail'\nimport { TextInput } from 'ui-kit/form/index'\nimport { FieldLayoutBaseProps } from 'ui-kit/form/shared/FieldLayout/FieldLayout'\n\nimport styles from './EmailSpellCheckInput.module.scss'\n\nexport type EmailSpellCheckInputProps<FormType> = FieldLayoutBaseProps & {\n  // `Extract` needed so the key is a string. See https://stackoverflow.com/a/51808262\n  name: Extract<keyof FormType, string>\n  placeholder: string\n  label: string\n  overrideInitialTip?: string | null\n}\n\nconst EmailSpellCheckInput = <FormType,>({\n  name,\n  placeholder,\n  label,\n  className,\n  overrideInitialTip = null,\n}: EmailSpellCheckInputProps<FormType>): JSX.Element => {\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormType>()\n  const [field, meta] = useField<string>(name)\n  const [emailValidationTip, setEmailValidationTip] = useState<string | null>(\n    overrideInitialTip\n  )\n\n  const handleEmailValidation = () => {\n    if (field.value.length > 0) {\n      const suggestion = suggestEmail(\n        field.value.toString(),\n        Boolean(meta.error)\n      )\n      if (suggestion) {\n        setEmailValidationTip(suggestion)\n      }\n      setFieldTouched(field.name, true)\n    }\n  }\n  const resetEmailValidation = () => {\n    setEmailValidationTip(null)\n  }\n\n  const applyTip = () => {\n    setFieldValue(name, emailValidationTip, true)\n    setEmailValidationTip(null)\n  }\n\n  return (\n    <>\n      <TextInput\n        label={label}\n        name={name}\n        placeholder={placeholder}\n        onBlur={handleEmailValidation}\n        onFocus={resetEmailValidation}\n        hideFooter={emailValidationTip != null} // This is needed to hide the footer div that takes some space\n        autoComplete=\"email\"\n        className={className}\n        ErrorDetails={\n          emailValidationTip ? (\n            <div className={styles['email-validation-error']}>\n              <div className={styles['email-validation-tip']}>\n                Voulez-vous plutôt dire {emailValidationTip} ?\n              </div>\n              <Button\n                variant={ButtonVariant.TERNARY}\n                icon={fullNextIcon}\n                iconPosition={IconPositionEnum.LEFT}\n                onClick={applyTip}\n                autoFocus\n              >\n                Appliquer la modification\n              </Button>\n            </div>\n          ) : (\n            <></>\n          )\n        }\n      />\n    </>\n  )\n}\n\nexport default EmailSpellCheckInput\n"],"names":["Direction","Direction2","RadioGroup","direction","disabled","hideFooter","group","name","legend","className","withBorder","variant","BaseRadioVariant","meta","useField","jsx","FieldSetLayout","cn","styles","item","RadioButton","RadioGroup$1","getPasswordRuleLabel","value","passwordValidationStatus","password","errors","hasUpperCase","hasLowerCase","hasNumber","hasSymbole","ValidationMessageList","field","setErrors","useState","useEffect","k","FieldError","FieldSuccess","PasswordInput","label","placeholder","withErrorPreview","autoComplete","props","isPasswordHidden","setPasswordHidden","displayLocalErrors","handleToggleHidden","e","currentSetPasswordHidden","TextInput","Button","strokeHideIcon","strokeShowIcon","ButtonVariant","formatSiren","siren","lastChar","humanizeSiren","SirenInput","onValidSiren","helpers","setValue","assert_1","assert","condition","message","__importDefault","this","mod","assertValidUserOptions_1","require$$0","assertValidUserOptions","options","encodeEmail_1","encodeEmail","email","findClosestDomain_1","findClosestDomain","opts","domain","domains","distanceFunction","threshold","dist","minDist","closestDomain","i","trim_1","WHITESPACE_PATTERN","trim","str","right","left","parseEmail_1","MINIUM_EMAIL_PARTS","parseEmail","emailStr","parts","sld","tld","domainParts","j","suggestEmail_1","encode_email_1","find_closest_domain_1","require$$1","parse_email_1","require$$2","suggestEmail","encodedEmail","domainThreshold","secondLevelDomains","topLevelDomains","closestSecondLevelDomain","closestTopLevelDomain","rtrn","sift3Distance_1","sift3Distance","s1","s2","c","offset1","offset2","lcs","maxOffset","config","sift3_distance_1","POPULAR_DOMAINS","POPULAR_TLDS","DEFAULT_CONFIG","getOptions_1","config_1","getOptions","userOptions","run_1","assert_valid_user_options_1","suggest_email_1","get_options_1","run","exports","MailSpellChecker","TOP_MOST_USED_DOMAINS","fieldHasError","_a","emailSpellChecker","EmailSpellCheckInput","overrideInitialTip","setFieldValue","setFieldTouched","useFormikContext","emailValidationTip","setEmailValidationTip","handleEmailValidation","suggestion","resetEmailValidation","applyTip","Fragment","jsxs","fullNextIcon","IconPositionEnum","EmailSpellCheckInput$1"],"mappings":"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","x_google_ignoreList":[5,6,7,8,9,10,11,12,13,14,15,16]}