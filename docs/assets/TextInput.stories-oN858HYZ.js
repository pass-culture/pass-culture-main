import{j as e}from"./jsx-runtime-CfatFE5O.js";import{c as y}from"./index-DeARc5FM.js";import{R as O}from"./index-ClcD9ViR.js";import{B as R}from"./BaseInput-zpkrYXWy.js";import{F as H}from"./FieldError-DblMbt5C.js";import{F as M}from"./FieldLayoutCharacterCount-DooUcf1c.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./SvgIcon-CUWb-Ez8.js";import"./stroke-error-DSZD431a.js";const t={"text-input-wrapper":"_text-input-wrapper_10arj_1","text-input-readonly":"_text-input-readonly_10arj_4","input-layout":"_input-layout_10arj_8","input-layout-label":"_input-layout-label_10arj_12","input-layout-label-container":"_input-layout-label-container_10arj_20","input-layout-label-asterisk":"_input-layout-label-asterisk_10arj_23","input-layout-footer":"_input-layout-footer_10arj_26","input-layout-error":"_input-layout-error_10arj_32","input-layout-input-description":"_input-layout-input-description_10arj_38","visually-hidden":"_visually-hidden_10arj_47"},i=O.forwardRef(({name:a,type:u="text",disabled:v,readOnly:N,label:I,className:E,isLabelHidden:L=!1,maxLength:d=255,required:p=!1,leftIcon:A,rightButton:T,rightIcon:k,hasDecimal:D=!0,description:s,error:o,count:c,...m},F)=>{const B=e.jsx(R,{name:a,disabled:v,hasError:!!o,maxLength:d,type:u,ref:F,rightButton:T,rightIcon:k,leftIcon:A,"aria-required":p,"aria-describedby":s?`description-${a}`:void 0,onKeyDown:f=>{u==="number"&&!D&&/[,.]/.test(f.key)&&f.preventDefault()},...m});return e.jsxs("div",{className:y(t["input-layout"],E),"data-testid":`wrapper-${a}`,children:[e.jsxs("div",{className:y(t["input-layout-label-container"],{[t["visually-hidden"]]:L}),children:[e.jsxs("label",{className:t["input-layout-label"],htmlFor:a,children:[I," ",p&&"*"]}),s&&e.jsx("span",{id:`description-${a}`,"data-testid":`description-${a}`,className:t["input-layout-input-description"],children:s})]}),N?e.jsx("span",{className:t["text-input-readonly"],children:m.value}):e.jsx(e.Fragment,{children:e.jsxs("div",{className:t["text-input"],children:[B,e.jsxs("div",{className:t["input-layout-footer"],children:[e.jsx("div",{role:"alert",className:t["input-layout-error"],id:`error-details-${a}`,children:o&&e.jsx(H,{name:a,children:o})}),c!==void 0&&e.jsx(M,{count:c,maxLength:d,name:a})]})]})})]})});i.displayName="TextInput";try{i.displayName="TextInput",i.__docgenInfo={description:"The TextInput component is a customizable input field that integrates with Formik for form state management.\nIt supports features like character counting, read-only mode, decimal number input, and accessibility enhancements.\n\n---\n** Important: Do not use the `placeholder` to indicate the format of the field.**\nUse the `label` or `description` props instead to provide instructions on the expected format.\n---",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:null,description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:null,description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},showMandatoryAsterisk:{defaultValue:null,description:`Can be false only when it's the only field in a form and it's mandatory,
or when all fields are mandatory and the form indicates that all fields are mandatory`,name:"showMandatoryAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},hideFooter:{defaultValue:null,description:`A flag to hide the footer.
To be used with caution, as it can affect accessibility.`,name:"hideFooter",required:!1,type:{name:"boolean"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},hasDecimal:{defaultValue:{value:"true"},description:'Allows decimal numbers in the input.\nMust be provided with `type="number"` to be effective.\nUnused when `readOnly` is true.',name:"hasDecimal",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:`A custom error message to be displayed.
If this prop is provided, the error message will be displayed and the field will be marked as errored`,name:"error",required:!1,type:{name:"string"}},count:{defaultValue:null,description:`A custom character counter to be displayed.
If this prop is provided, the counter will be displayed`,name:"count",required:!1,type:{name:"number"}}}}}catch{}const J={title:"ui-kit/formsV2/TextInput",component:i},r={args:{name:"email",label:"Email",isLabelHidden:!0}},l={args:{...r.args,readOnly:!0,value:"A text wrapped in a span"}},n={args:{...r.args,error:"This field is required"}};var h,b,g;r.parameters={...r.parameters,docs:{...(h=r.parameters)==null?void 0:h.docs,source:{originalSource:`{
  args: {
    name: 'email',
    label: 'Email',
    isLabelHidden: true
  }
}`,...(g=(b=r.parameters)==null?void 0:b.docs)==null?void 0:g.source}}};var _,x,V;l.parameters={...l.parameters,docs:{...(_=l.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    ...Default.args,
    readOnly: true,
    value: 'A text wrapped in a span'
  }
}`,...(V=(x=l.parameters)==null?void 0:x.docs)==null?void 0:V.source}}};var q,j,w;n.parameters={...n.parameters,docs:{...(q=n.parameters)==null?void 0:q.docs,source:{originalSource:`{
  args: {
    ...Default.args,
    error: 'This field is required'
  }
}`,...(w=(j=n.parameters)==null?void 0:j.docs)==null?void 0:w.source}}};const Q=["Default","ReadOnly","WithExternalError"];export{r as Default,l as ReadOnly,n as WithExternalError,Q as __namedExportsOrder,J as default};
