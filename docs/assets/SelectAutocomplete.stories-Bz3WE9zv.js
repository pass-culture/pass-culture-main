import{j as e}from"./jsx-runtime-BYYWji4R.js";import{o as he,c as ge,a as ye}from"./index.esm-BWN7Uh-k.js";import{r as n}from"./index-ClcD9ViR.js";import{u as ve,a as be,F as xe}from"./index.esm-BuPb1Mi7.js";import{c as z}from"./index-DeARc5FM.js";import{B as _e}from"./BaseInput-BI1b_EYZ.js";import{F as Se}from"./FieldLayout-B7vRs_OG.js";import{s as we}from"./stroke-down-Co3p5GaP.js";import{S as Oe}from"./SvgIcon-CyWUmZpn.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./full-clear-Q4kCtSRL.js";import"./full-close-5Oxr7nnd.js";import"./full-help-blUMxBcv.js";import"./Button-Cva4CQSi.js";import"./stroke-pass-CALgybTM.js";import"./Tooltip-BpKRYYrm.js";import"./Button.module-BsO1-3k4.js";import"./types-yVZEaApa.js";import"./FieldError-azuIsM2E.js";import"./stroke-error-DSZD431a.js";import"./FieldLayoutCharacterCount-Bc4HS3VB.js";import"./index.module-DF6qn1Ex.js";const Ve="_menu_16n7z_1",N={menu:Ve,"menu--no-results":"_menu--no-results_16n7z_15","options-item":"_options-item_16n7z_18","option-hovered":"_option-hovered_16n7z_33"},W=({className:r,fieldName:s,selectedValue:l,filteredOptions:g,setHoveredOptionIndex:c,listRef:T,hoveredOptionIndex:y,selectOption:q})=>e.jsxs("div",{className:z(N.menu,r),role:"listbox",children:[g.length===0&&e.jsx("span",{className:N["menu--no-results"],children:"Aucun résultat"}),e.jsx("ul",{"data-testid":"list",id:`list-${s}`,ref:T,role:"listbox",children:g.map(({value:v,label:w},x)=>{const O=l===String(v);return e.jsx("li",{"aria-selected":O,"aria-posinset":x+1,"aria-setsize":g.length,className:y===x?N["option-hovered"]:"","data-value":v,"data-selected":O,id:`option-display-${v}`,onMouseEnter:()=>c(x),onFocus:()=>c(x),role:"option",tabIndex:-1,children:e.jsx("span",{onClick:()=>{q(String(v))},className:z(N["options-item"]),children:w})},`option-display-${v}`)})})]});try{W.displayName="OptionsList",W.__docgenInfo={description:"",displayName:"OptionsList",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},fieldName:{defaultValue:null,description:"",name:"fieldName",required:!0,type:{name:"string"}},selectedValue:{defaultValue:null,description:"",name:"selectedValue",required:!0,type:{name:"string | null"}},filteredOptions:{defaultValue:null,description:"",name:"filteredOptions",required:!0,type:{name:"SelectOption[]"}},setHoveredOptionIndex:{defaultValue:null,description:"",name:"setHoveredOptionIndex",required:!0,type:{name:"(value: number | null) => void"}},listRef:{defaultValue:null,description:"",name:"listRef",required:!0,type:{name:"Ref<HTMLUListElement>"}},hoveredOptionIndex:{defaultValue:null,description:"",name:"hoveredOptionIndex",required:!0,type:{name:"number | null"}},selectOption:{defaultValue:null,description:"",name:"selectOption",required:!0,type:{name:"(value: string) => void"}}}}}catch{}const F={"multi-select-autocomplete-container":"_multi-select-autocomplete-container_1cs4v_2","multi-select-autocomplete-placeholder-input":"_multi-select-autocomplete-placeholder-input_1cs4v_8","field-overlay":"_field-overlay_1cs4v_29","visually-hidden":"_visually-hidden_1cs4v_52"},je={"dropdown-indicator":"_dropdown-indicator_hafu1_1"},H=({disabled:r,isOpen:s,toggleField:l})=>e.jsx("button",{onClick:l,className:je["dropdown-indicator"],type:"button",disabled:r,children:e.jsx(Oe,{src:we,alt:`${s?"Masquer":"Afficher"} les options`,width:"20"})});try{H.displayName="Toggle",H.__docgenInfo={description:"",displayName:"Toggle",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!0,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},toggleField:{defaultValue:null,description:"",name:"toggleField",required:!0,type:{name:"() => void"}}}}}catch{}const S=n.forwardRef(({className:r,disabled:s=!1,name:l,hideArrow:g,isOptional:c=!1,label:T,options:y,resetOnOpen:q=!0,description:v,error:w,onChange:x=()=>{},onBlur:O=()=>{},onSearch:ie=()=>{},searchInOptions:ue=(m,f)=>m.filter(_=>_.label.toLowerCase().includes(f.trim().toLowerCase())),onReset:de=()=>{}},pe)=>{var G,J;const[m,f]=n.useState(""),[_,$]=n.useState(""),[i,d]=n.useState(!1),[o,p]=n.useState(null),A=n.useRef(),M=n.useRef(),K=n.useRef(!1),C=n.useRef(null),V=n.useRef(null),B=n.useRef(null),ce=n.useRef(null);n.useEffect(()=>{A.current=new Map(y.map(({label:t,value:a})=>[a,t])),M.current=new Map(y.map(({label:t,value:a})=>[t,a]))},[y]),n.useEffect(()=>{q&&i&&m!==""&&($(""),f(""),de())},[i,q]),n.useEffect(()=>{const t=a=>{var u;(u=C.current)!=null&&u.contains(a.target)||d(!1)};return C.current&&document.addEventListener("mousedown",t),()=>{document.removeEventListener("mousedown",t)}},[C]),n.useEffect(()=>{if(p(null),!K.current){K.current=!0;return}ie(m.trim())},[m]);const h=ue(y,m),me=t=>{var a,u;switch(t.key){case"ArrowUp":if(o!==null)if(o<=0)p(null);else{const j=o-1;p(j);const b=(a=B.current)==null?void 0:a.getElementsByTagName("li")[j];b==null||b.scrollIntoView({block:"nearest"})}i||d(!0);break;case"ArrowDown":if(o===null)h.length>0&&p(0);else{const j=Math.min(h.length-1,o+1);p(j);const b=(u=B.current)==null?void 0:u.getElementsByTagName("li")[j];b==null||b.scrollIntoView({block:"nearest"})}i||d(!0);break;case" ":case"Enter":i&&o!==null&&h[o]&&(t.preventDefault(),h[o]&&P(String(h[o].value)));break;case"Escape":p(null),d(!1);break;case"Tab":p(null),d(!1);break}},P=t=>{var a;$(t),f(((a=A.current)==null?void 0:a.get(t))??""),x({type:"change",target:{name:l,value:t}}),O({type:"blur",target:{name:l,value:t}}),d(!1),p(null)},U=()=>{i||d(!0)},fe=()=>{i?(d(!1),f("")):d(!0)};return n.useEffect(()=>{var t,a,u;f(((a=A.current)==null?void 0:a.get(((t=V.current)==null?void 0:t.value)??""))??""),$(((u=V.current)==null?void 0:u.value)??"")},[V]),n.useImperativeHandle(pe,()=>V.current),e.jsx(Se,{className:r,error:w,isOptional:c,label:T,name:l,showError:!!w,description:v,children:e.jsxs("div",{className:z(F["multi-select-autocomplete-container"],r),onKeyDown:me,ref:C,children:[e.jsx(_e,{...o!==null&&{"aria-activedescendant":`option-display-${(G=h[o])==null?void 0:G.value}`},onClick:U,onFocus:U,className:F["multi-select-autocomplete-placeholder-input"],hasError:!!w,type:"search",disabled:s,"aria-autocomplete":"list","aria-controls":`list-${l}`,"aria-describedby":`help-${l}`,"aria-expanded":i,"aria-haspopup":"listbox","aria-required":!c,role:"combobox",value:m,autoComplete:"off",ref:V,name:l,onChange:t=>f(t.target.value),onBlur:t=>{var u;f(t.target.value);const a=((u=M.current)==null?void 0:u.get(t.target.value))??"";O({type:"blur",target:{name:l,value:a}})}}),e.jsxs("div",{"aria-live":"polite","aria-relevant":"text",className:F["visually-hidden"],id:`help-${l}`,children:[_!==""&&`Option sélectionnée : ${((J=A.current)==null?void 0:J.get(_))??""}. `,i?`${h.length} options ${m===""?"disponibles. ":"correspondant au texte saisi. "}`:"Saisissez du texte pour afficher et filtrer les options."]}),e.jsx("select",{hidden:!0,ref:ce,value:_||"",onChange:()=>{},"data-testid":"select",children:y.map(({label:t,value:a})=>e.jsx("option",{value:a,children:t},`option-${a}`))}),e.jsxs("div",{className:F["field-overlay"],children:[!g&&e.jsx(H,{disabled:s,isOpen:i,toggleField:fe}),i&&e.jsx(W,{className:r,fieldName:l,selectedValue:_,filteredOptions:h,setHoveredOptionIndex:p,listRef:B,hoveredOptionIndex:o,selectOption:P})]})]})})});S.displayName="SelectAutocomplete";try{S.displayName="SelectAutocomplete",S.__docgenInfo={description:"",displayName:"SelectAutocomplete",props:{name:{defaultValue:null,description:"Name of the field, used for form submission and accessibility",name:"name",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Label displayed above the input",name:"label",required:!0,type:{name:"string | Element"}},options:{defaultValue:null,description:"List of available options",name:"options",required:!0,type:{name:"SelectOption[]"}},description:{defaultValue:null,description:"Helper text displayed below the input",name:"description",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Disables the input and prevents interaction",name:"disabled",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:{value:"false"},description:"Indicates if the field is optional",name:"isOptional",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Additional CSS class names",name:"className",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Error message to display",name:"error",required:!1,type:{name:"string"}},hideArrow:{defaultValue:null,description:"Hides the dropdown arrow",name:"hideArrow",required:!1,type:{name:"boolean"}},onChange:{defaultValue:{value:"() => {}"},description:"Called when the selected value changes",name:"onChange",required:!1,type:{name:'((e: CustomEvent<"change">) => void)'}},onBlur:{defaultValue:{value:"() => {}"},description:"Called when the input loses focus",name:"onBlur",required:!1,type:{name:'((e: CustomEvent<"blur">) => void)'}},onSearch:{defaultValue:{value:"() => {}"},description:"Called when the search input changes",name:"onSearch",required:!1,type:{name:"((pattern: string) => void)"}},searchInOptions:{defaultValue:{value:`(options, pattern) =>
        options.filter((opt) =>
          opt.label.toLowerCase().includes(pattern.trim().toLowerCase())
        )`},description:"Custom function to filter options based on search pattern",name:"searchInOptions",required:!1,type:{name:"((options: SelectOption[], pattern: string) => SelectOption[])"}},resetOnOpen:{defaultValue:{value:"true"},description:"Resets the input value when dropdown opens.",name:"resetOnOpen",required:!1,type:{name:"boolean"}},onReset:{defaultValue:{value:"() => {}"},description:"Called when the input is reset.\n(cannot be provided when `resetOnOpen` is `false`)",name:"onReset",required:!1,type:{name:"(() => void)"}}}}}catch{}const qe=({children:r})=>{const s=be({defaultValues:{departement:"05"},resolver:he(ge().shape({departement:ye().required("Veuillez choisir un département dans la liste")})),mode:"onTouched"});return e.jsx(xe,{...s,children:r})},L=[{value:"01",label:"Ain"},{value:"02",label:"Aisne"},{value:"03",label:"Allier"},{value:"04",label:"Alpes-de-Haute-Provence test de libellé très long"},{value:"05",label:"Hautes-Alpes"},{value:"06",label:"Alpes-Maritimes"},{value:"07",label:"Ardèche"},{value:"08",label:"Ardennes"},{value:"09",label:"Ariège"},{value:"10",label:"Aube"},{value:"11",label:"Aude"},{value:"12",label:"Aveyron"},{value:"13",label:"Bouches-du-Rhône"},{value:"14",label:"Calvados"},{value:"15",label:"Cantal"}],Qe={title:"ui-kit/formsV2/SelectAutocomplete",component:S},E={wrapper:{color:"#666",fontSize:"0.8rem",padding:"0 1rem",backgroundColor:"#f5f5f5",borderRadius:"0.2rem",border:"thin solid #e1e1e1",minHeight:"45px",marginBottom:"1rem",display:"flex",alignItems:"center"},pre:{display:"inline-block",padding:"0.5rem"}},I={args:{name:"departement",label:"Département",options:L,isOptional:!0}},R={args:{name:"departement",label:"Département",options:L,isOptional:!0,resetOnOpen:!1,ref:r=>(r&&(r.defaultValue="05"),r)}},k={render:()=>{const[r,s]=n.useState("");return e.jsxs(e.Fragment,{children:[e.jsxs("div",{style:E.wrapper,children:["Search text value: ",e.jsx("pre",{style:E.pre,children:r})]}),e.jsx(S,{label:"Département",name:"departement",options:L,isOptional:!0,onSearch:l=>s(l)})]})}},D={decorators:[r=>e.jsx(qe,{children:e.jsx(r,{})})],render:()=>{var c;const{register:r,watch:s,formState:{errors:l}}=ve(),g=s("departement");return e.jsxs(e.Fragment,{children:[e.jsxs("div",{style:E.wrapper,children:["Selected value in the form:"," ",e.jsx("pre",{style:E.pre,children:g})]}),e.jsx(S,{label:"Département",options:L,...r("departement"),error:(c=l.departement)==null?void 0:c.message})]})}};var Q,X,Y;I.parameters={...I.parameters,docs:{...(Q=I.parameters)==null?void 0:Q.docs,source:{originalSource:`{
  args: {
    name: 'departement',
    label: 'Département',
    options,
    isOptional: true
  }
}`,...(Y=(X=I.parameters)==null?void 0:X.docs)==null?void 0:Y.source}}};var Z,ee,te;R.parameters={...R.parameters,docs:{...(Z=R.parameters)==null?void 0:Z.docs,source:{originalSource:`{
  args: {
    name: 'departement',
    label: 'Département',
    options,
    isOptional: true,
    resetOnOpen: false,
    ref: ref => {
      if (ref) {
        ref.defaultValue = '05';
      }
      return ref;
    }
  }
}`,...(te=(ee=R.parameters)==null?void 0:ee.docs)==null?void 0:te.source}}};var re,ae,ne;k.parameters={...k.parameters,docs:{...(re=k.parameters)==null?void 0:re.docs,source:{originalSource:`{
  render: () => {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const [searchText, setSearchText] = useState('');
    return <>
        <div style={demoStyles['wrapper']}>
          Search text value: <pre style={demoStyles['pre']}>{searchText}</pre>
        </div>

        <SelectAutocomplete label="Département" name="departement" options={options} isOptional={true} onSearch={text => setSearchText(text)} />
      </>;
  }
}`,...(ne=(ae=k.parameters)==null?void 0:ae.docs)==null?void 0:ne.source}}};var le,se,oe;D.parameters={...D.parameters,docs:{...(le=D.parameters)==null?void 0:le.docs,source:{originalSource:`{
  decorators: [(Story: any) => <FormWrapper>
        <Story />
      </FormWrapper>],
  render: () => {
    const {
      register,
      watch,
      formState: {
        errors
      }
      // eslint-disable-next-line react-hooks/rules-of-hooks
    } = useFormContext<WrapperFormValues>();
    const departement = watch('departement');
    return <>
        <div style={demoStyles['wrapper']}>
          Selected value in the form:{' '}
          <pre style={demoStyles['pre']}>{departement}</pre>
        </div>

        <SelectAutocomplete label="Département" options={options} {...register('departement')} error={errors.departement?.message} />
      </>;
  }
}`,...(oe=(se=D.parameters)==null?void 0:se.docs)==null?void 0:oe.source}}};const Xe=["Default","NoResetOnOpen","WithOnsearchTrigger","WithinFormValidation"];export{I as Default,R as NoResetOnOpen,k as WithOnsearchTrigger,D as WithinFormValidation,Xe as __namedExportsOrder,Qe as default};
