{"version":3,"file":"BaseInput-a47c473b.js","sources":["../../src/ui-kit/form/shared/BaseInput/BaseInput.tsx"],"sourcesContent":["import cn from 'classnames'\nimport React, { ForwardedRef, forwardRef } from 'react'\n\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\n\nimport styles from './BaseInput.module.scss'\n\nexport interface BaseInputProps\n  extends Partial<React.InputHTMLAttributes<HTMLInputElement>> {\n  className?: string\n  hasError?: boolean\n  filterVariant?: boolean\n  rightIcon?: string\n  rightButton?: () => JSX.Element\n}\n\nconst BaseInput = forwardRef(\n  (\n    {\n      className,\n      hasError,\n      filterVariant,\n      name,\n      rightIcon,\n      rightButton,\n      ...props\n    }: BaseInputProps,\n    ref: ForwardedRef<HTMLInputElement>\n  ): JSX.Element => {\n    if (rightIcon || rightButton) {\n      const hasIcon = !!rightIcon\n      const hasButton = !!rightButton\n\n      return (\n        <div className={styles['base-input-wrapper']}>\n          <input\n            {...props}\n            aria-invalid={hasError}\n            {...(hasError\n              ? { 'aria-describedby': `error-details-${name}` }\n              : {})}\n            className={cn(\n              styles['base-input'],\n              styles['base-input-with-right-icon'],\n              {\n                [styles['has-error']]: hasError,\n                [styles['filter-variant']]: filterVariant,\n              },\n              className\n            )}\n            id={name}\n            name={name}\n            ref={ref}\n          />\n          <span\n            className={cn({\n              [styles['base-input-right-icon']]: hasIcon,\n              [styles['base-input-right-button']]: hasButton,\n              [styles['filter-variant']]: filterVariant,\n            })}\n          >\n            {hasIcon ? (\n              <SvgIcon src={rightIcon} alt=\"\" />\n            ) : (\n              hasButton && rightButton()\n            )}\n          </span>\n        </div>\n      )\n    } else {\n      return (\n        <input\n          {...props}\n          aria-invalid={hasError}\n          {...(hasError ? { 'aria-describedby': `error-${name}` } : {})}\n          className={cn(\n            styles['base-input'],\n            {\n              [styles['has-error']]: hasError,\n              [styles['filter-variant']]: filterVariant,\n            },\n            className\n          )}\n          id={name}\n          name={name}\n          ref={ref}\n        />\n      )\n    }\n  }\n)\nBaseInput.displayName = 'BaseInput'\nexport default BaseInput\n"],"names":["BaseInput","forwardRef","className","hasError","filterVariant","name","rightIcon","rightButton","props","ref","hasIcon","hasButton","jsxs","styles","jsx","cn","SvgIcon","BaseInput$1"],"mappings":"qhBAgBAA,EAAAC,EAAA,WAAkB,CAAA,CAEd,UAAAC,EACE,SAAAC,EACA,cAAAC,EACA,KAAAC,EACA,UAAAC,EACA,YAAAC,EACA,GAAAC,CACG,EAAAC,IAAA,CAIL,GAAAH,GAAAC,EAAA,CACE,MAAAG,EAAA,CAAA,CAAAJ,EACAK,EAAA,CAAA,CAAAJ,EAEA,OAAAK,EAAAA,KAAA,MAAA,CAAA,UAAAC,EAAA,oBAAA,EAAA,SAAA,CAEIC,EAAA,IAAA,QAAC,CAAA,GAAAN,EACK,eAAAL,EACU,GAAAA,EAAA,CAAA,mBAAA,iBAAAE,CAAA,EAAA,EAAA,CAAA,EAGT,UAAAU,EACMF,EAAA,YAAA,EACUA,EAAA,4BAAA,EACgB,CACnC,CAAAA,EAAA,WAAA,CAAA,EAAAV,EACyB,CAAAU,EAAA,gBAAA,CAAA,EAAAT,CACK,EAC9BF,CACA,EACF,GAAAG,EACI,KAAAA,EACJ,IAAAI,CACA,CAAA,EACFK,EAAA,IACA,OAAC,CAAA,UAAAC,EAAA,CACe,CAAAF,EAAA,uBAAA,CAAA,EAAAH,EACuB,CAAAG,EAAA,yBAAA,CAAA,EAAAF,EACE,CAAAE,EAAA,gBAAA,CAAA,EAAAT,CACT,CAAA,EAC7B,SAAAM,EAAAI,MAAAE,EAAA,CAAA,IAAAV,EAAA,IAAA,EAAA,CAAA,EAAAK,GAAAJ,EAAA,CAK0B,CAAA,CAE7B,CAAA,CAAA,CACF,KAGF,QAAAO,EAAA,IACE,QAAC,CAAA,GAAAN,EACK,eAAAL,EACU,GAAAA,EAAA,CAAA,mBAAA,SAAAE,CAAA,EAAA,EAAA,CAAA,EAC6C,UAAAU,EAChDF,EAAA,YAAA,EACU,CACnB,CAAAA,EAAA,WAAA,CAAA,EAAAV,EACyB,CAAAU,EAAA,gBAAA,CAAA,EAAAT,CACK,EAC9BF,CACA,EACF,GAAAG,EACI,KAAAA,EACJ,IAAAI,CACA,CAAA,CAGN,CAEJ,EACAT,EAAA,YAAA,YACA,MAAAiB,EAAAjB"}