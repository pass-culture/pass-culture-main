{"version":3,"file":"FormLayout-44e27217.js","sources":["../../src/components/FormLayout/FormLayoutActions.tsx","../../src/components/FormLayout/FormLayoutMandatoryInfo.tsx","../../src/components/FormLayout/FormLayoutRowWithInfo.tsx","../../src/components/FormLayout/FormLayoutRow.tsx","../../src/components/FormLayout/FormLayoutDescription.tsx","../../src/components/FormLayout/FormLayoutSection.tsx","../../src/components/FormLayout/FormLayoutSubSection.tsx","../../src/components/FormLayout/FormLayout.tsx"],"sourcesContent":["import cn from 'classnames'\nimport React from 'react'\n\nimport style from './FormLayout.module.scss'\n\ninterface FormLayoutActionsProps {\n  children: React.ReactElement[] | React.ReactElement\n  className?: string\n}\n\nconst addActionClass = (\n  element: React.ReactElement,\n  index?: number\n): JSX.Element =>\n  React.cloneElement(element, {\n    ...element.props,\n    key: index,\n    className: cn(style['form-layout-action'], element.props.className),\n  })\n\nconst Actions = ({\n  children,\n  className,\n}: FormLayoutActionsProps): JSX.Element => (\n  <div className={cn(style['form-layout-actions'], className)}>\n    {Array.isArray(children)\n      ? children.map(addActionClass)\n      : addActionClass(children)}\n  </div>\n)\n\nexport default Actions\n","import cn from 'classnames'\nimport React from 'react'\n\nimport style from './FormLayout.module.scss'\n\ninterface FormLayoutMandatoryInfoProps {\n  className?: string\n}\n\nconst MandatoryInfo = ({\n  className,\n}: FormLayoutMandatoryInfoProps): JSX.Element => {\n  return (\n    <p className={cn(style['mandatory-info'], className)}>\n      Tous les champs sont obligatoires sauf mention contraire.\n    </p>\n  )\n}\n\nexport default MandatoryInfo\n","import cn from 'classnames'\nimport React from 'react'\n\nimport style from './FormLayout.module.scss'\nimport Row from './FormLayoutRow'\n\ninterface FormLayoutRowWithInfoProps {\n  children: React.ReactNode | React.ReactNode[]\n  className?: string\n  inline?: boolean\n  mdSpaceAfter?: boolean\n  smSpaceAfter?: boolean\n  sideComponent: JSX.Element | null\n}\n\nconst RowWithInfo = ({\n  children,\n  className,\n  inline,\n  mdSpaceAfter,\n  smSpaceAfter,\n  sideComponent,\n}: FormLayoutRowWithInfoProps): JSX.Element => {\n  return (\n    <Row\n      className={cn(className, style['form-layout-row-info'])}\n      mdSpaceAfter={mdSpaceAfter}\n      smSpaceAfter={smSpaceAfter}\n    >\n      <Row className={style['form-layout-row-info-field']} inline={inline}>\n        {children}\n      </Row>\n      <div className={style['form-layout-row-info-info']}>\n        <div className={style['form-layout-row-info-info-inner']}>\n          {sideComponent && sideComponent}\n        </div>\n      </div>\n    </Row>\n  )\n}\n\nexport default RowWithInfo\n","import cn from 'classnames'\nimport React from 'react'\n\nimport style from './FormLayout.module.scss'\nimport RowWithInfo from './FormLayoutRowWithInfo'\n\ninterface FormLayoutRowProps {\n  children: React.ReactNode | React.ReactNode[]\n  className?: string\n  inline?: boolean\n  mdSpaceAfter?: boolean\n  smSpaceAfter?: boolean\n  sideComponent?: JSX.Element | null\n}\n\nconst Row = ({\n  children,\n  className,\n  inline,\n  mdSpaceAfter,\n  smSpaceAfter,\n  sideComponent,\n}: FormLayoutRowProps): JSX.Element => {\n  return sideComponent !== undefined ? (\n    <RowWithInfo\n      className={className}\n      inline={inline}\n      mdSpaceAfter={mdSpaceAfter}\n      smSpaceAfter={smSpaceAfter}\n      sideComponent={sideComponent}\n    >\n      {children}\n    </RowWithInfo>\n  ) : (\n    <div\n      className={cn(style['form-layout-row'], className, {\n        [style['inline-group']]: inline,\n        [style['medium-space-after']]: mdSpaceAfter,\n        [style['small-space-after']]: smSpaceAfter,\n      })}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Row\n","import React from 'react'\n\nimport { Banner } from 'ui-kit'\nimport { Link } from 'ui-kit/Banners/LinkNodes/LinkNodes'\n\nimport style from './FormLayout.module.scss'\n\nexport interface FormLayoutDescriptionProps {\n  description?: string\n  isBanner?: boolean\n  links?: Link[]\n}\nconst Description = ({\n  description,\n  isBanner = false,\n  links,\n}: FormLayoutDescriptionProps): JSX.Element => (\n  <>\n    {description && !isBanner && (\n      <p className={style['form-layout-section-description-content']}>\n        {description}\n      </p>\n    )}\n    {description && isBanner && (\n      <div className={style['form-layout-section-description-container']}>\n        <Banner\n          type=\"notification-info\"\n          className={style['form-layout-section-description-content']}\n          links={links}\n        >\n          {description}\n        </Banner>\n      </div>\n    )}\n  </>\n)\n\nexport default Description\n","import cn from 'classnames'\nimport React from 'react'\n\nimport { Title } from 'ui-kit'\nimport { Link } from 'ui-kit/Banners/LinkNodes/LinkNodes'\n\nimport style from './FormLayout.module.scss'\n\nimport { FormLayoutDescription } from '.'\n\ninterface FormLayoutSectionProps {\n  title: React.ReactNode\n  description?: string\n  children: React.ReactNode | React.ReactNode[]\n  className?: string\n  descriptionAsBanner?: boolean\n  links?: Link[]\n  id?: string\n}\n\nconst Section = ({\n  title,\n  description,\n  children,\n  className,\n  descriptionAsBanner = false,\n  links,\n  id,\n}: FormLayoutSectionProps): JSX.Element => (\n  <fieldset>\n    <div className={cn(style['form-layout-section'], className)} id={id}>\n      <div className={style['form-layout-section-header']}>\n        <legend>\n          <Title as=\"h2\" level={3}>\n            {title}\n          </Title>\n        </legend>\n        <FormLayoutDescription\n          description={description}\n          isBanner={descriptionAsBanner}\n          links={links}\n        />\n      </div>\n      {children}\n    </div>\n  </fieldset>\n)\n\nexport default Section\n","import cn from 'classnames'\nimport React from 'react'\n\nimport { Title } from 'ui-kit'\n\nimport style from './FormLayout.module.scss'\n\ninterface FormLayoutSubSectionProps {\n  title: string\n  children: React.ReactNode | React.ReactNode[]\n  className?: string\n}\n\nconst SubSection = ({\n  title,\n  children,\n  className,\n}: FormLayoutSubSectionProps): JSX.Element => (\n  <div className={cn(style['form-layout-sub-section'], className)}>\n    <Title as=\"h3\" className={style['form-layout-sub-section-title']} level={4}>\n      {title}\n    </Title>\n    {children}\n  </div>\n)\n\nexport default SubSection\n","import cn from 'classnames'\nimport React from 'react'\n\nimport style from './FormLayout.module.scss'\nimport Actions from './FormLayoutActions'\nimport MandatoryInfo from './FormLayoutMandatoryInfo'\nimport Row from './FormLayoutRow'\nimport RowWithInfo from './FormLayoutRowWithInfo'\nimport Section from './FormLayoutSection'\nimport SubSection from './FormLayoutSubSection'\n\ninterface FormLayoutProps {\n  children: React.ReactNode | React.ReactNode[]\n  className?: string\n  small?: boolean\n  fullWidthActions?: boolean\n}\n\nconst FormLayout = ({\n  children,\n  className,\n  small = false,\n  fullWidthActions = false,\n}: FormLayoutProps): JSX.Element => (\n  <div\n    className={cn(\n      style['form-layout'],\n      { [style.small]: small },\n      { [style['full-width-actions']]: fullWidthActions },\n      className\n    )}\n  >\n    {children}\n  </div>\n)\n\nFormLayout.RowWithInfo = RowWithInfo\nFormLayout.Row = Row\nFormLayout.SubSection = SubSection\nFormLayout.Section = Section\nFormLayout.Actions = Actions\nFormLayout.MandatoryInfo = MandatoryInfo\n\nexport default FormLayout\n"],"names":["addActionClass","element","index","React","cn","style","Actions","children","className","jsx","MandatoryInfo","RowWithInfo","inline","mdSpaceAfter","smSpaceAfter","sideComponent","jsxs","Row","Description","description","isBanner","links","Fragment","Banner","Section","title","descriptionAsBanner","id","Title","FormLayoutDescription","SubSection","FormLayout","small","fullWidthActions","FormLayout$2"],"mappings":"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"}