import{j as t}from"./jsx-runtime-CfatFE5O.js";import{u as x,F as _}from"./formik.esm-DyanDbCL.js";import{c as k}from"./index-DeARc5FM.js";import{F as C}from"./FieldSetLayout-v-TTRzuI.js";import{B as V}from"./BaseCheckbox-C1G0IZE5.js";import"./index-ClcD9ViR.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./FieldError-C744dGHW.js";import"./stroke-error-DSZD431a.js";import"./SvgIcon-B6esR8Vf.js";const g={"checkbox-group-item":"_checkbox-group-item_1loz6_1"},p=({setGroupTouched:e,label:r,name:s,hasError:l,icon:u,disabled:d,onChange:a,ariaDescribedBy:c})=>{const[o]=x({name:s,type:"checkbox"}),n=h=>{e(),o.onChange(h),a&&a(h)};return t.jsx(V,{...o,icon:u,hasError:l,label:r,onChange:n,disabled:d,ariaDescribedBy:c})};try{p.displayName="CheckboxGroupItem",p.__docgenInfo={description:"",displayName:"CheckboxGroupItem",props:{setGroupTouched:{defaultValue:null,description:"",name:"setGroupTouched",required:!0,type:{name:"() => void"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"string"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},ariaDescribedBy:{defaultValue:null,description:"",name:"ariaDescribedBy",required:!1,type:{name:"string"}}}}}catch{}const m=({group:e,groupName:r,legend:s,className:l,disabled:u,isOptional:d})=>{const[,a,c]=x({name:r}),o=a.touched&&!!a.error;return t.jsx(C,{className:k(g["checkbox-group"],l),error:o?a.error:void 0,legend:s,name:r,isOptional:d,children:e.map(n=>t.jsx("div",{className:g["checkbox-group-item"],children:t.jsx(p,{icon:n.icon,hasError:o,label:n.label,name:n.name,setGroupTouched:()=>a.touched?null:c.setTouched(!0),disabled:u,onChange:n.onChange,...o?{ariaDescribedBy:`error-${r}`}:{}})},n.name))})};try{m.displayName="CheckboxGroup",m.__docgenInfo={description:"",displayName:"CheckboxGroup",props:{groupName:{defaultValue:null,description:"",name:"groupName",required:!0,type:{name:"string"}},legend:{defaultValue:null,description:"",name:"legend",required:!0,type:{name:"string"}},group:{defaultValue:null,description:"",name:"group",required:!0,type:{name:"{ name: string; label: string; description?: string | undefined; icon?: string | undefined; onChange?: ((event: ChangeEvent<HTMLInputElement>) => void) | undefined; }[]"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:null,description:"",name:"isOptional",required:!1,type:{name:"boolean"}}}}}catch{}const F={title:"ui-kit/forms/CheckboxGroup",component:m,decorators:[e=>t.jsx(_,{initialValues:{accessibility:!1},onSubmit:()=>{},children:({getFieldProps:r})=>t.jsx(e,{...r("group")})})]},i={args:{group:["foo","bar","baz"].map(e=>({label:e,name:`checkBoxes.${e}`})),groupName:"checkBoxes",legend:"This is the legend"}};var f,b,y;i.parameters={...i.parameters,docs:{...(f=i.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: {
    group: ['foo', 'bar', 'baz'].map(item => ({
      label: item,
      name: \`checkBoxes.\${item}\`
    })),
    groupName: 'checkBoxes',
    legend: 'This is the legend'
  }
}`,...(y=(b=i.parameters)==null?void 0:b.docs)==null?void 0:y.source}}};const z=["Default"];export{i as Default,z as __namedExportsOrder,F as default};
