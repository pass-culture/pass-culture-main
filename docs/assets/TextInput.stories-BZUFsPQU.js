import{j as e}from"./jsx-runtime-CfatFE5O.js";import{c as p}from"./index-DeARc5FM.js";import{R as M}from"./index-ClcD9ViR.js";import{B as $}from"./BaseInput-ybhpdPsY.js";import{F as S}from"./FieldError-Bb6I73np.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./SvgIcon-B6esR8Vf.js";import"./stroke-error-DSZD431a.js";const a={"text-input-readonly":"_text-input-readonly_1xcnx_1","text-input-group":"_text-input-group_1xcnx_6","text-input-group-extension":"_text-input-group-extension_1xcnx_10","input-layout":"_input-layout_1xcnx_15","input-layout-label":"_input-layout-label_1xcnx_19","input-layout-label-container":"_input-layout-label-container_1xcnx_27","input-layout-label-asterisk":"_input-layout-label-asterisk_1xcnx_30","input-layout-footer":"_input-layout-footer_1xcnx_33","input-layout-error":"_input-layout-error_1xcnx_39","input-layout-input-description":"_input-layout-input-description_1xcnx_45","visually-hidden":"_visually-hidden_1xcnx_54"},s=M.forwardRef(({name:t,type:o="text",disabled:v,readOnly:w,label:E,className:k,isLabelHidden:L=!1,maxLength:j=255,required:c=!1,leftIcon:T,rightButton:A,rightIcon:D,hasDecimal:B=!0,description:u,error:d,InputExtension:m,...f},F)=>{const H=/[0-9,.]/,O=/[0-9]/,R=/Tab|Backspace|Enter/,y=e.jsx($,{name:t,disabled:v,hasError:!!d,maxLength:j,type:o,ref:F,rightButton:A,rightIcon:D,leftIcon:T,"aria-required":c,"aria-describedby":u?`description-${t}`:void 0,onKeyDown:n=>{if(o==="number"){if(R.test(n.key))return;(B?!H.test(n.key):!O.test(n.key))&&n.preventDefault()}},onWheel:n=>{o==="number"&&n.currentTarget.blur()},...f});return e.jsxs("div",{className:p(a["input-layout"],k),"data-testid":`wrapper-${t}`,children:[e.jsxs("div",{className:p(a["input-layout-label-container"],{[a["visually-hidden"]]:L}),children:[e.jsxs("label",{className:a["input-layout-label"],htmlFor:t,children:[E," ",c&&"*"]}),u&&e.jsx("span",{id:`description-${t}`,"data-testid":`description-${t}`,className:a["input-layout-input-description"],children:u})]}),e.jsxs("div",{className:a["input-layout-content"],children:[e.jsx("div",{className:p(a["input-wrapper"]),children:w?e.jsx("span",{className:a["text-input-readonly"],children:f.value}):m?e.jsxs("div",{className:a["text-input-group"],role:"group",children:[y,e.jsx("div",{className:a["text-input-group-extension"],children:m})]}):y}),e.jsx("div",{className:a["input-layout-footer"],children:d&&e.jsx("div",{role:"alert",className:a["input-layout-error"],id:`error-details-${t}`,children:e.jsx(S,{name:t,children:d})})})]})]})});s.displayName="TextInput";try{s.displayName="TextInput",s.__docgenInfo={description:"The TextInput component is a customizable input field that integrates with Formik for form state management.\nIt supports features like character counting, read-only mode, decimal number input, and accessibility enhancements.\n\n---\n** Important: Do not use the `placeholder` to indicate the format of the field.**\nUse the `label` or `description` props instead to provide instructions on the expected format.\n---",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:null,description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:null,description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},showMandatoryAsterisk:{defaultValue:null,description:`Can be false only when it's the only field in a form and it's mandatory,
or when all fields are mandatory and the form indicates that all fields are mandatory`,name:"showMandatoryAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},hideFooter:{defaultValue:null,description:`A flag to hide the footer.
To be used with caution, as it can affect accessibility.`,name:"hideFooter",required:!1,type:{name:"boolean"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},hasDecimal:{defaultValue:{value:"true"},description:'Allows decimal numbers in the input.\nMust be provided with `type="number"` to be effective.\nUnused when `readOnly` is true.',name:"hasDecimal",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:`A custom error message to be displayed.
If this prop is provided, the error message will be displayed and the field will be marked as errored`,name:"error",required:!1,type:{name:"string"}},InputExtension:{defaultValue:null,description:`A custom component to be displayed next to the input.
It can be used to display additional information or related actions like
a checkbox to reset the input value.`,name:"InputExtension",required:!1,type:{name:"ReactNode"}}}}}catch{}const X={title:"ui-kit/formsV2/TextInput",component:s},r={args:{name:"email",label:"Email",isLabelHidden:!0}},l={args:{...r.args,readOnly:!0,value:"A text wrapped in a span"}},i={args:{...r.args,error:"This field is required"}};var h,x,b;r.parameters={...r.parameters,docs:{...(h=r.parameters)==null?void 0:h.docs,source:{originalSource:`{
  args: {
    name: 'email',
    label: 'Email',
    isLabelHidden: true
  }
}`,...(b=(x=r.parameters)==null?void 0:x.docs)==null?void 0:b.source}}};var g,_,V;l.parameters={...l.parameters,docs:{...(g=l.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: {
    ...Default.args,
    readOnly: true,
    value: 'A text wrapped in a span'
  }
}`,...(V=(_=l.parameters)==null?void 0:_.docs)==null?void 0:V.source}}};var q,N,I;i.parameters={...i.parameters,docs:{...(q=i.parameters)==null?void 0:q.docs,source:{originalSource:`{
  args: {
    ...Default.args,
    error: 'This field is required'
  }
}`,...(I=(N=i.parameters)==null?void 0:N.docs)==null?void 0:I.source}}};const Y=["Default","ReadOnly","WithExternalError"];export{r as Default,l as ReadOnly,i as WithExternalError,Y as __namedExportsOrder,X as default};
