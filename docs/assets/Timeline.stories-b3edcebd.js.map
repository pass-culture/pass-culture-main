{"version":3,"file":"Timeline.stories-b3edcebd.js","sources":["../../src/ui-kit/Timeline/empty-circle.svg","../../src/ui-kit/Timeline/Timeline.tsx"],"sourcesContent":["export default \"__VITE_ASSET__b4c09773__\"","import cn from 'classnames'\nimport React, { ReactNode } from 'react'\n\nimport fullClearIcon from 'icons/full-clear.svg'\nimport fullValidateIcon from 'icons/full-validate.svg'\nimport strokeWrongIcon from 'icons/stroke-wrong.svg'\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\n\nimport emptyCircle from './empty-circle.svg'\nimport styles from './Timeline.module.scss'\n\nexport enum TimelineStepType {\n  SUCCESS = 'SUCCESS',\n  ERROR = 'ERROR',\n  WAITING = 'WAITING',\n  DISABLED = 'DISABLED',\n  CANCELLED = 'CANCELLED',\n  REFUSED = 'REFUSED',\n}\n\nexport interface TimelineStep {\n  type: TimelineStepType\n  content: ReactNode\n}\n\nexport interface TimelineProps {\n  steps: TimelineStep[]\n}\n\nconst getIconComponent = (type: TimelineStepType, hasErrorSteps: boolean) => {\n  switch (type) {\n    case TimelineStepType.SUCCESS:\n      return (\n        <SvgIcon\n          src={fullValidateIcon}\n          alt=\"Étape en succès\"\n          className={cn(\n            styles.icon,\n            hasErrorSteps\n              ? styles['icon-success-disabled']\n              : styles['icon-success']\n          )}\n        />\n      )\n    case TimelineStepType.ERROR:\n      return (\n        <SvgIcon\n          src={fullClearIcon}\n          alt=\"Étape en erreur\"\n          className={cn(styles.icon, styles['icon-error'])}\n        />\n      )\n    case TimelineStepType.WAITING:\n      return (\n        <SvgIcon\n          src={emptyCircle}\n          alt=\"Étape en attente\"\n          className={cn(styles.icon, styles['icon-waiting'])}\n          viewBox=\"0 0 21 20\"\n        />\n      )\n    case TimelineStepType.DISABLED:\n      return (\n        <SvgIcon\n          src={emptyCircle}\n          alt=\"Étape non disponible\"\n          className={cn(styles.icon, styles['icon-disabled'])}\n          viewBox=\"0 0 21 20\"\n        />\n      )\n    case TimelineStepType.CANCELLED:\n      return (\n        <SvgIcon\n          src={fullClearIcon}\n          alt=\"Étape annulée\"\n          className={cn(styles.icon, styles['icon-error'])}\n        />\n      )\n    case TimelineStepType.REFUSED:\n      return (\n        <SvgIcon\n          src={strokeWrongIcon}\n          className={cn(styles.icon, styles['icon-wrong'])}\n          alt=\"Étape refusée\"\n        />\n      )\n    default:\n      throw new Error(`Unsupported step type: ${type}`)\n  }\n}\n\nconst getLineStyle = (\n  stepType: TimelineStepType,\n  nextStepType?: TimelineStepType,\n  hasErrorSteps?: boolean\n) => {\n  // No line if last step\n  if (nextStepType === undefined) {\n    return null\n  }\n\n  // The type of the line is always the type of the 2nd step, with one exception:\n  // the \"waiting\" type has always \"waiting\" lines around it on both sides\n  if (stepType === TimelineStepType.WAITING) {\n    return styles['line-waiting']\n  }\n\n  switch (nextStepType) {\n    case TimelineStepType.SUCCESS:\n      return hasErrorSteps ? styles['line-error'] : styles['line-success']\n    case TimelineStepType.ERROR:\n      return styles['line-error']\n    case TimelineStepType.WAITING:\n      return styles['line-waiting']\n    case TimelineStepType.DISABLED:\n      return styles['line-disabled']\n    default:\n      throw new Error(`Unsupported step type: ${nextStepType}`)\n  }\n}\n\nconst Timeline = ({ steps }: TimelineProps): JSX.Element => {\n  const hasErrorSteps =\n    steps.filter((x) => x.type === TimelineStepType.ERROR).length > 0\n  return (\n    <ol className={styles.container}>\n      {steps.map((step, index) => {\n        return (\n          <li\n            key={index}\n            className={cn(\n              styles.step,\n              getLineStyle(step.type, steps[index + 1]?.type, hasErrorSteps)\n            )}\n          >\n            {getIconComponent(step.type, hasErrorSteps)}\n            {step.content}\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n\nexport default Timeline\n"],"names":["emptyCircle","TimelineStepType","TimelineStepType2","getIconComponent","type","hasErrorSteps","jsx","SvgIcon","fullValidateIcon","cn","styles","fullClearIcon","strokeWrongIcon","getLineStyle","stepType","nextStepType","Timeline","steps","x","step","index","jsxs","_a","Timeline$1"],"mappings":"0UAAA,MAAeA,EAAA,GAAA,IAAA,IAAA,4BAAA,YAAA,GAAA,EAAA,yfCWR,IAAAC,GAAAC,IACLA,EAAA,QAAA,UACAA,EAAA,MAAA,QACAA,EAAA,QAAA,UACAA,EAAA,SAAA,WACAA,EAAA,UAAA,YACAA,EAAA,QAAA,UANUA,IAAAD,GAAA,CAAA,CAAA,EAkBZ,MAAAE,EAAA,CAAAC,EAAAC,IAAA,CACE,OAAAD,EAAA,CAAc,IAAA,UAEV,OAAAE,EAAA,IACEC,EAAC,CAAA,IAAAC,EACM,IAAA,kBACD,UAAAC,EACOC,EAAA,KACFL,EAAAK,EAAA,uBAAA,EAAAA,EAAA,cAAA,CAGkB,CAC3B,CAAA,EACF,IAAA,QAGF,OAAAJ,EAAA,IACEC,EAAC,CAAA,IAAAI,EACM,IAAA,kBACD,UAAAF,EAAAC,EAAA,KAAAA,EAAA,YAAA,CAAA,CAC2C,CAAA,EACjD,IAAA,UAGF,OAAAJ,EAAA,IACEC,EAAC,CAAA,IAAAP,EACM,IAAA,mBACD,UAAAS,EAAAC,EAAA,KAAAA,EAAA,cAAA,CAAA,EAC6C,QAAA,WACzC,CAAA,EACV,IAAA,WAGF,OAAAJ,EAAA,IACEC,EAAC,CAAA,IAAAP,EACM,IAAA,uBACD,UAAAS,EAAAC,EAAA,KAAAA,EAAA,eAAA,CAAA,EAC8C,QAAA,WAC1C,CAAA,EACV,IAAA,YAGF,OAAAJ,EAAA,IACEC,EAAC,CAAA,IAAAI,EACM,IAAA,gBACD,UAAAF,EAAAC,EAAA,KAAAA,EAAA,YAAA,CAAA,CAC2C,CAAA,EACjD,IAAA,UAGF,OAAAJ,EAAA,IACEC,EAAC,CAAA,IAAAK,EACM,UAAAH,EAAAC,EAAA,KAAAA,EAAA,YAAA,CAAA,EAC0C,IAAA,eAC3C,CAAA,EACN,QAGF,MAAA,IAAA,MAAA,0BAAAN,CAAA,EAAA,CAAgD,CAEtD,EAEAS,EAAA,CAAAC,EAAAC,EAAAV,IAAA,CAME,GAAAU,IAAA,OACE,OAAA,KAKF,GAAAD,IAAA,UACE,OAAAJ,EAAA,cAAA,EAGF,OAAAK,EAAA,CAAsB,IAAA,UAElB,OAAAV,EAAAK,EAAA,YAAA,EAAAA,EAAA,cAAA,EAAmE,IAAA,QAEnE,OAAAA,EAAA,YAAA,EAA0B,IAAA,UAE1B,OAAAA,EAAA,cAAA,EAA4B,IAAA,WAE5B,OAAAA,EAAA,eAAA,EAA6B,QAE7B,MAAA,IAAA,MAAA,0BAAAK,CAAA,EAAA,CAAwD,CAE9D,EAEAC,EAAA,CAAA,CAAA,MAAAC,KAAA,CACE,MAAAZ,EAAAY,EAAA,OAAAC,GAAAA,EAAA,OAAA,OAAA,EAAA,OAAA,EAEA,OAAAZ,MAAA,KAAA,CAAA,UAAAI,EAAA,UAAA,SAAAO,EAAA,IAAA,CAAAE,EAAAC,IAAA,OAGM,OAAAC,EAAA,KACE,KAAC,CAAA,UAAAZ,EAEYC,EAAA,KACFG,EAAAM,EAAA,MAAAG,EAAAL,EAAAG,EAAA,CAAA,IAAA,YAAAE,EAAA,KAAAjB,CAAA,CACsD,EAC/D,SAAA,CAECF,EAAAgB,EAAA,KAAAd,CAAA,EAAyCc,EAAA,OACpC,CAAA,EAAAC,CAPD,CAQP,CAAA,CAAA,CAAA,CAKV,EAEAG,EAAAP;;;;;;;;"}