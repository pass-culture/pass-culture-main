{"version":3,"file":"Button-5649015c.js","sources":["../../src/ui-kit/Button/types.ts","../../src/ui-kit/Button/ButtonLink.tsx","../../src/ui-kit/Button/Button.tsx"],"sourcesContent":["export enum ButtonVariant {\n  PRIMARY = 'primary',\n  SECONDARY = 'secondary',\n  TERNARY = 'ternary',\n  QUATERNARY = 'quaternary',\n  BOX = 'box',\n}\n\nexport enum IconPositionEnum {\n  RIGHT = 'right',\n  LEFT = 'left',\n  CENTER = 'center',\n}\n\nexport type SharedButtonProps = {\n  icon?: string\n  variant?: ButtonVariant\n  iconPosition?: IconPositionEnum\n  testId?: string\n}\n","import cn from 'classnames'\nimport React, { MouseEventHandler } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport fullRightIcon from 'icons/full-right.svg'\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\n\nimport styles from './Button.module.scss'\nimport { ButtonVariant, IconPositionEnum, SharedButtonProps } from './types'\n\nexport type LinkProps = {\n  isExternal: boolean\n  to: string\n  rel?: string\n  target?: string\n  'aria-label'?: string\n  type?: string\n  download?: boolean\n}\n\nexport interface ButtonLinkProps extends SharedButtonProps {\n  link: LinkProps\n  children?: React.ReactNode | React.ReactNode[]\n  className?: string\n  isDisabled?: boolean\n  onClick?: MouseEventHandler<HTMLAnchorElement>\n  svgAlt?: string\n}\n\nconst ButtonLink = ({\n  className,\n  children,\n  icon,\n  isDisabled = false,\n  onClick,\n  variant = ButtonVariant.TERNARY,\n  link,\n  iconPosition = IconPositionEnum.LEFT,\n  svgAlt = '',\n}: ButtonLinkProps): JSX.Element => {\n  const classNames = cn(\n    styles['button'],\n    styles[`button-${variant}`],\n    styles[`button-${iconPosition}`],\n    { [styles[`button-disabled`]]: isDisabled },\n    className\n  )\n  const svgIcon = icon ? (\n    <SvgIcon\n      src={icon}\n      alt={svgAlt}\n      className={styles['button-icon']}\n      width=\"22\"\n    />\n  ) : (\n    <></>\n  )\n\n  let body = (\n    <>\n      {\n        /* istanbul ignore next: graphic variation */\n        iconPosition !== IconPositionEnum.RIGHT && svgIcon\n      }\n      {variant === ButtonVariant.BOX ? (\n        <div\n          className={cn({\n            [styles['button-arrow-content']]: variant === ButtonVariant.BOX,\n          })}\n        >\n          {children}\n        </div>\n      ) : (\n        <>{children}</>\n      )}\n      {\n        /* istanbul ignore next: graphic variation */ variant ===\n          ButtonVariant.BOX && (\n          <SvgIcon\n            src={fullRightIcon}\n            alt={svgAlt}\n            className={cn(styles['button-icon'], styles['button-icon-arrow'])}\n            width=\"22\"\n          />\n        )\n      }\n    </>\n  )\n\n  const { to, isExternal, ...linkProps } = link\n\n  // react-router v6 accepts relative links\n  // That is, if you use \"offers\" as link, it will be relative to the current path\n  // If you want a link to be absolute you must start it with a slash\n  // As this behavior can be quite confusing, we decided to enforce absolute links\n  // for internal links so that developers can't make mistakes/forget to add the slash\n  const absoluteUrl = isExternal || to.startsWith('/') ? to : `/${to}`\n\n  const callback: MouseEventHandler<HTMLAnchorElement> = e =>\n    isDisabled ? e.preventDefault() : onClick?.(e)\n\n  const disabled = isDisabled\n    ? {\n        'aria-disabled': true,\n      }\n    : {}\n\n  body = isExternal ? (\n    <a\n      className={classNames}\n      href={absoluteUrl}\n      onClick={callback}\n      {...disabled}\n      {...linkProps}\n    >\n      {body}\n    </a>\n  ) : (\n    /* istanbul ignore next: graphic variation */ <Link\n      className={classNames}\n      onClick={callback}\n      to={absoluteUrl}\n      {...disabled}\n      aria-label={linkProps['aria-label']}\n    >\n      {body}\n    </Link>\n  )\n\n  return body\n}\n\nButtonLink.variant = ButtonVariant\n\nexport default ButtonLink\n","/* istanbul ignore file : no need to test styled html tag  */\n\nimport cn from 'classnames'\nimport React, { useId } from 'react'\n\nimport fullRightIcon from 'icons/full-right.svg'\nimport strokePassIcon from 'icons/stroke-pass.svg'\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\nimport Tooltip from 'ui-kit/Tooltip'\n\nimport styles from './Button.module.scss'\nimport { ButtonVariant, IconPositionEnum, SharedButtonProps } from './types'\n\nexport interface ButtonProps\n  extends SharedButtonProps,\n    React.HTMLProps<HTMLButtonElement> {\n  type?: 'button' | 'submit'\n  innerRef?: React.RefObject<HTMLButtonElement>\n  className?: string\n  hasTooltip?: boolean\n  isLoading?: boolean\n}\n\nconst Button = ({\n  className,\n  children,\n  icon,\n  iconPosition = IconPositionEnum.LEFT,\n  variant = ButtonVariant.PRIMARY,\n  type = 'button',\n  innerRef,\n  hasTooltip,\n  testId,\n  isLoading = false,\n  ...buttonAttrs\n}: ButtonProps): JSX.Element => {\n  const tooltipId = useId()\n  const loadingDiv = (\n    <div className={styles['spinner-icon']} data-testid=\"spinner\">\n      <SvgIcon src={strokePassIcon} alt=\"\" />\n    </div>\n  )\n  const content = (\n    <>\n      {icon && !isLoading && iconPosition !== IconPositionEnum.RIGHT && (\n        <SvgIcon\n          src={icon}\n          alt=\"\"\n          className={cn(styles['button-icon'], {\n            [styles['has-tooltip']]: hasTooltip,\n          })}\n          width=\"20\"\n        />\n      )}\n      {variant === ButtonVariant.BOX ? (\n        <div\n          className={cn({\n            [styles['button-arrow-content']]: variant === ButtonVariant.BOX,\n          })}\n        ></div>\n      ) : (\n        <>\n          {isLoading && loadingDiv}\n          {!isLoading && !hasTooltip && children}\n        </>\n      )}\n\n      {icon && !isLoading && iconPosition === IconPositionEnum.RIGHT && (\n        <SvgIcon\n          src={icon}\n          alt=\"\"\n          className={styles['button-icon']}\n          width=\"20\"\n        />\n      )}\n      {!isLoading && variant === ButtonVariant.BOX && (\n        <SvgIcon\n          src={fullRightIcon}\n          alt=\"\"\n          className={cn(styles['button-icon'], styles['button-icon-arrow'])}\n          width=\"20\"\n        />\n      )}\n    </>\n  )\n\n  return (\n    <button\n      className={cn(\n        styles['button'],\n        styles[`button-${variant}`],\n        styles[`button-${iconPosition}`],\n        { [styles['loading-spinner']]: isLoading },\n        className\n      )}\n      ref={innerRef}\n      type={type}\n      data-testid={testId}\n      {...(hasTooltip ? { 'aria-describedby': tooltipId } : {})}\n      {...buttonAttrs}\n    >\n      {hasTooltip ? (\n        <Tooltip id={tooltipId} content={children}>\n          {content}\n        </Tooltip>\n      ) : (\n        content\n      )}\n    </button>\n  )\n}\n\nexport default Button\n"],"names":["ButtonVariant","IconPositionEnum","ButtonLink","className","children","icon","isDisabled","onClick","variant","link","iconPosition","svgAlt","classNames","cn","styles","svgIcon","jsx","SvgIcon","Fragment","body","jsxs","fullRightIcon","to","isExternal","linkProps","absoluteUrl","callback","e","disabled","Link","Button","type","innerRef","hasTooltip","testId","isLoading","buttonAttrs","tooltipId","useId","loadingDiv","strokePassIcon","content","Tooltip"],"mappings":"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"}