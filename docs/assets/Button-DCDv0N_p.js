import{j as e}from"./jsx-runtime-CfatFE5O.js";import{c as r}from"./index-DeARc5FM.js";import{r as N}from"./index-ClcD9ViR.js";import{s as B}from"./stroke-pass-CALgybTM.js";import{S as l}from"./SvgIcon-CUWb-Ez8.js";import{T}from"./Tooltip-CPMX2zM9.js";import{u as R}from"./useTooltipProps-C5TDwaI9.js";import{b as t}from"./Button.module-CiMaKVCX.js";import{I as s,B as _}from"./types-DjX_gQD6.js";const u=N.forwardRef(({className:d,children:p,icon:n,iconClassName:m,iconAlt:c,iconPosition:i=s.LEFT,variant:y=_.PRIMARY,type:h="button",hasTooltip:o,testId:b,isLoading:a=!1,disabled:x,tooltipContentClassName:I,...f},V)=>{const{isTooltipHidden:g,...q}=R(f),j=e.jsx("div",{className:t["spinner-icon"],"data-testid":"spinner",children:e.jsx(l,{src:B,alt:""})}),v=e.jsxs(e.Fragment,{children:[n&&!a&&i!==s.RIGHT&&e.jsx(l,{src:n,alt:c,className:r(t["button-icon"],m,{[t["has-tooltip"]]:o}),width:"20"}),e.jsxs(e.Fragment,{children:[a&&j,!a&&!o&&p]}),n&&!a&&i===s.RIGHT&&e.jsx(l,{src:n,alt:c,className:r(t["button-icon"],m),width:"20"})]});return e.jsx("button",{className:r(t.button,t[`button-${y}`],t[`button-${i}`],{[t["loading-spinner"]]:a},d),type:h,"data-testid":b,disabled:x||a,...f,...o&&q,ref:V,children:o?e.jsx(T,{content:p,visuallyHidden:g,tooltipContentClassName:I,children:v}):v})});u.displayName="Button";try{u.displayName="Button",u.__docgenInfo={description:"The Button component provides a customizable button element that can include icons, tooltips, and loading states.\nIt supports various styles through the `variant` prop and can display icons on either side of the button text.",displayName:"Button",props:{hasTooltip:{defaultValue:null,description:"",name:"hasTooltip",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:{value:"false"},description:"",name:"isLoading",required:!1,type:{name:"boolean"}},tooltipContentClassName:{defaultValue:null,description:"",name:"tooltipContentClassName",required:!1,type:{name:"string"}},iconClassName:{defaultValue:null,description:"",name:"iconClassName",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:`The icon to display within the button (or button-link).
If provided, the icon will be displayed as an SVG.`,name:"icon",required:!1,type:{name:"string | null"}},iconAlt:{defaultValue:null,description:`An alternative text for the icon.
If provided and non-empty, the SVG will have a role="img" and an aria-label attribute.
If undefined or empty, the SVG will have an aria-hidden attribute instead, as a
decorative icon.`,name:"iconAlt",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"ButtonVariant.PRIMARY"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ternary"'},{value:'"ternary-pink"'},{value:'"quaternary"'},{value:'"quaternary-pink"'},{value:'"box"'}]}},iconPosition:{defaultValue:{value:"IconPositionEnum.LEFT"},description:"",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"right"'},{value:'"left"'},{value:'"center"'}]}},testId:{defaultValue:null,description:"",name:"testId",required:!1,type:{name:"string"}}}}}catch{}export{u as B};
