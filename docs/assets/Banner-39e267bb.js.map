{"version":3,"file":"Banner-39e267bb.js","sources":["../../src/ui-kit/Banners/BannerLayout/BannerLayout.tsx","../../src/ui-kit/Banners/Banner/Banner.tsx"],"sourcesContent":["import cn from 'classnames'\nimport React from 'react'\n\nimport fullClearIcon from 'icons/full-clear.svg'\nimport shadowTipsHelpIcon from 'icons/shadow-tips-help.svg'\nimport shadowTipsWarningIcon from 'icons/shadow-tips-warning.svg'\nimport strokeCloseIcon from 'icons/stroke-close.svg'\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\n\nimport styles from './BannerLayout.module.scss'\n\nexport interface BannerLayoutProps {\n  children?: React.ReactNode | React.ReactNode[]\n  linkNode?: React.ReactNode | React.ReactNode[]\n  type?: 'notification-info' | 'attention' | 'light'\n  closable?: boolean\n  minimalStyle?: boolean\n  handleOnClick?: () => void\n  className?: string\n  showTitle?: boolean\n  isProvider?: boolean\n}\n\nconst BannerLayout = ({\n  children,\n  type = 'attention',\n  closable = false,\n  minimalStyle = false,\n  handleOnClick,\n  className,\n  linkNode,\n  showTitle = true,\n  isProvider = false,\n}: BannerLayoutProps): JSX.Element => {\n  return (\n    <div\n      className={cn(\n        styles[`bi-banner`],\n        styles[type],\n        minimalStyle && styles['is-minimal'],\n        showTitle && styles['title'],\n        className\n      )}\n    >\n      {type === 'notification-info' && showTitle && (\n        <div className={styles['container']}>\n          <SvgIcon\n            src={shadowTipsHelpIcon}\n            alt=\"\"\n            className={styles['icon']}\n            width=\"24\"\n          />\n          <span className={styles['container-title']}>Ã€ SAVOIR</span>\n        </div>\n      )}\n      {type === 'attention' && showTitle && (\n        <div className={styles['container']}>\n          <SvgIcon\n            src={shadowTipsWarningIcon}\n            alt=\"\"\n            className={styles['icon']}\n            width=\"24\"\n          />\n          <span className={styles['container-title']}>IMPORTANT</span>\n        </div>\n      )}\n      <div className={styles['border-cut']}>\n        {closable && (\n          <button onClick={handleOnClick} type=\"button\">\n            {\n              /* istanbul ignore next: graphic variation */\n              type != 'light' ? (\n                <SvgIcon\n                  src={fullClearIcon}\n                  alt=\"Masquer le bandeau\"\n                  className={cn(styles['close-icon-banner'])}\n                />\n              ) : (\n                <SvgIcon\n                  src={strokeCloseIcon}\n                  alt=\"Masquer le bandeau\"\n                  className={styles['close-icon']}\n                />\n              )\n            }\n          </button>\n        )}\n\n        <div className={styles['content']}>\n          <div>\n            {children && (\n              <div\n                className={cn(\n                  styles['bi-banner-text'],\n                  {\n                    [styles['with-margin']]: !!linkNode,\n                  },\n                  {\n                    [styles['provider']]: !!isProvider,\n                  }\n                )}\n              >\n                {children}\n              </div>\n            )}\n\n            {linkNode}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BannerLayout\n","import React from 'react'\n\nimport fullLinkIcon from 'icons/full-link.svg'\nimport styles from 'ui-kit/Banners/BannerLayout/BannerLayout.module.scss'\nimport { ButtonLink } from 'ui-kit/Button'\n\nimport BannerLayout from '../BannerLayout'\nimport { BannerLayoutProps } from '../BannerLayout/BannerLayout'\n\nexport type Link = {\n  icon?: string\n  href: string\n  linkTitle: string\n  targetLink?: string\n  hideLinkIcon?: boolean\n  isExternal?: boolean\n  onClick?: () => void\n}\nexport interface BannerProps extends BannerLayoutProps {\n  children?: React.ReactNode | React.ReactNode[]\n  links?: Link[]\n}\n\nconst Banner = ({\n  children,\n  links = [],\n  ...bannerLayoutProps\n}: BannerProps): JSX.Element => {\n  /* istanbul ignore next: DEBT to fix */\n  const getLinkNode = (link: Link) => (\n    /* istanbul ignore next: DEBT to fix */\n    <ButtonLink\n      link={{\n        isExternal: link.isExternal === undefined ? true : link.isExternal,\n        to: link.href,\n        target: link.targetLink || '_blank',\n        rel: 'noopener noreferrer',\n      }}\n      icon={\n        /* istanbul ignore next: DEBT to fix */\n        link.hideLinkIcon ? undefined : link.icon || fullLinkIcon\n      }\n      className={styles['bi-link']}\n      onClick={link.onClick ?? undefined}\n    >\n      {link.linkTitle}\n    </ButtonLink>\n  )\n\n  const getLinksNode = () => {\n    if (links.length > 1) {\n      return (\n        <ul>\n          {links.map(link => {\n            return (\n              <li key={link.href} className={styles['bi-link-item']}>\n                {getLinkNode(link)}\n              </li>\n            )\n          })}\n        </ul>\n      )\n    }\n\n    return links[0] && getLinkNode(links[0])\n  }\n\n  return (\n    <BannerLayout linkNode={getLinksNode()} {...bannerLayoutProps}>\n      {children}\n    </BannerLayout>\n  )\n}\n\nexport default Banner\n"],"names":["BannerLayout","children","type","closable","minimalStyle","handleOnClick","className","linkNode","showTitle","isProvider","jsxs","cn","styles","jsx","SvgIcon","shadowTipsHelpIcon","shadowTipsWarningIcon","fullClearIcon","strokeCloseIcon","Banner","links","bannerLayoutProps","getLinkNode","link","ButtonLink","fullLinkIcon","getLinksNode","Banner$1"],"mappings":"uwCAuBAA,EAAA,CAAA,CAAsB,SAAAC,EACpB,KAAAC,EAAA,YACO,SAAAC,EAAA,GACI,aAAAC,EAAA,GACI,cAAAC,EACf,UAAAC,EACA,SAAAC,EACA,UAAAC,EAAA,GACY,WAAAC,EAAA,EAEd,IACEC,EAAA,KACE,MAAC,CAAA,UAAAC,EACYC,EAAA,WAAA,EACSA,EAAAV,CAAA,EACPE,GAAAQ,EAAA,YAAA,EACwBJ,GAAAI,EAAA,MACRN,CAC3B,EACF,SAAA,CAECJ,IAAA,qBAAAM,GAAAE,OAAA,MAAA,CAAA,UAAAE,EAAA,UAAA,SAAA,CAEGC,EAAA,IAAAC,EAAC,CAAA,IAAAC,EACM,IAAA,GACD,UAAAH,EAAA,KACoB,MAAA,IAClB,CAAA,EACRC,MAAA,OAAA,CAAA,UAAAD,EAAA,iBAAA,EAAA,SAAA,WAAA,CACoD,EAAA,EACtDV,IAAA,aAAAM,GAAAE,OAAA,MAAA,CAAA,UAAAE,EAAA,UAAA,SAAA,CAIEC,EAAA,IAAAC,EAAC,CAAA,IAAAE,EACM,IAAA,GACD,UAAAJ,EAAA,KACoB,MAAA,IAClB,CAAA,EACRC,MAAA,OAAA,CAAA,UAAAD,EAAA,iBAAA,EAAA,SAAA,YAAA,CACqD,EAAA,EACvDF,EAAA,KAAA,MAAA,CAAA,UAAAE,EAAA,YAAA,EAAA,SAAA,CAGCT,GAAAU,EAAA,IAAA,SAAA,CACE,QAAAR,EAAgB,KAAA,SAAoB,SAAAH,GAAA,QAAAW,EAAA,IAI/BC,EAAC,CAAA,IAAAG,EACM,IAAA,qBACD,UAAAN,EAAAC,EAAA,mBAAA,CAAA,CACqC,CAAA,EAAAC,EAAA,IAG3CC,EAAC,CAAA,IAAAI,EACM,IAAA,qBACD,UAAAN,EAAA,YAAA,CAC0B,CAAA,CAChC,CAAA,EAGNC,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,QAAA,SAAAF,EAAA,KAAA,MAAA,CAAA,SAAA,CAKGT,GAAAY,EAAA,IACC,MAAC,CAAA,UAAAF,EACYC,EAAA,gBAAA,EACc,CACvB,CAAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAAL,CAC6B,EAC7B,CACA,CAAAK,EAAA,QAAA,EAAA,CAAA,CAAAH,CAC0B,CAC1B,EACF,SAAAR,CAEC,CAAA,EACHM,CAGD,CAAA,CAAA,CAAA,CAAA,CAEL,EAAA,CACF,CAAA,CAAA,wgCCtFN,MAAAY,EAAA,CAAA,CAAgB,SAAAlB,EACd,MAAAmB,EAAA,CAAA,EACS,GAAAC,CAEX,IAAA,CAEE,MAAAC,EAAAC,GAAqBV,EAAA,IAEnBW,EAAC,CAAA,KAAA,CACO,WAAAD,EAAA,aAAA,OAAA,GAAAA,EAAA,WACoD,GAAAA,EAAA,KAC/C,OAAAA,EAAA,YAAA,SACkB,IAAA,qBACtB,EACP,KACAA,EAAA,aAAA,OAAAA,EAAA,MAAAE,EAE+C,UAAAb,EAAA,SAAA,EAEpB,QAAAW,EAAA,SAAA,OACF,SAAAA,EAAA,SAEnB,CAAA,EAIVG,EAAA,IACEN,EAAA,OAAA,EACEP,EAAAA,IAAA,KAAA,CAAA,SAAAO,EAAA,IAAAG,GAGMV,EAAA,IAAA,KAAA,CAAA,UAAAD,EAAA,cAAA,EAAA,SAAAU,EAAAC,CAAA,CAAA,EAAAA,EAAA,IAAA,CAGE,CAAA,CAAA,EAOVH,EAAA,CAAA,GAAAE,EAAAF,EAAA,CAAA,CAAA,EAGF,OAAAP,EAAA,IAAAb,EAAA,CAAA,SAAA0B,EAAA,EAAA,GAAAL,EAAA,SAAApB,CAAA,CAAA,CAKF,EAEA0B,EAAAR"}