import{j as n}from"./jsx-runtime-Nms4Y4qS.js";import{u as $}from"./formik.esm-C73rln7k.js";import{B as K}from"./BaseInput-DM3RbKlY.js";import{F as O}from"./FieldLayout-TeLzeIUr.js";const P={"text-input-readonly":"_text-input-readonly_1my34_1"},y=({name:a,type:t="text",className:h,classNameFooter:b,classNameLabel:g,classNameInput:V,disabled:q,readOnly:x,hideFooter:L,label:I,isLabelHidden:v=!1,placeholder:w,countCharacters:i,maxLength:s=255,smallLabel:E,isOptional:u=!1,refForInput:o,leftIcon:N,rightButton:B,rightIcon:F,step:_,hasDecimal:k=!0,inline:T=!1,description:d,clearButtonProps:A,hasLabelLineBreak:D=!0,externalError:p,ErrorDetails:H,showMandatoryAsterisk:M,...m})=>{const[f,r]=$({name:a,type:t}),j=/[0-9,.]/,R=/[0-9]/,U=/Tab|Backspace|Enter/,c=!!p||r.touched&&!!r.error,l=[];return d&&l.push(`description-${a}`),i&&l.push(`field-characters-count-description-${a}`),n.jsx(O,{className:h,classNameLabel:g,classNameFooter:b,classNameInput:V,count:i?f.value.length:void 0,error:p||r.error,isOptional:u,showMandatoryAsterisk:M,label:I,isLabelHidden:v,maxLength:s,name:a,showError:c,smallLabel:E,inline:T,hideFooter:L,description:d,clearButtonProps:A,ErrorDetails:H,hasLabelLineBreak:D,children:x?n.jsx("span",{className:P["text-input-readonly"],ref:o,children:m.value}):n.jsx(K,{disabled:q,hasError:c,maxLength:s,placeholder:w,step:_,type:t,rightButton:B,ref:o,rightIcon:F,leftIcon:N,"aria-required":!u,"aria-describedby":l.join(" ")||void 0,onKeyDown:e=>{if(t==="number"){if(U.test(e.key))return;(k?!j.test(e.key):!R.test(e.key))&&e.preventDefault()}},onWheel:e=>{t==="number"&&e.currentTarget.blur()},...f,...m})})};try{y.displayName="TextInput",y.__docgenInfo={description:"",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:"",name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:{value:"true"},description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:{value:"false"},description:"",name:"isOptional",required:!1,type:{name:"boolean"}},showMandatoryAsterisk:{defaultValue:null,description:"",name:"showMandatoryAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:"",name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"",name:"smallLabel",required:!1,type:{name:"boolean"}},hideFooter:{defaultValue:null,description:"",name:"hideFooter",required:!1,type:{name:"boolean"}},inline:{defaultValue:{value:"false"},description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},countCharacters:{defaultValue:null,description:`Allows to display input characters count.
Must be provided with maxLength to be effective,
Adds \`field-characters-count-description-\${name}\`
to the aria-describedby attribute of the input.
Used for FieldLayout count prop.`,name:"countCharacters",required:!1,type:{name:"boolean"}},hasDecimal:{defaultValue:{value:"true"},description:`Allows decimal numbers in the input.
Must be provided with type="number" to be effective.
Unused when readOnly is true.`,name:"hasDecimal",required:!1,type:{name:"boolean"}},refForInput:{defaultValue:null,description:"A forward ref to the span or the input element.",name:"refForInput",required:!1,type:{name:"ForwardedRef<HTMLInputElement>"}},externalError:{defaultValue:null,description:`A custom error message to be displayed.
If this prop is provided, the error message will be displayed
and the field will be marked as errored
regardless of the field's formik state.
Used for error & showError FieldLayout props.`,name:"externalError",required:!1,type:{name:"string"}}}}}catch{}export{y as T};
