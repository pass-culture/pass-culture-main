{"version":3,"file":"DurationInput.stories-c79a8022.js","sources":["../../node_modules/date-fns/esm/constants/index.js","../../node_modules/date-fns/esm/minutesToHours/index.js","../../src/ui-kit/form/DurationInput/utils/parseMinutesToHours.ts","../../src/ui-kit/form/DurationInput/DurationInput.tsx","../../src/ui-kit/form/DurationInput/validationSchema.ts"],"sourcesContent":["/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n\n/**\n * Days in 1 year\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * @name daysInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInYear = 365.2425;\n\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInMinute = 60000;\n\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInHour = 3600000;\n\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInSecond = 1000;\n\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\nexport var minTime = -maxTime;\n\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var minutesInHour = 60;\n\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInQuarter = 3;\n\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInYear = 12;\n\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var quartersInYear = 4;\n\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInHour = 3600;\n\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMinute = 60;\n\n/**\n * Seconds in 1 day\n *\n * @name secondsInDay\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInDay = secondsInHour * 24;\n\n/**\n * Seconds in 1 week\n *\n * @name secondsInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInWeek = secondsInDay * 7;\n\n/**\n * Seconds in 1 year\n *\n * @name secondsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInYear = secondsInDay * daysInYear;\n\n/**\n * Seconds in 1 month\n *\n * @name secondsInMonth\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMonth = secondsInYear / 12;\n\n/**\n * Seconds in 1 quarter\n *\n * @name secondsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInQuarter = secondsInMonth * 3;","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { minutesInHour } from \"../constants/index.js\";\n/**\n * @name minutesToHours\n * @category Conversion Helpers\n * @summary Convert minutes to hours.\n *\n * @description\n * Convert a number of minutes to a full number of hours.\n *\n * @param {number} minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 140 minutes to hours:\n * const result = minutesToHours(120)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = minutesToHours(179)\n * //=> 2\n */\nexport default function minutesToHours(minutes) {\n  requiredArgs(1, arguments);\n  var hours = minutes / minutesInHour;\n  return Math.floor(hours);\n}","import { minutesToHours } from 'date-fns'\n\nexport const parseMinutesToHours = (durationTime: number) => {\n  if (durationTime === 0) {\n    return ''\n  }\n  const hours = minutesToHours(durationTime).toString()\n  const minutes = (durationTime % 60).toString().padStart(2, '0')\n  return `${hours}:${minutes}`\n}\n","import { useField } from 'formik'\nimport React from 'react'\n\nimport TextInput from '../TextInput'\n\nimport { parseMinutesToHours } from './utils/parseMinutesToHours'\n\nexport interface DurationInputProps {\n  label: string\n  name: string\n  isOptional?: boolean\n  className?: string\n  disabled?: boolean\n}\n\nconst DurationInput = ({\n  label,\n  name,\n  isOptional = false,\n  className,\n  disabled,\n  ...props\n}: DurationInputProps): JSX.Element => {\n  const [field, , helpers] = useField({ name })\n\n  const onDurationBlur = async (event: React.FocusEvent<HTMLInputElement>) => {\n    const [updatedHours, updatedMinutes] = event.target.value.split(':')\n    const updatedDurationInMinutes =\n      parseInt(updatedHours || '0') * 60 + parseInt(updatedMinutes || '0')\n    const durationMinutes = parseMinutesToHours(updatedDurationInMinutes)\n\n    await helpers.setValue(durationMinutes)\n  }\n\n  const onDurationChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const durationInputValue = event.target.value.match(/\\d*:?[0-5]?\\d?/)\n    if (durationInputValue && durationInputValue.length > 0) {\n      await helpers.setValue(durationInputValue[0])\n    }\n  }\n\n  return (\n    <TextInput\n      name={field.name}\n      value={field.value || ''}\n      label={label}\n      onChange={onDurationChange}\n      onBlur={onDurationBlur}\n      className={className}\n      isOptional={isOptional}\n      placeholder=\"HH:MM\"\n      disabled={disabled}\n      {...props}\n    />\n  )\n}\n\nexport default DurationInput\n","import * as yup from 'yup'\n\nexport const validationSchema = yup.object().shape({\n  durationMinutes: yup.string().trim(),\n})\n"],"names":["minutesInHour","minutesToHours","minutes","requiredArgs","hours","parseMinutesToHours","durationTime","DurationInput","label","name","isOptional","className","disabled","props","field","helpers","useField","onDurationBlur","event","updatedHours","updatedMinutes","updatedDurationInMinutes","durationMinutes","onDurationChange","durationInputValue","jsx","TextInput","DurationInput$1","validationSchema","yup.object","yup.string"],"mappings":"ozCAkFO,IAAIA,EAAgB,GCzDZ,SAASC,EAAeC,EAAS,CAC9CC,EAAa,EAAG,SAAS,EACzB,IAAIC,EAAQF,EAAUF,EACtB,OAAO,KAAK,MAAMI,CAAK,CACzB,CC3Ba,MAAAC,EAAuBC,GAAyB,CAC3D,GAAIA,IAAiB,EACZ,MAAA,GAET,MAAMF,EAAQH,EAAeK,CAAY,EAAE,SAAS,EAC9CJ,GAAWI,EAAe,IAAI,WAAW,SAAS,EAAG,GAAG,EACvD,MAAA,GAAGF,CAAK,IAAIF,CAAO,EAC5B,ECMAK,EAAA,CAAA,CAAuB,MAAAC,EACrB,KAAAC,EACA,WAAAC,EAAA,GACa,UAAAC,EACb,SAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAA,CAAAC,CAAA,EAAAC,EAAA,CAAA,KAAAP,CAAA,CAAA,EAEAQ,EAAA,MAAAC,GAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,OAAA,MAAA,MAAA,GAAA,EACAG,EAAA,SAAAF,GAAA,GAAA,EAAA,GAAA,SAAAC,GAAA,GAAA,EAEAE,EAAAjB,EAAAgB,CAAA,EAEA,MAAAN,EAAA,SAAAO,CAAA,CAAsC,EAGxCC,EAAA,MAAAL,GAAA,CAGE,MAAAM,EAAAN,EAAA,OAAA,MAAA,MAAA,gBAAA,EACAM,GAAAA,EAAA,OAAA,GACE,MAAAT,EAAA,SAAAS,EAAA,CAAA,CAAA,CACF,EAGF,OAAAC,EAAA,IACEC,EAAC,CAAA,KAAAZ,EAAA,KACa,MAAAA,EAAA,OAAA,GACU,MAAAN,EACtB,SAAAe,EACU,OAAAN,EACF,UAAAN,EACR,WAAAD,EACA,YAAA,QACY,SAAAE,EACZ,GAAAC,CACI,CAAA,CAGV,EAEAc,EAAApB,qkBCzDO,MAAMqB,EAAmBC,EAAW,EAAE,MAAM,CACjD,gBAAiBC,EAAW,EAAE,KAAK,CACrC,CAAC;;;;","x_google_ignoreList":[0,1]}