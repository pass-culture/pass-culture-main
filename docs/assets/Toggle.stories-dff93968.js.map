{"version":3,"file":"Toggle.stories-dff93968.js","sources":["../../src/ui-kit/Toggle/Toggle.tsx"],"sourcesContent":["import cn from 'classnames'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport styles from './Toggle.module.scss'\n\nexport interface ToggleProps {\n  isActiveByDefault?: boolean\n  isDisabled?: boolean\n  label: string\n  handleClick?: () => void\n}\n\nconst Toggle = ({\n  isActiveByDefault = false,\n  isDisabled = false,\n  label = 'Label',\n  handleClick,\n}: ToggleProps) => {\n  const [isActive, setIsActive] = useState(isActiveByDefault)\n\n  useEffect(() => {\n    setIsActive(isActiveByDefault)\n  }, [isActiveByDefault])\n\n  const onClick = useCallback(() => {\n    setIsActive(!isActive)\n    handleClick && handleClick()\n  }, [isActive, setIsActive])\n\n  return (\n    <button\n      className={cn(styles['toggle'])}\n      type=\"button\"\n      disabled={isDisabled}\n      aria-pressed={isActive}\n      onClick={onClick}\n    >\n      {label}\n      <span className={cn(styles['toggle-display'])} hidden />\n    </button>\n  )\n}\nexport default Toggle\n"],"names":["Toggle","isActiveByDefault","isDisabled","label","handleClick","isActive","setIsActive","useState","useEffect","onClick","useCallback","jsxs","cn","styles","jsx","Toggle$1"],"mappings":"wPAYAA,EAAA,CAAA,CAAgB,kBAAAC,EAAA,GACM,WAAAC,EAAA,GACP,MAAAC,EAAA,QACL,YAAAC,CAEV,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAN,CAAA,EAEAO,EAAAA,UAAA,IAAA,CACEF,EAAAL,CAAA,CAA6B,EAAA,CAAAA,CAAA,CAAA,EAG/B,MAAAQ,EAAAC,EAAAA,YAAA,IAAA,CACEJ,EAAA,CAAAD,CAAA,EACAD,GAAAA,EAAA,CAA2B,EAAA,CAAAC,EAAAC,CAAA,CAAA,EAG7B,OAAAK,EAAA,KACE,SAAC,CAAA,UAAAC,EAAAC,EAAA,MAAA,EAC+B,KAAA,SACzB,SAAAX,EACK,eAAAG,EACI,QAAAI,EACd,SAAA,CAECN,EAAAW,MAAA,OAAA,CAAA,UAAAF,EAAAC,EAAA,gBAAA,CAAA,EAAA,OAAA,GAAA,CACqD,CAAA,CAAA,CAG5D,EACAE,EAAAf;;;;;"}