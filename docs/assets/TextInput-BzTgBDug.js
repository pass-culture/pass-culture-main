import{j as e}from"./jsx-runtime-BYYWji4R.js";import{c as m}from"./index-DeARc5FM.js";import{R as k,r as f}from"./index-ClcD9ViR.js";import{B as A}from"./BaseInput-BrnVefEj.js";import{F as B}from"./FieldError-azuIsM2E.js";import{F as E}from"./FieldLayoutCharacterCount-WDa3y29M.js";const a={"text-input-readonly":"_text-input-readonly_begxu_4","input-layout":"_input-layout_begxu_8","input-layout-label":"_input-layout-label_begxu_11","has-description":"_has-description_begxu_27","input-layout-footer":"_input-layout-footer_begxu_30","input-layout-error":"_input-layout-error_begxu_34","input-layout-input-description":"_input-layout-input-description_begxu_37","visually-hidden":"_visually-hidden_begxu_46"},i=k.forwardRef(({name:t,type:r="text",disabled:y,readOnly:h,label:b,className:x,isLabelHidden:g=!1,maxLength:s=255,required:o=!1,asterisk:_=!0,leftIcon:V,rightButton:q,rightIcon:I,hasDecimal:v=!0,description:l,error:n,count:u,...d},N)=>{const p=f.useId(),w=f.useId(),j=`${n?p:""}${l?` ${w}`:""}`,L=e.jsx(A,{name:t,disabled:y,hasError:!!n,maxLength:s,type:r,ref:N,rightButton:q,rightIcon:I,leftIcon:V,"aria-required":o,"aria-describedby":j,onKeyDown:c=>{r==="number"&&!v&&/[,.]/.test(c.key)&&c.preventDefault()},...d});return e.jsxs("div",{className:m(a["input-layout"],{[a["has-description"]]:!!l},x),"data-testid":`wrapper-${t}`,children:[e.jsxs("div",{className:m(a["input-layout-label-container"],{[a["visually-hidden"]]:g}),children:[e.jsxs("label",{className:a["input-layout-label"],htmlFor:t,children:[b," ",o&&_&&"*"]}),l&&e.jsx("span",{id:`description-${t}`,"data-testid":`description-${t}`,className:a["input-layout-input-description"],children:l})]}),h?e.jsx("span",{className:a["text-input-readonly"],children:d.value}):e.jsx(e.Fragment,{children:e.jsxs("div",{className:a["text-input"],children:[L,e.jsxs("div",{className:a["input-layout-footer"],children:[e.jsx("div",{role:"alert",id:p,children:n&&e.jsx(B,{name:t,className:a["input-layout-error"],children:n})}),u!==void 0&&e.jsx(E,{count:u,maxLength:s,name:t})]})]})})]})});i.displayName="TextInput";try{i.displayName="TextInput",i.__docgenInfo={description:"The TextInput component is a customizable input field that integrates with Formik for form state management.\nIt supports features like character counting, read-only mode, decimal number input, and accessibility enhancements.\n\n---\n** Important: Do not use the `placeholder` to indicate the format of the field.**\nUse the `label` or `description` props instead to provide instructions on the expected format.\n---",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:null,description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:null,description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},hideAsterisk:{defaultValue:null,description:`Can be false only when it's the only field in a form and it's mandatory,
or when all fields are mandatory and the form indicates that all fields are mandatory`,name:"hideAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},inline:{defaultValue:null,description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},hasDecimal:{defaultValue:{value:"true"},description:'Allows decimal numbers in the input.\nMust be provided with `type="number"` to be effective.\nUnused when `readOnly` is true.',name:"hasDecimal",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:`A custom error message to be displayed.
If this prop is provided, the error message will be displayed and the field will be marked as errored`,name:"error",required:!1,type:{name:"string"}},count:{defaultValue:null,description:`A custom character counter to be displayed.
If this prop is provided, the counter will be displayed`,name:"count",required:!1,type:{name:"number"}},asterisk:{defaultValue:{value:"true"},description:`A property to not displayed asterisk even if field is required
If this prop is provided, the asterisk will not be displayed`,name:"asterisk",required:!1,type:{name:"boolean"}}}}}catch{}export{i as T};
