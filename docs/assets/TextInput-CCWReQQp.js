import{j as a}from"./jsx-runtime-CfatFE5O.js";import{u as O}from"./formik.esm-DyanDbCL.js";import{B as P}from"./BaseInput-CQqD6LQv.js";import{F as z}from"./FieldLayout-D_IwLhQQ.js";const i={"text-input-readonly":"_text-input-readonly_1s4rv_1","text-input-group":"_text-input-group_1s4rv_6","text-input-group-extension":"_text-input-group-extension_1s4rv_10"},g=({name:t,type:n="text",className:x,classNameFooter:V,classNameLabel:q,classNameInput:I,disabled:w,readOnly:v,hideFooter:L,label:N,isLabelHidden:_=!1,placeholder:k,countCharacters:s,maxLength:o=255,smallLabel:A,isOptional:u=!1,refForInput:d,leftIcon:E,rightButton:F,rightIcon:T,step:B,hasDecimal:D=!0,inline:j=!1,description:p,clearButtonProps:H,hasLabelLineBreak:M=!0,externalError:c,ErrorDetails:R,showMandatoryAsterisk:U,InputExtension:f,...m})=>{const[h,r]=O({name:t,type:n}),$=/[0-9,.]/,C=/[0-9]/,K=/Tab|Backspace|Enter/,y=!!c||r.touched&&!!r.error,l=[];p&&l.push(`description-${t}`),s&&l.push(`field-characters-count-description-${t}`);const b=a.jsx(P,{disabled:w,hasError:y,maxLength:o,placeholder:k,step:B,type:n,rightButton:F,ref:d,rightIcon:T,leftIcon:E,"aria-required":!u,"aria-describedby":l.join(" ")||void 0,onKeyDown:e=>{if(n==="number"){if(K.test(e.key))return;(D?!$.test(e.key):!C.test(e.key))&&e.preventDefault()}},onWheel:e=>{n==="number"&&e.currentTarget.blur()},...h,...m});return a.jsx(z,{className:x,classNameLabel:q,classNameFooter:V,classNameInput:I,count:s?h.value.length:void 0,error:c||r.error,isOptional:u,showMandatoryAsterisk:U,label:N,isLabelHidden:_,maxLength:o,name:t,showError:y,smallLabel:A,inline:j,hideFooter:L,description:p,clearButtonProps:H,ErrorDetails:R,hasLabelLineBreak:M,children:v?a.jsx("span",{className:i["text-input-readonly"],ref:d,children:m.value}):f?a.jsxs("div",{className:i["text-input-group"],role:"group",children:[b,a.jsx("div",{className:i["text-input-group-extension"],children:f})]}):b})};try{g.displayName="TextInput",g.__docgenInfo={description:"The TextInput component is a customizable input field that integrates with Formik for form state management.\nIt supports features like character counting, read-only mode, decimal number input, and accessibility enhancements.\n\n---\n** Important: Do not use the `placeholder` to indicate the format of the field.**\nUse the `label` or `description` props instead to provide instructions on the expected format.\n---",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:{value:"true"},description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:{value:"false"},description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},showMandatoryAsterisk:{defaultValue:null,description:`Can be false only when it's the only field in a form and it's mandatory,
or when all fields are mandatory and the form indicates that all fields are mandatory`,name:"showMandatoryAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},hideFooter:{defaultValue:null,description:`A flag to hide the footer.
To be used with caution, as it can affect accessibility.`,name:"hideFooter",required:!1,type:{name:"boolean"}},inline:{defaultValue:{value:"false"},description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},countCharacters:{defaultValue:null,description:"Allows displaying input characters count.\nMust be provided with `maxLength` to be effective.\nAdds `field-characters-count-description-${name}` to the `aria-describedby` attribute of the input.\nUsed for `FieldLayout` count prop.",name:"countCharacters",required:!1,type:{name:"boolean"}},hasDecimal:{defaultValue:{value:"true"},description:'Allows decimal numbers in the input.\nMust be provided with `type="number"` to be effective.\nUnused when `readOnly` is true.',name:"hasDecimal",required:!1,type:{name:"boolean"}},refForInput:{defaultValue:null,description:"A forward ref to the span or the input element.",name:"refForInput",required:!1,type:{name:"ForwardedRef<HTMLInputElement>"}},externalError:{defaultValue:null,description:"A custom error message to be displayed.\nIf this prop is provided, the error message will be displayed\nand the field will be marked as errored regardless of the field's Formik state.\nUsed for `error` & `showError` `FieldLayout` props.",name:"externalError",required:!1,type:{name:"string"}},InputExtension:{defaultValue:null,description:`A custom component to be displayed next to the input.
It can be used to display additional information or related actions like
a checkbox to reset the input value.`,name:"InputExtension",required:!1,type:{name:"ReactNode"}}}}}catch{}export{g as T};
