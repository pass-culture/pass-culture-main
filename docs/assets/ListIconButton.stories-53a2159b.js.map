{"version":3,"file":"ListIconButton.stories-53a2159b.js","sources":["../../src/ui-kit/ListIconButton/ListIconButton.tsx"],"sourcesContent":["/* istanbul ignore file : no need to test styled html tag  */\nimport cn from 'classnames'\nimport React, { useId } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\nimport Tooltip from 'ui-kit/Tooltip'\n\nimport styles from './ListIconButton.module.scss'\n\nexport interface ListIconButtonProps\n  extends React.HTMLProps<HTMLButtonElement> {\n  icon: string\n  innerRef?: React.RefObject<HTMLButtonElement>\n  className?: string\n  hasTooltip?: boolean\n  onClick?: () => void\n  url?: string\n  isExternal?: boolean\n}\n\nconst ListIconButton = ({\n  children,\n  className,\n  icon,\n  innerRef,\n  hasTooltip,\n  onClick,\n  url,\n  isExternal = true,\n  ...buttonAttrs\n}: ListIconButtonProps): JSX.Element => {\n  const tooltipId = useId()\n  const button = (\n    <button\n      className={cn(styles['button'], className)}\n      ref={innerRef}\n      {...buttonAttrs}\n      onClick={onClick}\n      type=\"button\"\n    >\n      <SvgIcon src={icon} alt=\"\" className={cn(styles['button-icon'])} />\n      <div className={styles['visually-hidden']}>{children}</div>\n    </button>\n  )\n\n  const link = isExternal ? (\n    <a className={cn(styles['button'], className)} href={url} onClick={onClick}>\n      <SvgIcon src={icon} alt=\"\" className={cn(styles['button-icon'])} />\n      <div className={styles['visually-hidden']}>{children}</div>\n    </a>\n  ) : (\n    <Link className={className} onClick={onClick} to={`${url}`}>\n      <SvgIcon src={icon} alt=\"\" className={cn(styles['button-icon'])} />\n      <div className={styles['visually-hidden']}>{children}</div>\n    </Link>\n  )\n\n  if (hasTooltip && !buttonAttrs?.disabled) {\n    return (\n      <Tooltip id={tooltipId} content={children} className={styles['tooltip']}>\n        {url ? link : button}\n      </Tooltip>\n    )\n  }\n  return button\n}\n\nexport default ListIconButton\n"],"names":["ListIconButton","children","className","icon","innerRef","hasTooltip","onClick","url","isExternal","buttonAttrs","tooltipId","useId","button","jsxs","cn","styles","jsx","SvgIcon","link","Link","Tooltip","ListIconButton$1"],"mappings":"yeAqBAA,EAAA,CAAA,CAAwB,SAAAC,EACtB,UAAAC,EACA,KAAAC,EACA,SAAAC,EACA,WAAAC,EACA,QAAAC,EACA,IAAAC,EACA,WAAAC,EAAA,GACa,GAAAC,CAEf,IAAA,CACE,MAAAC,EAAAC,EAAAA,QACAC,EAAAC,EAAA,KACE,SAAC,CAAA,UAAAC,EAAAC,EAAA,OAAAb,CAAA,EAC0C,IAAAE,EACpC,GAAAK,EACD,QAAAH,EACJ,KAAA,SACK,SAAA,CAELU,EAAAA,IAAAC,EAAA,CAAA,IAAAd,EAAA,IAAA,GAAA,UAAAW,EAAAC,EAAA,aAAA,CAAA,CAAA,CAAA,EAAiEC,EAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,iBAAA,EAAA,SAAAd,EAAA,CACZ,CAAA,CAAA,EAIzDiB,EAAAV,EAAAK,EAAAA,KAAA,IAAA,CAAA,UAAAC,EAAAC,EAAA,OAAAb,CAAA,EAAA,KAAAK,EAAA,QAAAD,EAAA,SAAA,CAEIU,EAAAA,IAAAC,EAAA,CAAA,IAAAd,EAAA,IAAA,GAAA,UAAAW,EAAAC,EAAA,aAAA,CAAA,CAAA,CAAA,EAAiEC,EAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,iBAAA,EAAA,SAAAd,EAAA,CACZ,CAAA,CAAA,EAAAY,EAAAA,KAAAM,EAAA,CAAA,UAAAjB,EAAA,QAAAI,EAAA,GAAA,GAAAC,CAAA,GAAA,SAAA,CAIrDS,EAAAA,IAAAC,EAAA,CAAA,IAAAd,EAAA,IAAA,GAAA,UAAAW,EAAAC,EAAA,aAAA,CAAA,CAAA,CAAA,EAAiEC,EAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,iBAAA,EAAA,SAAAd,EAAA,CACZ,CAAA,CAAA,EAIzD,OAAAI,GAAA,EAAAI,GAAA,MAAAA,EAAA,UACEO,EAAAA,IAAAI,EAAA,CAAA,GAAAV,EAAA,QAAAT,EAAA,UAAAc,EAAA,QAAA,SAAAR,EAAAW,EAAAN,CAAA,CAAA,EAMFA,CACF,EAEAS,EAAArB;;;;;"}