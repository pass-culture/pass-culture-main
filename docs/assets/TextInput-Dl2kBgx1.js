import{j as t}from"./jsx-runtime-CfatFE5O.js";import{u as R}from"./formik.esm-DyanDbCL.js";import{B as U}from"./BaseInput-DrWnPV-I.js";import{F as $}from"./FieldLayout-D-UZMvj1.js";const l={"text-input-readonly":"_text-input-readonly_1s4rv_1","text-input-group":"_text-input-group_1s4rv_6","text-input-group-extension":"_text-input-group-extension_1s4rv_10"},g=({name:e,type:a="text",className:x,classNameFooter:V,classNameLabel:q,classNameInput:v,disabled:w,readOnly:I,label:L,isLabelHidden:_=!1,countCharacters:i,maxLength:s=255,smallLabel:N,isOptional:o=!1,focusRef:u,leftIcon:A,rightButton:E,rightIcon:k,step:B,hasDecimal:F=!0,inline:T=!1,description:d,clearButtonProps:j,hasLabelLineBreak:D=!0,externalError:p,ErrorDetails:H,hideAsterisk:M,InputExtension:c,...m})=>{const[f,n]=R({name:e,type:a}),h=!!p||n.touched&&!!n.error,r=[];d&&r.push(`description-${e}`),i&&r.push(`field-characters-count-description-${e}`);const y=t.jsx(U,{disabled:w,hasError:h,maxLength:s,step:B,type:a,rightButton:E,ref:u,rightIcon:k,leftIcon:A,"aria-required":!o,"aria-describedby":r.join(" ")||void 0,onKeyDown:b=>{a==="number"&&!F&&/[,.]/.test(b.key)&&b.preventDefault()},...f,...m});return t.jsx($,{className:x,classNameLabel:q,classNameFooter:V,classNameInput:v,count:i?f.value.length:void 0,error:p||n.error,isOptional:o,hideAsterisk:M,label:L,isLabelHidden:_,maxLength:s,name:e,showError:h,smallLabel:N,inline:T,description:d,clearButtonProps:j,ErrorDetails:H,hasLabelLineBreak:D,children:I?t.jsx("span",{className:l["text-input-readonly"],ref:u,children:m.value}):c?t.jsxs("div",{className:l["text-input-group"],role:"group",children:[y,t.jsx("div",{className:l["text-input-group-extension"],children:c})]}):y})};try{g.displayName="TextInput",g.__docgenInfo={description:"The TextInput component is a customizable input field that integrates with Formik for form state management.\nIt supports features like character counting, read-only mode, decimal number input, and accessibility enhancements.\n\n---\n** Important: Do not use the `placeholder` to indicate the format of the field.**\nUse the `label` or `description` props instead to provide instructions on the expected format.\n---",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string | Element"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},maxLength:{defaultValue:{value:"255"},description:"",name:"maxLength",required:!1,type:{name:"number"}},isLabelHidden:{defaultValue:{value:"false"},description:`A flag to hide the label.
To be used with caution, as it can affect accessibility.
Do not use it if the label is mandatory, placeholder is not
a substitute for a label.`,name:"isLabelHidden",required:!1,type:{name:"boolean"}},hasLabelLineBreak:{defaultValue:{value:"true"},description:"",name:"hasLabelLineBreak",required:!1,type:{name:"boolean"}},isOptional:{defaultValue:{value:"false"},description:`A flag to indicate that the field is optional.
It will display an asterisk next to the label.`,name:"isOptional",required:!1,type:{name:"boolean"}},hideAsterisk:{defaultValue:null,description:`Can be false only when it's the only field in a form and it's mandatory,
or when all fields are mandatory and the form indicates that all fields are mandatory`,name:"hideAsterisk",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:`A custom class for the field layout,
where label, description, input, and footer are displayed.`,name:"className",required:!1,type:{name:"string"}},classNameLabel:{defaultValue:null,description:"",name:"classNameLabel",required:!1,type:{name:"string"}},classNameFooter:{defaultValue:null,description:`A custom class for the footer,
where errors and character count are displayed.`,name:"classNameFooter",required:!1,type:{name:"string"}},classNameInput:{defaultValue:null,description:"",name:"classNameInput",required:!1,type:{name:"string"}},filterVariant:{defaultValue:null,description:"",name:"filterVariant",required:!1,type:{name:"boolean"}},smallLabel:{defaultValue:null,description:"A flag to display a smaller label.",name:"smallLabel",required:!1,type:{name:"boolean"}},inline:{defaultValue:{value:"false"},description:"",name:"inline",required:!1,type:{name:"boolean"}},clearButtonProps:{defaultValue:null,description:"",name:"clearButtonProps",required:!1,type:{name:'(ButtonHTMLAttributes<HTMLButtonElement> & { tooltip: string; display?: "clear" | "close"; })'}},ErrorDetails:{defaultValue:null,description:"",name:"ErrorDetails",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},leftIcon:{defaultValue:null,description:"",name:"leftIcon",required:!1,type:{name:"string"}},rightIcon:{defaultValue:null,description:"",name:"rightIcon",required:!1,type:{name:"string"}},rightButton:{defaultValue:null,description:"",name:"rightButton",required:!1,type:{name:"(() => Element)"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},countCharacters:{defaultValue:null,description:"Allows displaying input characters count.\nMust be provided with `maxLength` to be effective.\nAdds `field-characters-count-description-${name}` to the `aria-describedby` attribute of the input.\nUsed for `FieldLayout` count prop.",name:"countCharacters",required:!1,type:{name:"boolean"}},hasDecimal:{defaultValue:{value:"true"},description:'Allows decimal numbers in the input.\nMust be provided with `type="number"` to be effective.\nUnused when `readOnly` is true.',name:"hasDecimal",required:!1,type:{name:"boolean"}},focusRef:{defaultValue:null,description:"A forward ref to the span or the input element.",name:"focusRef",required:!1,type:{name:"ForwardedRef<HTMLInputElement>"}},externalError:{defaultValue:null,description:"A custom error message to be displayed.\nIf this prop is provided, the error message will be displayed\nand the field will be marked as errored regardless of the field's Formik state.\nUsed for `error` & `showError` `FieldLayout` props.",name:"externalError",required:!1,type:{name:"string"}},InputExtension:{defaultValue:null,description:`A custom component to be displayed next to the input.
It can be used to display additional information or related actions like
a checkbox to reset the input value.`,name:"InputExtension",required:!1,type:{name:"ReactNode"}}}}}catch{}export{g as T};
