import{j as e}from"./jsx-runtime-CfatFE5O.js";import{f as L}from"./full-trash-CEfIUI4M.js";import{c as o}from"./index-DeARc5FM.js";import{r as k}from"./index-ClcD9ViR.js";import{L as N}from"./index-DhKVK4kd.js";import{S as E}from"./SvgIcon-B6esR8Vf.js";import{T as j}from"./Tooltip-CNRbx6pV.js";import{u as S}from"./useTooltipProps-C5TDwaI9.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-B5DG7xGS.js";const V="_button_1ngnu_1",q="_tooltip_1ngnu_37",t={button:V,"button-icon":"_button-icon_1ngnu_13",tooltip:q,"variant-primary":"_variant-primary_1ngnu_41"},B="16",i=k.forwardRef(({children:n,className:s,variant:r="default",tooltipContentClassName:b,icon:g,onClick:l,url:u,isExternal:y=!0,dataTestid:v,...c},I)=>{const{isTooltipHidden:x,...d}=S(c),m=e.jsx(E,{src:g,alt:"",className:o(t["button-icon"]),width:B}),p=c.disabled?m:e.jsx(j,{content:n,tooltipContainerClassName:t.tooltip,tooltipContentClassName:b,visuallyHidden:x,children:m}),C=e.jsx("button",{className:o(t.button,t[`variant-${r}`],s),ref:I,...c,onClick:l,type:"button","data-testid":v,...d,children:p}),T=y?e.jsx("a",{className:o(t.button,t[`variant-${r}`],s),href:u,onClick:l,...d,children:p}):e.jsx(N,{className:o(t.button,t[`variant-${r}`],s),onClick:l,to:`${u}`,...d,children:p});return u?T:C});i.displayName="ListIconButton";try{i.displayName="ListIconButton",i.__docgenInfo={description:`The ListIconButton component is used to render an icon button that can be used as a link or a button.
It supports tooltips, external/internal links, and different button variants.

---
**Important: Use the \`url\` prop to create a link button, and the \`onClick\` prop to handle button actions.**
---`,displayName:"ListIconButton",props:{className:{defaultValue:null,description:"Custom CSS class for additional styling of the button.",name:"className",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"The icon to display inside the button.",name:"icon",required:!0,type:{name:"string"}},variant:{defaultValue:{value:"ListIconButtonVariant.DEFAULT"},description:"The variant of the button.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"primary"'}]}},tooltipContentClassName:{defaultValue:null,description:"Custom CSS class for the tooltip content.",name:"tooltipContentClassName",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback function triggered when the button is clicked.",name:"onClick",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent>) => void)"}},url:{defaultValue:null,description:"The URL to navigate to when the button is clicked.",name:"url",required:!1,type:{name:"string"}},isExternal:{defaultValue:{value:"true"},description:"Indicates if the link is external.",name:"isExternal",required:!1,type:{name:"boolean"}},dataTestid:{defaultValue:null,description:"Custom test ID for targeting the component in tests.",name:"dataTestid",required:!1,type:{name:"string"}}}}}catch{}const Z={title:"ui-kit/ListIconButton",component:i,decorators:[n=>e.jsx("div",{style:{margin:"50px",display:"flex"},children:e.jsx(n,{})})]},a={args:{icon:L,children:"Duplicate"}};var f,h,_;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: {
    icon: fullTrashIcon,
    children: 'Duplicate'
  }
}`,...(_=(h=a.parameters)==null?void 0:h.docs)==null?void 0:_.source}}};const z=["Default"];export{a as Default,z as __namedExportsOrder,Z as default};
