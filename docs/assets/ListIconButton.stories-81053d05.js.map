{"version":3,"file":"ListIconButton.stories-81053d05.js","sources":["../../src/ui-kit/ListIconButton/ListIconButton.tsx"],"sourcesContent":["/* istanbul ignore file : no need to test styled html tag  */\nimport cn from 'classnames'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { SvgIcon } from 'ui-kit/SvgIcon/SvgIcon'\nimport Tooltip from 'ui-kit/Tooltip'\nimport { useTooltipProps } from 'ui-kit/Tooltip/useTooltipProps'\n\nimport styles from './ListIconButton.module.scss'\n\nexport interface ListIconButtonProps\n  extends React.HTMLProps<HTMLButtonElement> {\n  icon: string\n  innerRef?: React.RefObject<HTMLButtonElement>\n  className?: string\n  onClick?: () => void\n  url?: string\n  isExternal?: boolean\n}\n\nconst LIST_ICON_SIZE = '16'\n\nconst ListIconButton = ({\n  children,\n  className,\n  icon,\n  innerRef,\n  onClick,\n  url,\n  isExternal = true,\n  ...buttonAttrs\n}: ListIconButtonProps): JSX.Element => {\n  const { isTooltipHidden, ...tooltipProps } = useTooltipProps(buttonAttrs)\n\n  const svgicon = (\n    <SvgIcon\n      src={icon}\n      alt=\"\"\n      className={cn(styles['button-icon'])}\n      width={LIST_ICON_SIZE}\n    />\n  )\n  const content = !buttonAttrs?.disabled ? (\n    <Tooltip\n      content={children}\n      className={styles['tooltip']}\n      visuallyHidden={isTooltipHidden}\n    >\n      {svgicon}\n    </Tooltip>\n  ) : (\n    svgicon\n  )\n\n  const button = (\n    <button\n      className={cn(styles['button'], className)}\n      ref={innerRef}\n      {...buttonAttrs}\n      onClick={onClick}\n      type=\"button\"\n      {...tooltipProps}\n    >\n      {content}\n    </button>\n  )\n\n  const link = isExternal ? (\n    <a\n      className={cn(styles['button'], className)}\n      href={url}\n      onClick={onClick}\n      {...tooltipProps}\n    >\n      {content}\n    </a>\n  ) : (\n    <Link\n      className={className}\n      onClick={onClick}\n      to={`${url}`}\n      {...tooltipProps}\n    >\n      {content}\n    </Link>\n  )\n\n  return url ? link : button\n}\n\nexport default ListIconButton\n"],"names":["LIST_ICON_SIZE","ListIconButton","children","className","icon","innerRef","onClick","url","isExternal","buttonAttrs","isTooltipHidden","tooltipProps","useTooltipProps","svgicon","jsx","SvgIcon","cn","styles","content","Tooltip","button","link","Link","ListIconButton$1"],"mappings":"4dAqBAA,EAAA,KAEAC,EAAA,CAAA,CAAwB,SAAAC,EACtB,UAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,IAAAC,EACA,WAAAC,EAAA,GACa,GAAAC,CAEf,IAAA,CACE,KAAA,CAAA,gBAAAC,EAAA,GAAAC,CAAA,EAAAC,EAAAH,CAAA,EAEAI,EAAAC,EAAA,IACEC,EAAC,CAAA,IAAAX,EACM,IAAA,GACD,UAAAY,EAAAC,EAAA,aAAA,CAAA,EAC+B,MAAAjB,CAC5B,CAAA,EAGXkB,EAAAT,GAAA,MAAAA,EAAA,SAMKI,EANLC,EAAA,IACEK,EAAC,CAAA,QAAAjB,EACU,UAAAe,EAAA,QACkB,eAAAP,EACX,SAAAG,CAEf,CAAA,EAMLO,EAAAN,EAAA,IACE,SAAC,CAAA,UAAAE,EAAAC,EAAA,OAAAd,CAAA,EAC0C,IAAAE,EACpC,GAAAI,EACD,QAAAH,EACJ,KAAA,SACK,GAAAK,EACD,SAAAO,CAEH,CAAA,EAILG,EAAAb,EAAAM,EAAA,IACE,IAAC,CAAA,UAAAE,EAAAC,EAAA,OAAAd,CAAA,EAC0C,KAAAI,EACnC,QAAAD,EACN,GAAAK,EACI,SAAAO,CAEH,CAAA,EAAAJ,EAAA,IAGHQ,EAAC,CAAA,UAAAnB,EACC,QAAAG,EACA,GAAA,GAAAC,CAAA,GACU,GAAAI,EACN,SAAAO,CAEH,CAAA,EAIL,OAAAX,EAAAc,EAAAD,CACF,EAEAG,EAAAtB;;;;;"}