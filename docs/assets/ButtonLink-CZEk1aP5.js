import{j as e}from"./jsx-runtime-CfatFE5O.js";import{c as L}from"./index-DeARc5FM.js";import{r as N}from"./index-ClcD9ViR.js";import{L as _}from"./index-KFR91sbH.js";import{f as R}from"./full-link-CYVo23DH.js";import{S as q}from"./SvgIcon-B6esR8Vf.js";import{b as a}from"./Button.module-Dtkn584L.js";import{I as c,B as w}from"./types-DjX_gQD6.js";const f=N.forwardRef(({className:m,children:p,icon:r,onClick:o,variant:b=w.TERNARY,iconPosition:s=c.LEFT,iconAlt:h,onBlur:t,isExternal:y=!1,isSectionLink:v=!1,opensInNewTab:u,to:d,...n},k)=>{const g=L(a.button,a[`button-${b}`],a[`button-${s}`],a["button-link"],m),I=u?e.jsx(q,{src:r??R,alt:h??"Nouvelle fenÃªtre",className:a["button-icon"],width:"22"}):r?e.jsx(q,{src:r,alt:h??"",className:a["button-icon"],width:"22"}):null;let l=e.jsxs(e.Fragment,{children:[s!==c.RIGHT&&I,b===w.BOX?e.jsx("div",{className:a["button-arrow-content"],children:p}):e.jsx(e.Fragment,{children:p}),s===c.RIGHT&&I]});const x=v||y||d.startsWith("/")?d:`/${d}`,V=i=>o==null?void 0:o(i);return l=v||y?e.jsx("a",{className:g,href:x,onClick:V,onBlur:i=>t==null?void 0:t(i),rel:"noopener noreferrer",...n,target:n.target??(u?"_blank":"_self"),ref:k,children:l}):e.jsx(_,{className:g,onClick:V,onBlur:i=>t==null?void 0:t(i),to:x,"aria-label":n["aria-label"],target:n.target??(u?"_blank":"_self"),...n,ref:k,children:l}),l});f.displayName="ButtonLink";try{f.displayName="ButtonLink",f.__docgenInfo={description:`The ButtonLink component provides a button-like anchor link that supports internal and external navigation.
It integrates with React Router for internal links and supports a variety of styles and icons.

---
**Important: Use \`aria-label\` for button links that have no visible text to ensure accessibility.**
For external links, use \`rel="noopener noreferrer"\` to enhance security.
---`,displayName:"ButtonLink",props:{"aria-label":{defaultValue:null,description:`ARIA label for the link, providing additional accessibility information.
Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:`The icon to display within the button (or button-link).
If provided, the icon will be displayed as an SVG.`,name:"icon",required:!1,type:{name:"string | null"}},variant:{defaultValue:{value:"ButtonVariant.TERNARY"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ternary"'},{value:'"ternary-pink"'},{value:'"quaternary"'},{value:'"quaternary-pink"'},{value:'"box"'}]}},iconPosition:{defaultValue:{value:"IconPositionEnum.LEFT"},description:"",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"right"'},{value:'"left"'},{value:'"center"'}]}},iconAlt:{defaultValue:null,description:`An alternative text for the icon.
If provided and non-empty, the SVG will have a role="img" and an aria-label attribute.
If undefined or empty, the SVG will have an aria-hidden attribute instead, as a
decorative icon.`,name:"iconAlt",required:!1,type:{name:"string"}},isExternal:{defaultValue:{value:"false"},description:"Indicates if the link is external.",name:"isExternal",required:!1,type:{name:"boolean"}},isSectionLink:{defaultValue:{value:"false"},description:"Indicates if the link is a section link within the page.",name:"isSectionLink",required:!1,type:{name:"boolean"}},opensInNewTab:{defaultValue:null,description:"Indicates if the link should open in a new tab.",name:"opensInNewTab",required:!1,type:{name:"boolean"}},to:{defaultValue:null,description:"The destination URL for the link.",name:"to",required:!0,type:{name:"string"}},type:{defaultValue:null,description:"The type of link.",name:"type",required:!1,type:{name:"string"}},download:{defaultValue:null,description:"Indicates if the link should prompt for download.",name:"download",required:!1,type:{name:"any"}},testId:{defaultValue:null,description:"",name:"testId",required:!1,type:{name:"string"}}}}}catch{}export{f as B};
