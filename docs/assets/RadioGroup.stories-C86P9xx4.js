import{j as o}from"./jsx-runtime-CfatFE5O.js";import{u as N,F as B}from"./formik.esm-DyanDbCL.js";import{c as C}from"./index-DeARc5FM.js";import{R as E}from"./RadioButton-DznOviH3.js";import{F as L}from"./FieldSetLayout-A0yPEig2.js";import"./index-ClcD9ViR.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./BaseRadio-DxLojOuj.js";import"./FieldError-B3YKY1IQ.js";import"./stroke-error-BKdTEWJV.js";import"./SvgIcon-B6esR8Vf.js";const u={"radio-group-item":"_radio-group-item_qxnwn_1","radio-group-horizontal":"_radio-group-horizontal_qxnwn_4"};var c=(e=>(e.VERTICAL="vertical",e.HORIZONTAL="horizontal",e))(c||{});const p=({direction:e="vertical",disabled:n,hideFooter:T=!1,group:x,name:r,legend:V,className:I,withBorder:w,onChange:A})=>{const[,s]=N({name:r}),d=s.touched&&!!s.error;return o.jsx(L,{className:C(u["radio-group"],u[`radio-group-${e}`],I),dataTestId:`wrapper-${r}`,error:d?s.error:void 0,hideFooter:T,legend:V,name:`radio-group-${r}`,isOptional:!0,children:x.map(l=>o.jsx("div",{className:u["radio-group-item"],children:o.jsx(E,{disabled:n,label:l.label,name:r,value:l.value,withBorder:w,hasError:d,fullWidth:!0,onChange:A,...d?{ariaDescribedBy:`error-${r}`}:{}})},l.label))})};try{p.displayName="RadioGroup",p.__docgenInfo={description:`The RadioGroup component is a set of radio buttons grouped together under a common legend.
It integrates with Formik for form state management and provides customization options for layout and styling.

---
**Important: Always provide a legend for accessibility.**
Legends are essential for screen readers and provide context for the radio button group. If the legend should not be visible, use the \`aria-label\` attribute to provide an accessible label.
---`,displayName:"RadioGroup",props:{direction:{defaultValue:{value:"Direction.VERTICAL"},description:"The direction in which the radio buttons should be displayed.",name:"direction",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'}]}},disabled:{defaultValue:null,description:"Whether the radio buttons are disabled.",name:"disabled",required:!1,type:{name:"boolean"}},hideFooter:{defaultValue:{value:"false"},description:"Whether to hide the footer containing error messages.",name:"hideFooter",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"The name of the radio group field.",name:"name",required:!0,type:{name:"string"}},legend:{defaultValue:null,description:"The legend text for the radio group.",name:"legend",required:!1,type:{name:"string"}},group:{defaultValue:null,description:`The group of radio button options.
Each item contains a label and a value.`,name:"group",required:!0,type:{name:"{ label: string; value: string; }[]"}},className:{defaultValue:null,description:"Custom CSS class for the radio group component.",name:"className",required:!1,type:{name:"string"}},withBorder:{defaultValue:null,description:"Whether to add a border around each radio button.",name:"withBorder",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback function to handle changes in the radio group.",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}}}}}catch{}const Z={title:"ui-kit/forms/RadioGroup",component:p,decorators:[e=>o.jsx(B,{initialValues:{question:{}},onSubmit:()=>{},children:({getFieldProps:n})=>o.jsx(e,{...n("group")})})]},m={name:"question",legend:"This is the legend",direction:c.VERTICAL,group:[{label:"Oui",value:"question1"},{label:"Non",value:"question2"}],withBorder:!1},a={args:m},t={args:{...m,withBorder:!0}},i={args:{...m,direction:c.HORIZONTAL}};var g,h,f;a.parameters={...a.parameters,docs:{...(g=a.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: defaultArgs
}`,...(f=(h=a.parameters)==null?void 0:h.docs)==null?void 0:f.source}}};var b,v,y;t.parameters={...t.parameters,docs:{...(b=t.parameters)==null?void 0:b.docs,source:{originalSource:`{
  args: {
    ...defaultArgs,
    withBorder: true
  }
}`,...(y=(v=t.parameters)==null?void 0:v.docs)==null?void 0:y.source}}};var _,q,R;i.parameters={...i.parameters,docs:{...(_=i.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    ...defaultArgs,
    direction: Direction.HORIZONTAL
  }
}`,...(R=(q=i.parameters)==null?void 0:q.docs)==null?void 0:R.source}}};const M=["Default","WithBorder","Horizontal"];export{a as Default,i as Horizontal,t as WithBorder,M as __namedExportsOrder,Z as default};
