/*! For license information please see 822.04725a22.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkpass_culture_pro=self.webpackChunkpass_culture_pro||[]).push([[822],{"./node_modules/@firebase/analytics/dist/esm/index.esm2017.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _firebase_app__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),_firebase_logger__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),_firebase_util__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@firebase/util/dist/index.esm2017.js"),_firebase_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@firebase/component/dist/esm/index.esm2017.js");__webpack_require__("./node_modules/@firebase/installations/dist/esm/index.esm2017.js");const ANALYTICS_TYPE="analytics",GA_FID_KEY="firebase_id",ORIGIN_KEY="origin",FETCH_TIMEOUT_MILLIS=6e4,DYNAMIC_CONFIG_URL="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",GTAG_URL="https://www.googletagmanager.com/gtag/js",logger=new _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.Yd("@firebase/analytics"),ERRORS={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},ERROR_FACTORY=new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.LL("analytics","Analytics",ERRORS);function createGtagTrustedTypesScriptURL(url){if(!url.startsWith(GTAG_URL)){const err=ERROR_FACTORY.create("invalid-gtag-resource",{gtagURL:url});return logger.warn(err.message),""}return url}function promiseAllSettled(promises){return Promise.all(promises.map((promise=>promise.catch((e=>e)))))}function insertScriptTag(dataLayerName,measurementId){const trustedTypesPolicy=function createTrustedTypesPolicy(policyName,policyOptions){let trustedTypesPolicy;return window.trustedTypes&&(trustedTypesPolicy=window.trustedTypes.createPolicy(policyName,policyOptions)),trustedTypesPolicy}("firebase-js-sdk-policy",{createScriptURL:createGtagTrustedTypesScriptURL}),script=document.createElement("script"),gtagScriptURL=`${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;script.src=trustedTypesPolicy?null==trustedTypesPolicy?void 0:trustedTypesPolicy.createScriptURL(gtagScriptURL):gtagScriptURL,script.async=!0,document.head.appendChild(script)}function wrapGtag(gtagCore,initializationPromisesMap,dynamicConfigPromisesList,measurementIdToAppId){return async function gtagWrapper(command,...args){try{if("event"===command){const[measurementId,gtagParams]=args;await async function gtagOnEvent(gtagCore,initializationPromisesMap,dynamicConfigPromisesList,measurementId,gtagParams){try{let initializationPromisesToWaitFor=[];if(gtagParams&&gtagParams.send_to){let gaSendToList=gtagParams.send_to;Array.isArray(gaSendToList)||(gaSendToList=[gaSendToList]);const dynamicConfigResults=await promiseAllSettled(dynamicConfigPromisesList);for(const sendToId of gaSendToList){const foundConfig=dynamicConfigResults.find((config=>config.measurementId===sendToId)),initializationPromise=foundConfig&&initializationPromisesMap[foundConfig.appId];if(!initializationPromise){initializationPromisesToWaitFor=[];break}initializationPromisesToWaitFor.push(initializationPromise)}}0===initializationPromisesToWaitFor.length&&(initializationPromisesToWaitFor=Object.values(initializationPromisesMap)),await Promise.all(initializationPromisesToWaitFor),gtagCore("event",measurementId,gtagParams||{})}catch(e){logger.error(e)}}(gtagCore,initializationPromisesMap,dynamicConfigPromisesList,measurementId,gtagParams)}else if("config"===command){const[measurementId,gtagParams]=args;await async function gtagOnConfig(gtagCore,initializationPromisesMap,dynamicConfigPromisesList,measurementIdToAppId,measurementId,gtagParams){const correspondingAppId=measurementIdToAppId[measurementId];try{if(correspondingAppId)await initializationPromisesMap[correspondingAppId];else{const foundConfig=(await promiseAllSettled(dynamicConfigPromisesList)).find((config=>config.measurementId===measurementId));foundConfig&&await initializationPromisesMap[foundConfig.appId]}}catch(e){logger.error(e)}gtagCore("config",measurementId,gtagParams)}(gtagCore,initializationPromisesMap,dynamicConfigPromisesList,measurementIdToAppId,measurementId,gtagParams)}else if("consent"===command){const[gtagParams]=args;gtagCore("consent","update",gtagParams)}else if("get"===command){const[measurementId,fieldName,callback]=args;gtagCore("get",measurementId,fieldName,callback)}else if("set"===command){const[customParams]=args;gtagCore("set",customParams)}else gtagCore(command,...args)}catch(e){logger.error(e)}}}const LONG_RETRY_FACTOR=30;const defaultRetryData=new class RetryData{constructor(throttleMetadata={},intervalMillis=1e3){this.throttleMetadata=throttleMetadata,this.intervalMillis=intervalMillis}getThrottleMetadata(appId){return this.throttleMetadata[appId]}setThrottleMetadata(appId,metadata){this.throttleMetadata[appId]=metadata}deleteThrottleMetadata(appId){delete this.throttleMetadata[appId]}};function getHeaders(apiKey){return new Headers({Accept:"application/json","x-goog-api-key":apiKey})}async function fetchDynamicConfigWithRetry(app,retryData=defaultRetryData,timeoutMillis){const{appId:appId,apiKey:apiKey,measurementId:measurementId}=app.options;if(!appId)throw ERROR_FACTORY.create("no-app-id");if(!apiKey){if(measurementId)return{measurementId:measurementId,appId:appId};throw ERROR_FACTORY.create("no-api-key")}const throttleMetadata=retryData.getThrottleMetadata(appId)||{backoffCount:0,throttleEndTimeMillis:Date.now()},signal=new AnalyticsAbortSignal;return setTimeout((async()=>{signal.abort()}),void 0!==timeoutMillis?timeoutMillis:FETCH_TIMEOUT_MILLIS),attemptFetchDynamicConfigWithRetry({appId:appId,apiKey:apiKey,measurementId:measurementId},throttleMetadata,signal,retryData)}async function attemptFetchDynamicConfigWithRetry(appFields,{throttleEndTimeMillis:throttleEndTimeMillis,backoffCount:backoffCount},signal,retryData=defaultRetryData){var _a;const{appId:appId,measurementId:measurementId}=appFields;try{await function setAbortableTimeout(signal,throttleEndTimeMillis){return new Promise(((resolve,reject)=>{const backoffMillis=Math.max(throttleEndTimeMillis-Date.now(),0),timeout=setTimeout(resolve,backoffMillis);signal.addEventListener((()=>{clearTimeout(timeout),reject(ERROR_FACTORY.create("fetch-throttle",{throttleEndTimeMillis:throttleEndTimeMillis}))}))}))}(signal,throttleEndTimeMillis)}catch(e){if(measurementId)return logger.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${measurementId} provided in the "measurementId" field in the local Firebase config. [${null==e?void 0:e.message}]`),{appId:appId,measurementId:measurementId};throw e}try{const response=await async function fetchDynamicConfig(appFields){var _a;const{appId:appId,apiKey:apiKey}=appFields,request={method:"GET",headers:getHeaders(apiKey)},appUrl=DYNAMIC_CONFIG_URL.replace("{app-id}",appId),response=await fetch(appUrl,request);if(200!==response.status&&304!==response.status){let errorMessage="";try{const jsonResponse=await response.json();(null===(_a=jsonResponse.error)||void 0===_a?void 0:_a.message)&&(errorMessage=jsonResponse.error.message)}catch(_ignored){}throw ERROR_FACTORY.create("config-fetch-failed",{httpStatus:response.status,responseMessage:errorMessage})}return response.json()}(appFields);return retryData.deleteThrottleMetadata(appId),response}catch(e){const error=e;if(!function isRetriableError(e){if(!(e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_2__.ZR&&e.customData))return!1;const httpStatus=Number(e.customData.httpStatus);return 429===httpStatus||500===httpStatus||503===httpStatus||504===httpStatus}(error)){if(retryData.deleteThrottleMetadata(appId),measurementId)return logger.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${measurementId} provided in the "measurementId" field in the local Firebase config. [${null==error?void 0:error.message}]`),{appId:appId,measurementId:measurementId};throw e}const backoffMillis=503===Number(null===(_a=null==error?void 0:error.customData)||void 0===_a?void 0:_a.httpStatus)?(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.$s)(backoffCount,retryData.intervalMillis,LONG_RETRY_FACTOR):(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.$s)(backoffCount,retryData.intervalMillis),throttleMetadata={throttleEndTimeMillis:Date.now()+backoffMillis,backoffCount:backoffCount+1};return retryData.setThrottleMetadata(appId,throttleMetadata),logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`),attemptFetchDynamicConfigWithRetry(appFields,throttleMetadata,signal,retryData)}}class AnalyticsAbortSignal{constructor(){this.listeners=[]}addEventListener(listener){this.listeners.push(listener)}abort(){this.listeners.forEach((listener=>listener()))}}let defaultEventParametersForInit,defaultConsentSettingsForInit;function _setConsentDefaultForInit(consentSettings){defaultConsentSettingsForInit=consentSettings}function _setDefaultEventParametersForInit(customParams){defaultEventParametersForInit=customParams}async function _initializeAnalytics(app,dynamicConfigPromisesList,measurementIdToAppId,installations,gtagCore,dataLayerName,options){var _a;const dynamicConfigPromise=fetchDynamicConfigWithRetry(app);dynamicConfigPromise.then((config=>{measurementIdToAppId[config.measurementId]=config.appId,app.options.measurementId&&config.measurementId!==app.options.measurementId&&logger.warn(`The measurement ID in the local Firebase config (${app.options.measurementId}) does not match the measurement ID fetched from the server (${config.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((e=>logger.error(e))),dynamicConfigPromisesList.push(dynamicConfigPromise);const fidPromise=async function validateIndexedDB(){if(!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.hl)())return logger.warn(ERROR_FACTORY.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.eu)()}catch(e){return logger.warn(ERROR_FACTORY.create("indexeddb-unavailable",{errorInfo:null==e?void 0:e.toString()}).message),!1}return!0}().then((envIsValid=>envIsValid?installations.getId():void 0)),[dynamicConfig,fid]=await Promise.all([dynamicConfigPromise,fidPromise]);(function findGtagScriptOnPage(dataLayerName){const scriptTags=window.document.getElementsByTagName("script");for(const tag of Object.values(scriptTags))if(tag.src&&tag.src.includes(GTAG_URL)&&tag.src.includes(dataLayerName))return tag;return null})(dataLayerName)||insertScriptTag(dataLayerName,dynamicConfig.measurementId),defaultConsentSettingsForInit&&(gtagCore("consent","default",defaultConsentSettingsForInit),_setConsentDefaultForInit(void 0)),gtagCore("js",new Date);const configProperties=null!==(_a=null==options?void 0:options.config)&&void 0!==_a?_a:{};return configProperties[ORIGIN_KEY]="firebase",configProperties.update=!0,null!=fid&&(configProperties[GA_FID_KEY]=fid),gtagCore("config",dynamicConfig.measurementId,configProperties),defaultEventParametersForInit&&(gtagCore("set",defaultEventParametersForInit),_setDefaultEventParametersForInit(void 0)),dynamicConfig.measurementId}class AnalyticsService{constructor(app){this.app=app}_delete(){return delete initializationPromisesMap[this.app.options.appId],Promise.resolve()}}let initializationPromisesMap={},dynamicConfigPromisesList=[];const measurementIdToAppId={};let gtagCoreFunction,wrappedGtagFunction,dataLayerName="dataLayer",gtagName="gtag",globalInitDone=!1;function factory(app,installations,options){!function warnOnBrowserContextMismatch(){const mismatchedEnvMessages=[];if((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.ru)()&&mismatchedEnvMessages.push("This is a browser extension environment."),(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.zI)()||mismatchedEnvMessages.push("Cookies are not available."),mismatchedEnvMessages.length>0){const details=mismatchedEnvMessages.map(((message,index)=>`(${index+1}) ${message}`)).join(" "),err=ERROR_FACTORY.create("invalid-analytics-context",{errorInfo:details});logger.warn(err.message)}}();const appId=app.options.appId;if(!appId)throw ERROR_FACTORY.create("no-app-id");if(!app.options.apiKey){if(!app.options.measurementId)throw ERROR_FACTORY.create("no-api-key");logger.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=initializationPromisesMap[appId])throw ERROR_FACTORY.create("already-exists",{id:appId});if(!globalInitDone){!function getOrCreateDataLayer(dataLayerName){let dataLayer=[];return Array.isArray(window[dataLayerName])?dataLayer=window[dataLayerName]:window[dataLayerName]=dataLayer,dataLayer}(dataLayerName);const{wrappedGtag:wrappedGtag,gtagCore:gtagCore}=function wrapOrCreateGtag(initializationPromisesMap,dynamicConfigPromisesList,measurementIdToAppId,dataLayerName,gtagFunctionName){let gtagCore=function(..._args){window[dataLayerName].push(arguments)};return window[gtagFunctionName]&&"function"==typeof window[gtagFunctionName]&&(gtagCore=window[gtagFunctionName]),window[gtagFunctionName]=wrapGtag(gtagCore,initializationPromisesMap,dynamicConfigPromisesList,measurementIdToAppId),{gtagCore:gtagCore,wrappedGtag:window[gtagFunctionName]}}(initializationPromisesMap,dynamicConfigPromisesList,measurementIdToAppId,dataLayerName,gtagName);wrappedGtagFunction=wrappedGtag,gtagCoreFunction=gtagCore,globalInitDone=!0}initializationPromisesMap[appId]=_initializeAnalytics(app,dynamicConfigPromisesList,measurementIdToAppId,installations,gtagCoreFunction,dataLayerName,options);return new AnalyticsService(app)}function logEvent(analyticsInstance,eventName,eventParams,options){analyticsInstance=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.m9)(analyticsInstance),async function logEvent$1(gtagFunction,initializationPromise,eventName,eventParams,options){if(options&&options.global)gtagFunction("event",eventName,eventParams);else{const measurementId=await initializationPromise;gtagFunction("event",eventName,Object.assign(Object.assign({},eventParams),{send_to:measurementId}))}}(wrappedGtagFunction,initializationPromisesMap[analyticsInstance.app.options.appId],eventName,eventParams,options).catch((e=>logger.error(e)))}const name="@firebase/analytics";!function registerAnalytics(){(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.Xd)(new _firebase_component__WEBPACK_IMPORTED_MODULE_3__.wA(ANALYTICS_TYPE,((container,{options:analyticsOptions})=>factory(container.getProvider("app").getImmediate(),container.getProvider("installations-internal").getImmediate(),analyticsOptions)),"PUBLIC")),(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.Xd)(new _firebase_component__WEBPACK_IMPORTED_MODULE_3__.wA("analytics-internal",(function internalFactory(container){try{const analytics=container.getProvider(ANALYTICS_TYPE).getImmediate();return{logEvent:(eventName,eventParams,options)=>logEvent(analytics,eventName,eventParams,options)}}catch(e){throw ERROR_FACTORY.create("interop-component-reg-failed",{reason:e})}}),"PRIVATE")),(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.KN)(name,"0.10.0"),(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.KN)(name,"0.10.0","esm2017")}()},"./node_modules/@firebase/app/dist/esm/index.esm2017.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Jn:function(){return SDK_VERSION},qX:function(){return _getProvider},Xd:function(){return _registerComponent},KN:function(){return registerVersion}});var index_esm2017=__webpack_require__("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),esm_index_esm2017=__webpack_require__("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),dist_index_esm2017=__webpack_require__("./node_modules/@firebase/util/dist/index.esm2017.js");const instanceOfAny=(object,constructors)=>constructors.some((c=>object instanceof c));let idbProxyableTypes,cursorAdvanceMethods;const cursorRequestMap=new WeakMap,transactionDoneMap=new WeakMap,transactionStoreNamesMap=new WeakMap,transformCache=new WeakMap,reverseTransformCache=new WeakMap;let idbProxyTraps={get(target,prop,receiver){if(target instanceof IDBTransaction){if("done"===prop)return transactionDoneMap.get(target);if("objectStoreNames"===prop)return target.objectStoreNames||transactionStoreNamesMap.get(target);if("store"===prop)return receiver.objectStoreNames[1]?void 0:receiver.objectStore(receiver.objectStoreNames[0])}return wrap_idb_value_wrap(target[prop])},set(target,prop,value){return target[prop]=value,!0},has(target,prop){return target instanceof IDBTransaction&&("done"===prop||"store"===prop)||prop in target}};function wrapFunction(func){return func!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?function getCursorAdvanceMethods(){return cursorAdvanceMethods||(cursorAdvanceMethods=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}().includes(func)?function(...args){return func.apply(unwrap(this),args),wrap_idb_value_wrap(cursorRequestMap.get(this))}:function(...args){return wrap_idb_value_wrap(func.apply(unwrap(this),args))}:function(storeNames,...args){const tx=func.call(unwrap(this),storeNames,...args);return transactionStoreNamesMap.set(tx,storeNames.sort?storeNames.sort():[storeNames]),wrap_idb_value_wrap(tx)}}function transformCachableValue(value){return"function"==typeof value?wrapFunction(value):(value instanceof IDBTransaction&&function cacheDonePromiseForTransaction(tx){if(transactionDoneMap.has(tx))return;const done=new Promise(((resolve,reject)=>{const unlisten=()=>{tx.removeEventListener("complete",complete),tx.removeEventListener("error",error),tx.removeEventListener("abort",error)},complete=()=>{resolve(),unlisten()},error=()=>{reject(tx.error||new DOMException("AbortError","AbortError")),unlisten()};tx.addEventListener("complete",complete),tx.addEventListener("error",error),tx.addEventListener("abort",error)}));transactionDoneMap.set(tx,done)}(value),instanceOfAny(value,function getIdbProxyableTypes(){return idbProxyableTypes||(idbProxyableTypes=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}())?new Proxy(value,idbProxyTraps):value)}function wrap_idb_value_wrap(value){if(value instanceof IDBRequest)return function promisifyRequest(request){const promise=new Promise(((resolve,reject)=>{const unlisten=()=>{request.removeEventListener("success",success),request.removeEventListener("error",error)},success=()=>{resolve(wrap_idb_value_wrap(request.result)),unlisten()},error=()=>{reject(request.error),unlisten()};request.addEventListener("success",success),request.addEventListener("error",error)}));return promise.then((value=>{value instanceof IDBCursor&&cursorRequestMap.set(value,request)})).catch((()=>{})),reverseTransformCache.set(promise,request),promise}(value);if(transformCache.has(value))return transformCache.get(value);const newValue=transformCachableValue(value);return newValue!==value&&(transformCache.set(value,newValue),reverseTransformCache.set(newValue,value)),newValue}const unwrap=value=>reverseTransformCache.get(value);const readMethods=["get","getKey","getAll","getAllKeys","count"],writeMethods=["put","add","delete","clear"],cachedMethods=new Map;function getMethod(target,prop){if(!(target instanceof IDBDatabase)||prop in target||"string"!=typeof prop)return;if(cachedMethods.get(prop))return cachedMethods.get(prop);const targetFuncName=prop.replace(/FromIndex$/,""),useIndex=prop!==targetFuncName,isWrite=writeMethods.includes(targetFuncName);if(!(targetFuncName in(useIndex?IDBIndex:IDBObjectStore).prototype)||!isWrite&&!readMethods.includes(targetFuncName))return;const method=async function(storeName,...args){const tx=this.transaction(storeName,isWrite?"readwrite":"readonly");let target=tx.store;return useIndex&&(target=target.index(args.shift())),(await Promise.all([target[targetFuncName](...args),isWrite&&tx.done]))[0]};return cachedMethods.set(prop,method),method}!function replaceTraps(callback){idbProxyTraps=callback(idbProxyTraps)}((oldTraps=>({...oldTraps,get:(target,prop,receiver)=>getMethod(target,prop)||oldTraps.get(target,prop,receiver),has:(target,prop)=>!!getMethod(target,prop)||oldTraps.has(target,prop)})));class PlatformLoggerServiceImpl{constructor(container){this.container=container}getPlatformInfoString(){return this.container.getProviders().map((provider=>{if(function isVersionServiceProvider(provider){const component=provider.getComponent();return"VERSION"===(null==component?void 0:component.type)}(provider)){const service=provider.getImmediate();return`${service.library}/${service.version}`}return null})).filter((logString=>logString)).join(" ")}}const name$o="@firebase/app",logger=new esm_index_esm2017.Yd("@firebase/app"),PLATFORM_LOG_STRING={[name$o]:"fire-core","@firebase/app-compat":"fire-core-compat","@firebase/analytics":"fire-analytics","@firebase/analytics-compat":"fire-analytics-compat","@firebase/app-check":"fire-app-check","@firebase/app-check-compat":"fire-app-check-compat","@firebase/auth":"fire-auth","@firebase/auth-compat":"fire-auth-compat","@firebase/database":"fire-rtdb","@firebase/database-compat":"fire-rtdb-compat","@firebase/functions":"fire-fn","@firebase/functions-compat":"fire-fn-compat","@firebase/installations":"fire-iid","@firebase/installations-compat":"fire-iid-compat","@firebase/messaging":"fire-fcm","@firebase/messaging-compat":"fire-fcm-compat","@firebase/performance":"fire-perf","@firebase/performance-compat":"fire-perf-compat","@firebase/remote-config":"fire-rc","@firebase/remote-config-compat":"fire-rc-compat","@firebase/storage":"fire-gcs","@firebase/storage-compat":"fire-gcs-compat","@firebase/firestore":"fire-fst","@firebase/firestore-compat":"fire-fst-compat","fire-js":"fire-js",firebase:"fire-js-all"},_apps=new Map,_components=new Map;function _addComponent(app,component){try{app.container.addComponent(component)}catch(e){logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`,e)}}function _registerComponent(component){const componentName=component.name;if(_components.has(componentName))return logger.debug(`There were multiple attempts to register component ${componentName}.`),!1;_components.set(componentName,component);for(const app of _apps.values())_addComponent(app,component);return!0}function _getProvider(app,name){const heartbeatController=app.container.getProvider("heartbeat").getImmediate({optional:!0});return heartbeatController&&heartbeatController.triggerHeartbeat(),app.container.getProvider(name)}const ERRORS={"no-app":"No Firebase App '{$appName}' has been created - call initializeApp() first","bad-app-name":"Illegal App name: '{$appName}","duplicate-app":"Firebase App named '{$appName}' already exists with different options or config","app-deleted":"Firebase App named '{$appName}' already deleted","no-options":"Need to provide options, when not being deployed to hosting via source.","invalid-app-argument":"firebase.{$appName}() takes either no argument or a Firebase App instance.","invalid-log-argument":"First argument to `onLog` must be null or a function.","idb-open":"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.","idb-get":"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.","idb-set":"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.","idb-delete":"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."},ERROR_FACTORY=new dist_index_esm2017.LL("app","Firebase",ERRORS);const SDK_VERSION="10.1.0";function registerVersion(libraryKeyOrName,version,variant){var _a;let library=null!==(_a=PLATFORM_LOG_STRING[libraryKeyOrName])&&void 0!==_a?_a:libraryKeyOrName;variant&&(library+=`-${variant}`);const libraryMismatch=library.match(/\s|\//),versionMismatch=version.match(/\s|\//);if(libraryMismatch||versionMismatch){const warning=[`Unable to register library "${library}" with version "${version}":`];return libraryMismatch&&warning.push(`library name "${library}" contains illegal characters (whitespace or "/")`),libraryMismatch&&versionMismatch&&warning.push("and"),versionMismatch&&warning.push(`version name "${version}" contains illegal characters (whitespace or "/")`),void logger.warn(warning.join(" "))}_registerComponent(new index_esm2017.wA(`${library}-version`,(()=>({library:library,version:version})),"VERSION"))}const DB_NAME="firebase-heartbeat-database",DB_VERSION=1,STORE_NAME="firebase-heartbeat-store";let dbPromise=null;function getDbPromise(){return dbPromise||(dbPromise=function openDB(name,version,{blocked:blocked,upgrade:upgrade,blocking:blocking,terminated:terminated}={}){const request=indexedDB.open(name,version),openPromise=wrap_idb_value_wrap(request);return upgrade&&request.addEventListener("upgradeneeded",(event=>{upgrade(wrap_idb_value_wrap(request.result),event.oldVersion,event.newVersion,wrap_idb_value_wrap(request.transaction),event)})),blocked&&request.addEventListener("blocked",(event=>blocked(event.oldVersion,event.newVersion,event))),openPromise.then((db=>{terminated&&db.addEventListener("close",(()=>terminated())),blocking&&db.addEventListener("versionchange",(event=>blocking(event.oldVersion,event.newVersion,event)))})).catch((()=>{})),openPromise}(DB_NAME,DB_VERSION,{upgrade:(db,oldVersion)=>{if(0===oldVersion)db.createObjectStore(STORE_NAME)}}).catch((e=>{throw ERROR_FACTORY.create("idb-open",{originalErrorMessage:e.message})}))),dbPromise}async function writeHeartbeatsToIndexedDB(app,heartbeatObject){try{const tx=(await getDbPromise()).transaction(STORE_NAME,"readwrite"),objectStore=tx.objectStore(STORE_NAME);await objectStore.put(heartbeatObject,computeKey(app)),await tx.done}catch(e){if(e instanceof dist_index_esm2017.ZR)logger.warn(e.message);else{const idbGetError=ERROR_FACTORY.create("idb-set",{originalErrorMessage:null==e?void 0:e.message});logger.warn(idbGetError.message)}}}function computeKey(app){return`${app.name}!${app.options.appId}`}class HeartbeatServiceImpl{constructor(container){this.container=container,this._heartbeatsCache=null;const app=this.container.getProvider("app").getImmediate();this._storage=new HeartbeatStorageImpl(app),this._heartbeatsCachePromise=this._storage.read().then((result=>(this._heartbeatsCache=result,result)))}async triggerHeartbeat(){const agent=this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),date=getUTCDateString();if(null===this._heartbeatsCache&&(this._heartbeatsCache=await this._heartbeatsCachePromise),this._heartbeatsCache.lastSentHeartbeatDate!==date&&!this._heartbeatsCache.heartbeats.some((singleDateHeartbeat=>singleDateHeartbeat.date===date)))return this._heartbeatsCache.heartbeats.push({date:date,agent:agent}),this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter((singleDateHeartbeat=>{const hbTimestamp=new Date(singleDateHeartbeat.date).valueOf();return Date.now()-hbTimestamp<=2592e6})),this._storage.overwrite(this._heartbeatsCache)}async getHeartbeatsHeader(){if(null===this._heartbeatsCache&&await this._heartbeatsCachePromise,null===this._heartbeatsCache||0===this._heartbeatsCache.heartbeats.length)return"";const date=getUTCDateString(),{heartbeatsToSend:heartbeatsToSend,unsentEntries:unsentEntries}=function extractHeartbeatsForHeader(heartbeatsCache,maxSize=1024){const heartbeatsToSend=[];let unsentEntries=heartbeatsCache.slice();for(const singleDateHeartbeat of heartbeatsCache){const heartbeatEntry=heartbeatsToSend.find((hb=>hb.agent===singleDateHeartbeat.agent));if(heartbeatEntry){if(heartbeatEntry.dates.push(singleDateHeartbeat.date),countBytes(heartbeatsToSend)>maxSize){heartbeatEntry.dates.pop();break}}else if(heartbeatsToSend.push({agent:singleDateHeartbeat.agent,dates:[singleDateHeartbeat.date]}),countBytes(heartbeatsToSend)>maxSize){heartbeatsToSend.pop();break}unsentEntries=unsentEntries.slice(1)}return{heartbeatsToSend:heartbeatsToSend,unsentEntries:unsentEntries}}(this._heartbeatsCache.heartbeats),headerString=(0,dist_index_esm2017.L)(JSON.stringify({version:2,heartbeats:heartbeatsToSend}));return this._heartbeatsCache.lastSentHeartbeatDate=date,unsentEntries.length>0?(this._heartbeatsCache.heartbeats=unsentEntries,await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],this._storage.overwrite(this._heartbeatsCache)),headerString}}function getUTCDateString(){return(new Date).toISOString().substring(0,10)}class HeartbeatStorageImpl{constructor(app){this.app=app,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return!!(0,dist_index_esm2017.hl)()&&(0,dist_index_esm2017.eu)().then((()=>!0)).catch((()=>!1))}async read(){if(await this._canUseIndexedDBPromise){return await async function readHeartbeatsFromIndexedDB(app){try{const db=await getDbPromise();return await db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app))}catch(e){if(e instanceof dist_index_esm2017.ZR)logger.warn(e.message);else{const idbGetError=ERROR_FACTORY.create("idb-get",{originalErrorMessage:null==e?void 0:e.message});logger.warn(idbGetError.message)}}}(this.app)||{heartbeats:[]}}return{heartbeats:[]}}async overwrite(heartbeatsObject){var _a;if(await this._canUseIndexedDBPromise){const existingHeartbeatsObject=await this.read();return writeHeartbeatsToIndexedDB(this.app,{lastSentHeartbeatDate:null!==(_a=heartbeatsObject.lastSentHeartbeatDate)&&void 0!==_a?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:heartbeatsObject.heartbeats})}}async add(heartbeatsObject){var _a;if(await this._canUseIndexedDBPromise){const existingHeartbeatsObject=await this.read();return writeHeartbeatsToIndexedDB(this.app,{lastSentHeartbeatDate:null!==(_a=heartbeatsObject.lastSentHeartbeatDate)&&void 0!==_a?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:[...existingHeartbeatsObject.heartbeats,...heartbeatsObject.heartbeats]})}}}function countBytes(heartbeatsCache){return(0,dist_index_esm2017.L)(JSON.stringify({version:2,heartbeats:heartbeatsCache})).length}!function registerCoreComponents(variant){_registerComponent(new index_esm2017.wA("platform-logger",(container=>new PlatformLoggerServiceImpl(container)),"PRIVATE")),_registerComponent(new index_esm2017.wA("heartbeat",(container=>new HeartbeatServiceImpl(container)),"PRIVATE")),registerVersion(name$o,"0.9.15",variant),registerVersion(name$o,"0.9.15","esm2017"),registerVersion("fire-js","")}("")},"./node_modules/@firebase/component/dist/esm/index.esm2017.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{wA:function(){return Component}});__webpack_require__("./node_modules/@firebase/util/dist/index.esm2017.js");class Component{constructor(name,instanceFactory,type){this.name=name,this.instanceFactory=instanceFactory,this.type=type,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(mode){return this.instantiationMode=mode,this}setMultipleInstances(multipleInstances){return this.multipleInstances=multipleInstances,this}setServiceProps(props){return this.serviceProps=props,this}setInstanceCreatedCallback(callback){return this.onInstanceCreated=callback,this}}},"./node_modules/@firebase/installations/dist/esm/index.esm2017.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){var index_esm2017=__webpack_require__("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),esm_index_esm2017=__webpack_require__("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),dist_index_esm2017=__webpack_require__("./node_modules/@firebase/util/dist/index.esm2017.js");const instanceOfAny=(object,constructors)=>constructors.some((c=>object instanceof c));let idbProxyableTypes,cursorAdvanceMethods;const cursorRequestMap=new WeakMap,transactionDoneMap=new WeakMap,transactionStoreNamesMap=new WeakMap,transformCache=new WeakMap,reverseTransformCache=new WeakMap;let idbProxyTraps={get(target,prop,receiver){if(target instanceof IDBTransaction){if("done"===prop)return transactionDoneMap.get(target);if("objectStoreNames"===prop)return target.objectStoreNames||transactionStoreNamesMap.get(target);if("store"===prop)return receiver.objectStoreNames[1]?void 0:receiver.objectStore(receiver.objectStoreNames[0])}return wrap_idb_value_wrap(target[prop])},set(target,prop,value){return target[prop]=value,!0},has(target,prop){return target instanceof IDBTransaction&&("done"===prop||"store"===prop)||prop in target}};function wrapFunction(func){return func!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?function getCursorAdvanceMethods(){return cursorAdvanceMethods||(cursorAdvanceMethods=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}().includes(func)?function(...args){return func.apply(unwrap(this),args),wrap_idb_value_wrap(cursorRequestMap.get(this))}:function(...args){return wrap_idb_value_wrap(func.apply(unwrap(this),args))}:function(storeNames,...args){const tx=func.call(unwrap(this),storeNames,...args);return transactionStoreNamesMap.set(tx,storeNames.sort?storeNames.sort():[storeNames]),wrap_idb_value_wrap(tx)}}function transformCachableValue(value){return"function"==typeof value?wrapFunction(value):(value instanceof IDBTransaction&&function cacheDonePromiseForTransaction(tx){if(transactionDoneMap.has(tx))return;const done=new Promise(((resolve,reject)=>{const unlisten=()=>{tx.removeEventListener("complete",complete),tx.removeEventListener("error",error),tx.removeEventListener("abort",error)},complete=()=>{resolve(),unlisten()},error=()=>{reject(tx.error||new DOMException("AbortError","AbortError")),unlisten()};tx.addEventListener("complete",complete),tx.addEventListener("error",error),tx.addEventListener("abort",error)}));transactionDoneMap.set(tx,done)}(value),instanceOfAny(value,function getIdbProxyableTypes(){return idbProxyableTypes||(idbProxyableTypes=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}())?new Proxy(value,idbProxyTraps):value)}function wrap_idb_value_wrap(value){if(value instanceof IDBRequest)return function promisifyRequest(request){const promise=new Promise(((resolve,reject)=>{const unlisten=()=>{request.removeEventListener("success",success),request.removeEventListener("error",error)},success=()=>{resolve(wrap_idb_value_wrap(request.result)),unlisten()},error=()=>{reject(request.error),unlisten()};request.addEventListener("success",success),request.addEventListener("error",error)}));return promise.then((value=>{value instanceof IDBCursor&&cursorRequestMap.set(value,request)})).catch((()=>{})),reverseTransformCache.set(promise,request),promise}(value);if(transformCache.has(value))return transformCache.get(value);const newValue=transformCachableValue(value);return newValue!==value&&(transformCache.set(value,newValue),reverseTransformCache.set(newValue,value)),newValue}const unwrap=value=>reverseTransformCache.get(value);const readMethods=["get","getKey","getAll","getAllKeys","count"],writeMethods=["put","add","delete","clear"],cachedMethods=new Map;function getMethod(target,prop){if(!(target instanceof IDBDatabase)||prop in target||"string"!=typeof prop)return;if(cachedMethods.get(prop))return cachedMethods.get(prop);const targetFuncName=prop.replace(/FromIndex$/,""),useIndex=prop!==targetFuncName,isWrite=writeMethods.includes(targetFuncName);if(!(targetFuncName in(useIndex?IDBIndex:IDBObjectStore).prototype)||!isWrite&&!readMethods.includes(targetFuncName))return;const method=async function(storeName,...args){const tx=this.transaction(storeName,isWrite?"readwrite":"readonly");let target=tx.store;return useIndex&&(target=target.index(args.shift())),(await Promise.all([target[targetFuncName](...args),isWrite&&tx.done]))[0]};return cachedMethods.set(prop,method),method}!function replaceTraps(callback){idbProxyTraps=callback(idbProxyTraps)}((oldTraps=>({...oldTraps,get:(target,prop,receiver)=>getMethod(target,prop)||oldTraps.get(target,prop,receiver),has:(target,prop)=>!!getMethod(target,prop)||oldTraps.has(target,prop)})));const PENDING_TIMEOUT_MS=1e4,PACKAGE_VERSION="w:0.6.4",INTERNAL_AUTH_VERSION="FIS_v2",INSTALLATIONS_API_URL="https://firebaseinstallations.googleapis.com/v1",TOKEN_EXPIRATION_BUFFER=36e5,ERROR_DESCRIPTION_MAP={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},ERROR_FACTORY=new dist_index_esm2017.LL("installations","Installations",ERROR_DESCRIPTION_MAP);function isServerError(error){return error instanceof dist_index_esm2017.ZR&&error.code.includes("request-failed")}function getInstallationsEndpoint({projectId:projectId}){return`${INSTALLATIONS_API_URL}/projects/${projectId}/installations`}function extractAuthTokenInfoFromResponse(response){return{token:response.token,requestStatus:2,expiresIn:(responseExpiresIn=response.expiresIn,Number(responseExpiresIn.replace("s","000"))),creationTime:Date.now()};var responseExpiresIn}async function getErrorFromResponse(requestName,response){const errorData=(await response.json()).error;return ERROR_FACTORY.create("request-failed",{requestName:requestName,serverCode:errorData.code,serverMessage:errorData.message,serverStatus:errorData.status})}function getHeaders({apiKey:apiKey}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":apiKey})}function getHeadersWithAuth(appConfig,{refreshToken:refreshToken}){const headers=getHeaders(appConfig);return headers.append("Authorization",function getAuthorizationHeader(refreshToken){return`${INTERNAL_AUTH_VERSION} ${refreshToken}`}(refreshToken)),headers}async function retryIfServerError(fn){const result=await fn();return result.status>=500&&result.status<600?fn():result}function sleep(ms){return new Promise((resolve=>{setTimeout(resolve,ms)}))}const VALID_FID_PATTERN=/^[cdef][\w-]{21}$/,INVALID_FID="";function generateFid(){try{const fidByteArray=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(fidByteArray),fidByteArray[0]=112+fidByteArray[0]%16;const fid=function encode(fidByteArray){const b64String=function bufferToBase64UrlSafe(array){return btoa(String.fromCharCode(...array)).replace(/\+/g,"-").replace(/\//g,"_")}(fidByteArray);return b64String.substr(0,22)}(fidByteArray);return VALID_FID_PATTERN.test(fid)?fid:INVALID_FID}catch(_a){return INVALID_FID}}function getKey(appConfig){return`${appConfig.appName}!${appConfig.appId}`}const fidChangeCallbacks=new Map;function fidChanged(appConfig,fid){const key=getKey(appConfig);callFidChangeCallbacks(key,fid),function broadcastFidChange(key,fid){const channel=getBroadcastChannel();channel&&channel.postMessage({key:key,fid:fid});closeBroadcastChannel()}(key,fid)}function callFidChangeCallbacks(key,fid){const callbacks=fidChangeCallbacks.get(key);if(callbacks)for(const callback of callbacks)callback(fid)}let broadcastChannel=null;function getBroadcastChannel(){return!broadcastChannel&&"BroadcastChannel"in self&&(broadcastChannel=new BroadcastChannel("[Firebase] FID Change"),broadcastChannel.onmessage=e=>{callFidChangeCallbacks(e.data.key,e.data.fid)}),broadcastChannel}function closeBroadcastChannel(){0===fidChangeCallbacks.size&&broadcastChannel&&(broadcastChannel.close(),broadcastChannel=null)}const DATABASE_NAME="firebase-installations-database",DATABASE_VERSION=1,OBJECT_STORE_NAME="firebase-installations-store";let dbPromise=null;function getDbPromise(){return dbPromise||(dbPromise=function openDB(name,version,{blocked:blocked,upgrade:upgrade,blocking:blocking,terminated:terminated}={}){const request=indexedDB.open(name,version),openPromise=wrap_idb_value_wrap(request);return upgrade&&request.addEventListener("upgradeneeded",(event=>{upgrade(wrap_idb_value_wrap(request.result),event.oldVersion,event.newVersion,wrap_idb_value_wrap(request.transaction))})),blocked&&request.addEventListener("blocked",(()=>blocked())),openPromise.then((db=>{terminated&&db.addEventListener("close",(()=>terminated())),blocking&&db.addEventListener("versionchange",(()=>blocking()))})).catch((()=>{})),openPromise}(DATABASE_NAME,DATABASE_VERSION,{upgrade:(db,oldVersion)=>{if(0===oldVersion)db.createObjectStore(OBJECT_STORE_NAME)}})),dbPromise}async function set(appConfig,value){const key=getKey(appConfig),tx=(await getDbPromise()).transaction(OBJECT_STORE_NAME,"readwrite"),objectStore=tx.objectStore(OBJECT_STORE_NAME),oldValue=await objectStore.get(key);return await objectStore.put(value,key),await tx.done,oldValue&&oldValue.fid===value.fid||fidChanged(appConfig,value.fid),value}async function remove(appConfig){const key=getKey(appConfig),tx=(await getDbPromise()).transaction(OBJECT_STORE_NAME,"readwrite");await tx.objectStore(OBJECT_STORE_NAME).delete(key),await tx.done}async function update(appConfig,updateFn){const key=getKey(appConfig),tx=(await getDbPromise()).transaction(OBJECT_STORE_NAME,"readwrite"),store=tx.objectStore(OBJECT_STORE_NAME),oldValue=await store.get(key),newValue=updateFn(oldValue);return void 0===newValue?await store.delete(key):await store.put(newValue,key),await tx.done,!newValue||oldValue&&oldValue.fid===newValue.fid||fidChanged(appConfig,newValue.fid),newValue}async function getInstallationEntry(installations){let registrationPromise;const installationEntry=await update(installations.appConfig,(oldEntry=>{const installationEntry=function updateOrCreateInstallationEntry(oldEntry){const entry=oldEntry||{fid:generateFid(),registrationStatus:0};return clearTimedOutRequest(entry)}(oldEntry),entryWithPromise=function triggerRegistrationIfNecessary(installations,installationEntry){if(0===installationEntry.registrationStatus){if(!navigator.onLine){return{installationEntry:installationEntry,registrationPromise:Promise.reject(ERROR_FACTORY.create("app-offline"))}}const inProgressEntry={fid:installationEntry.fid,registrationStatus:1,registrationTime:Date.now()},registrationPromise=async function registerInstallation(installations,installationEntry){try{const registeredInstallationEntry=await async function createInstallationRequest({appConfig:appConfig,heartbeatServiceProvider:heartbeatServiceProvider},{fid:fid}){const endpoint=getInstallationsEndpoint(appConfig),headers=getHeaders(appConfig),heartbeatService=heartbeatServiceProvider.getImmediate({optional:!0});if(heartbeatService){const heartbeatsHeader=await heartbeatService.getHeartbeatsHeader();heartbeatsHeader&&headers.append("x-firebase-client",heartbeatsHeader)}const body={fid:fid,authVersion:INTERNAL_AUTH_VERSION,appId:appConfig.appId,sdkVersion:PACKAGE_VERSION},request={method:"POST",headers:headers,body:JSON.stringify(body)},response=await retryIfServerError((()=>fetch(endpoint,request)));if(response.ok){const responseValue=await response.json();return{fid:responseValue.fid||fid,registrationStatus:2,refreshToken:responseValue.refreshToken,authToken:extractAuthTokenInfoFromResponse(responseValue.authToken)}}throw await getErrorFromResponse("Create Installation",response)}(installations,installationEntry);return set(installations.appConfig,registeredInstallationEntry)}catch(e){throw isServerError(e)&&409===e.customData.serverCode?await remove(installations.appConfig):await set(installations.appConfig,{fid:installationEntry.fid,registrationStatus:0}),e}}(installations,inProgressEntry);return{installationEntry:inProgressEntry,registrationPromise:registrationPromise}}return 1===installationEntry.registrationStatus?{installationEntry:installationEntry,registrationPromise:waitUntilFidRegistration(installations)}:{installationEntry:installationEntry}}(installations,installationEntry);return registrationPromise=entryWithPromise.registrationPromise,entryWithPromise.installationEntry}));return installationEntry.fid===INVALID_FID?{installationEntry:await registrationPromise}:{installationEntry:installationEntry,registrationPromise:registrationPromise}}async function waitUntilFidRegistration(installations){let entry=await updateInstallationRequest(installations.appConfig);for(;1===entry.registrationStatus;)await sleep(100),entry=await updateInstallationRequest(installations.appConfig);if(0===entry.registrationStatus){const{installationEntry:installationEntry,registrationPromise:registrationPromise}=await getInstallationEntry(installations);return registrationPromise||installationEntry}return entry}function updateInstallationRequest(appConfig){return update(appConfig,(oldEntry=>{if(!oldEntry)throw ERROR_FACTORY.create("installation-not-found");return clearTimedOutRequest(oldEntry)}))}function clearTimedOutRequest(entry){return function hasInstallationRequestTimedOut(installationEntry){return 1===installationEntry.registrationStatus&&installationEntry.registrationTime+PENDING_TIMEOUT_MS<Date.now()}(entry)?{fid:entry.fid,registrationStatus:0}:entry}async function generateAuthTokenRequest({appConfig:appConfig,heartbeatServiceProvider:heartbeatServiceProvider},installationEntry){const endpoint=function getGenerateAuthTokenEndpoint(appConfig,{fid:fid}){return`${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`}(appConfig,installationEntry),headers=getHeadersWithAuth(appConfig,installationEntry),heartbeatService=heartbeatServiceProvider.getImmediate({optional:!0});if(heartbeatService){const heartbeatsHeader=await heartbeatService.getHeartbeatsHeader();heartbeatsHeader&&headers.append("x-firebase-client",heartbeatsHeader)}const body={installation:{sdkVersion:PACKAGE_VERSION,appId:appConfig.appId}},request={method:"POST",headers:headers,body:JSON.stringify(body)},response=await retryIfServerError((()=>fetch(endpoint,request)));if(response.ok){return extractAuthTokenInfoFromResponse(await response.json())}throw await getErrorFromResponse("Generate Auth Token",response)}async function refreshAuthToken(installations,forceRefresh=!1){let tokenPromise;const entry=await update(installations.appConfig,(oldEntry=>{if(!isEntryRegistered(oldEntry))throw ERROR_FACTORY.create("not-registered");const oldAuthToken=oldEntry.authToken;if(!forceRefresh&&function isAuthTokenValid(authToken){return 2===authToken.requestStatus&&!function isAuthTokenExpired(authToken){const now=Date.now();return now<authToken.creationTime||authToken.creationTime+authToken.expiresIn<now+TOKEN_EXPIRATION_BUFFER}(authToken)}(oldAuthToken))return oldEntry;if(1===oldAuthToken.requestStatus)return tokenPromise=async function waitUntilAuthTokenRequest(installations,forceRefresh){let entry=await updateAuthTokenRequest(installations.appConfig);for(;1===entry.authToken.requestStatus;)await sleep(100),entry=await updateAuthTokenRequest(installations.appConfig);const authToken=entry.authToken;return 0===authToken.requestStatus?refreshAuthToken(installations,forceRefresh):authToken}(installations,forceRefresh),oldEntry;{if(!navigator.onLine)throw ERROR_FACTORY.create("app-offline");const inProgressEntry=function makeAuthTokenRequestInProgressEntry(oldEntry){const inProgressAuthToken={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},oldEntry),{authToken:inProgressAuthToken})}(oldEntry);return tokenPromise=async function fetchAuthTokenFromServer(installations,installationEntry){try{const authToken=await generateAuthTokenRequest(installations,installationEntry),updatedInstallationEntry=Object.assign(Object.assign({},installationEntry),{authToken:authToken});return await set(installations.appConfig,updatedInstallationEntry),authToken}catch(e){if(!isServerError(e)||401!==e.customData.serverCode&&404!==e.customData.serverCode){const updatedInstallationEntry=Object.assign(Object.assign({},installationEntry),{authToken:{requestStatus:0}});await set(installations.appConfig,updatedInstallationEntry)}else await remove(installations.appConfig);throw e}}(installations,inProgressEntry),inProgressEntry}}));return tokenPromise?await tokenPromise:entry.authToken}function updateAuthTokenRequest(appConfig){return update(appConfig,(oldEntry=>{if(!isEntryRegistered(oldEntry))throw ERROR_FACTORY.create("not-registered");return function hasAuthTokenRequestTimedOut(authToken){return 1===authToken.requestStatus&&authToken.requestTime+PENDING_TIMEOUT_MS<Date.now()}(oldEntry.authToken)?Object.assign(Object.assign({},oldEntry),{authToken:{requestStatus:0}}):oldEntry}))}function isEntryRegistered(installationEntry){return void 0!==installationEntry&&2===installationEntry.registrationStatus}async function getToken(installations,forceRefresh=!1){const installationsImpl=installations;await async function completeInstallationRegistration(installations){const{registrationPromise:registrationPromise}=await getInstallationEntry(installations);registrationPromise&&await registrationPromise}(installationsImpl);return(await refreshAuthToken(installationsImpl,forceRefresh)).token}function getMissingValueError(valueName){return ERROR_FACTORY.create("missing-app-config-values",{valueName:valueName})}const publicFactory=container=>{const app=container.getProvider("app").getImmediate(),appConfig=function extractAppConfig(app){if(!app||!app.options)throw getMissingValueError("App Configuration");if(!app.name)throw getMissingValueError("App Name");const configKeys=["projectId","apiKey","appId"];for(const keyName of configKeys)if(!app.options[keyName])throw getMissingValueError(keyName);return{appName:app.name,projectId:app.options.projectId,apiKey:app.options.apiKey,appId:app.options.appId}}(app);return{app:app,appConfig:appConfig,heartbeatServiceProvider:(0,index_esm2017.qX)(app,"heartbeat"),_delete:()=>Promise.resolve()}},internalFactory=container=>{const app=container.getProvider("app").getImmediate(),installations=(0,index_esm2017.qX)(app,"installations").getImmediate();return{getId:()=>async function getId(installations){const installationsImpl=installations,{installationEntry:installationEntry,registrationPromise:registrationPromise}=await getInstallationEntry(installationsImpl);return registrationPromise?registrationPromise.catch(console.error):refreshAuthToken(installationsImpl).catch(console.error),installationEntry.fid}(installations),getToken:forceRefresh=>getToken(installations,forceRefresh)}};!function registerInstallations(){(0,index_esm2017.Xd)(new esm_index_esm2017.wA("installations",publicFactory,"PUBLIC")),(0,index_esm2017.Xd)(new esm_index_esm2017.wA("installations-internal",internalFactory,"PRIVATE"))}(),(0,index_esm2017.KN)("@firebase/installations","0.6.4"),(0,index_esm2017.KN)("@firebase/installations","0.6.4","esm2017")},"./node_modules/@firebase/logger/dist/esm/index.esm2017.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Yd:function(){return Logger},in:function(){return LogLevel}});const instances=[];var LogLevel;!function(LogLevel){LogLevel[LogLevel.DEBUG=0]="DEBUG",LogLevel[LogLevel.VERBOSE=1]="VERBOSE",LogLevel[LogLevel.INFO=2]="INFO",LogLevel[LogLevel.WARN=3]="WARN",LogLevel[LogLevel.ERROR=4]="ERROR",LogLevel[LogLevel.SILENT=5]="SILENT"}(LogLevel||(LogLevel={}));const levelStringToEnum={debug:LogLevel.DEBUG,verbose:LogLevel.VERBOSE,info:LogLevel.INFO,warn:LogLevel.WARN,error:LogLevel.ERROR,silent:LogLevel.SILENT},defaultLogLevel=LogLevel.INFO,ConsoleMethod={[LogLevel.DEBUG]:"log",[LogLevel.VERBOSE]:"log",[LogLevel.INFO]:"info",[LogLevel.WARN]:"warn",[LogLevel.ERROR]:"error"},defaultLogHandler=(instance,logType,...args)=>{if(logType<instance.logLevel)return;const now=(new Date).toISOString(),method=ConsoleMethod[logType];if(!method)throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);console[method](`[${now}]  ${instance.name}:`,...args)};class Logger{constructor(name){this.name=name,this._logLevel=defaultLogLevel,this._logHandler=defaultLogHandler,this._userLogHandler=null,instances.push(this)}get logLevel(){return this._logLevel}set logLevel(val){if(!(val in LogLevel))throw new TypeError(`Invalid value "${val}" assigned to \`logLevel\``);this._logLevel=val}setLogLevel(val){this._logLevel="string"==typeof val?levelStringToEnum[val]:val}get logHandler(){return this._logHandler}set logHandler(val){if("function"!=typeof val)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=val}get userLogHandler(){return this._userLogHandler}set userLogHandler(val){this._userLogHandler=val}debug(...args){this._userLogHandler&&this._userLogHandler(this,LogLevel.DEBUG,...args),this._logHandler(this,LogLevel.DEBUG,...args)}log(...args){this._userLogHandler&&this._userLogHandler(this,LogLevel.VERBOSE,...args),this._logHandler(this,LogLevel.VERBOSE,...args)}info(...args){this._userLogHandler&&this._userLogHandler(this,LogLevel.INFO,...args),this._logHandler(this,LogLevel.INFO,...args)}warn(...args){this._userLogHandler&&this._userLogHandler(this,LogLevel.WARN,...args),this._logHandler(this,LogLevel.WARN,...args)}error(...args){this._userLogHandler&&this._userLogHandler(this,LogLevel.ERROR,...args),this._logHandler(this,LogLevel.ERROR,...args)}}},"./node_modules/@firebase/remote-config/dist/esm/index.esm2017.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var _firebase_app__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),_firebase_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@firebase/util/dist/index.esm2017.js"),_firebase_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),_firebase_logger__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@firebase/logger/dist/esm/index.esm2017.js");__webpack_require__("./node_modules/@firebase/installations/dist/esm/index.esm2017.js");const name="@firebase/remote-config";const ERROR_DESCRIPTION_MAP={"registration-window":"Undefined window object. This SDK only supports usage in a browser environment.","registration-project-id":"Undefined project identifier. Check Firebase app initialization.","registration-api-key":"Undefined API key. Check Firebase app initialization.","registration-app-id":"Undefined app identifier. Check Firebase app initialization.","storage-open":"Error thrown when opening storage. Original error: {$originalErrorMessage}.","storage-get":"Error thrown when reading from storage. Original error: {$originalErrorMessage}.","storage-set":"Error thrown when writing to storage. Original error: {$originalErrorMessage}.","storage-delete":"Error thrown when deleting from storage. Original error: {$originalErrorMessage}.","fetch-client-network":"Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.","fetch-timeout":'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',"fetch-throttle":'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',"fetch-client-parse":"Fetch client could not parse response. Original error: {$originalErrorMessage}.","fetch-status":"Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.","indexed-db-unavailable":"Indexed DB is not supported by current browser"},ERROR_FACTORY=new _firebase_util__WEBPACK_IMPORTED_MODULE_1__.LL("remoteconfig","Remote Config",ERROR_DESCRIPTION_MAP);class CachingClient{constructor(client,storage,storageCache,logger){this.client=client,this.storage=storage,this.storageCache=storageCache,this.logger=logger}isCachedDataFresh(cacheMaxAgeMillis,lastSuccessfulFetchTimestampMillis){if(!lastSuccessfulFetchTimestampMillis)return this.logger.debug("Config fetch cache check. Cache unpopulated."),!1;const cacheAgeMillis=Date.now()-lastSuccessfulFetchTimestampMillis,isCachedDataFresh=cacheAgeMillis<=cacheMaxAgeMillis;return this.logger.debug(`Config fetch cache check. Cache age millis: ${cacheAgeMillis}. Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}. Is cache hit: ${isCachedDataFresh}.`),isCachedDataFresh}async fetch(request){const[lastSuccessfulFetchTimestampMillis,lastSuccessfulFetchResponse]=await Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(),this.storage.getLastSuccessfulFetchResponse()]);if(lastSuccessfulFetchResponse&&this.isCachedDataFresh(request.cacheMaxAgeMillis,lastSuccessfulFetchTimestampMillis))return lastSuccessfulFetchResponse;request.eTag=lastSuccessfulFetchResponse&&lastSuccessfulFetchResponse.eTag;const response=await this.client.fetch(request),storageOperations=[this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];return 200===response.status&&storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response)),await Promise.all(storageOperations),response}}function getUserLanguage(navigatorLanguage=navigator){return navigatorLanguage.languages&&navigatorLanguage.languages[0]||navigatorLanguage.language}class RestClient{constructor(firebaseInstallations,sdkVersion,namespace,projectId,apiKey,appId){this.firebaseInstallations=firebaseInstallations,this.sdkVersion=sdkVersion,this.namespace=namespace,this.projectId=projectId,this.apiKey=apiKey,this.appId=appId}async fetch(request){const[installationId,installationToken]=await Promise.all([this.firebaseInstallations.getId(),this.firebaseInstallations.getToken()]),url=`${window.FIREBASE_REMOTE_CONFIG_URL_BASE||"https://firebaseremoteconfig.googleapis.com"}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`,headers={"Content-Type":"application/json","Content-Encoding":"gzip","If-None-Match":request.eTag||"*"},requestBody={sdk_version:this.sdkVersion,app_instance_id:installationId,app_instance_id_token:installationToken,app_id:this.appId,language_code:getUserLanguage()},options={method:"POST",headers:headers,body:JSON.stringify(requestBody)},fetchPromise=fetch(url,options),timeoutPromise=new Promise(((_resolve,reject)=>{request.signal.addEventListener((()=>{const error=new Error("The operation was aborted.");error.name="AbortError",reject(error)}))}));let response;try{await Promise.race([fetchPromise,timeoutPromise]),response=await fetchPromise}catch(originalError){let errorCode="fetch-client-network";throw"AbortError"===(null==originalError?void 0:originalError.name)&&(errorCode="fetch-timeout"),ERROR_FACTORY.create(errorCode,{originalErrorMessage:null==originalError?void 0:originalError.message})}let status=response.status;const responseEtag=response.headers.get("ETag")||void 0;let config,state;if(200===response.status){let responseBody;try{responseBody=await response.json()}catch(originalError){throw ERROR_FACTORY.create("fetch-client-parse",{originalErrorMessage:null==originalError?void 0:originalError.message})}config=responseBody.entries,state=responseBody.state}if("INSTANCE_STATE_UNSPECIFIED"===state?status=500:"NO_CHANGE"===state?status=304:"NO_TEMPLATE"!==state&&"EMPTY_CONFIG"!==state||(config={}),304!==status&&200!==status)throw ERROR_FACTORY.create("fetch-status",{httpStatus:status});return{status:status,eTag:responseEtag,config:config}}}class RetryingClient{constructor(client,storage){this.client=client,this.storage=storage}async fetch(request){const throttleMetadata=await this.storage.getThrottleMetadata()||{backoffCount:0,throttleEndTimeMillis:Date.now()};return this.attemptFetch(request,throttleMetadata)}async attemptFetch(request,{throttleEndTimeMillis:throttleEndTimeMillis,backoffCount:backoffCount}){await function setAbortableTimeout(signal,throttleEndTimeMillis){return new Promise(((resolve,reject)=>{const backoffMillis=Math.max(throttleEndTimeMillis-Date.now(),0),timeout=setTimeout(resolve,backoffMillis);signal.addEventListener((()=>{clearTimeout(timeout),reject(ERROR_FACTORY.create("fetch-throttle",{throttleEndTimeMillis:throttleEndTimeMillis}))}))}))}(request.signal,throttleEndTimeMillis);try{const response=await this.client.fetch(request);return await this.storage.deleteThrottleMetadata(),response}catch(e){if(!function isRetriableError(e){if(!(e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_1__.ZR&&e.customData))return!1;const httpStatus=Number(e.customData.httpStatus);return 429===httpStatus||500===httpStatus||503===httpStatus||504===httpStatus}(e))throw e;const throttleMetadata={throttleEndTimeMillis:Date.now()+(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.$s)(backoffCount),backoffCount:backoffCount+1};return await this.storage.setThrottleMetadata(throttleMetadata),this.attemptFetch(request,throttleMetadata)}}}class RemoteConfig{constructor(app,_client,_storageCache,_storage,_logger){this.app=app,this._client=_client,this._storageCache=_storageCache,this._storage=_storage,this._logger=_logger,this._isInitializationComplete=!1,this.settings={fetchTimeoutMillis:6e4,minimumFetchIntervalMillis:432e5},this.defaultConfig={}}get fetchTimeMillis(){return this._storageCache.getLastSuccessfulFetchTimestampMillis()||-1}get lastFetchStatus(){return this._storageCache.getLastFetchStatus()||"no-fetch-yet"}}function toFirebaseError(event,errorCode){const originalError=event.target.error||void 0;return ERROR_FACTORY.create(errorCode,{originalErrorMessage:originalError&&(null==originalError?void 0:originalError.message)})}class Storage{constructor(appId,appName,namespace,openDbPromise=function openDatabase(){return new Promise(((resolve,reject)=>{try{const request=indexedDB.open("firebase_remote_config",1);request.onerror=event=>{reject(toFirebaseError(event,"storage-open"))},request.onsuccess=event=>{resolve(event.target.result)},request.onupgradeneeded=event=>{const db=event.target.result;0===event.oldVersion&&db.createObjectStore("app_namespace_store",{keyPath:"compositeKey"})}}catch(error){reject(ERROR_FACTORY.create("storage-open",{originalErrorMessage:null==error?void 0:error.message}))}}))}()){this.appId=appId,this.appName=appName,this.namespace=namespace,this.openDbPromise=openDbPromise}getLastFetchStatus(){return this.get("last_fetch_status")}setLastFetchStatus(status){return this.set("last_fetch_status",status)}getLastSuccessfulFetchTimestampMillis(){return this.get("last_successful_fetch_timestamp_millis")}setLastSuccessfulFetchTimestampMillis(timestamp){return this.set("last_successful_fetch_timestamp_millis",timestamp)}getLastSuccessfulFetchResponse(){return this.get("last_successful_fetch_response")}setLastSuccessfulFetchResponse(response){return this.set("last_successful_fetch_response",response)}getActiveConfig(){return this.get("active_config")}setActiveConfig(config){return this.set("active_config",config)}getActiveConfigEtag(){return this.get("active_config_etag")}setActiveConfigEtag(etag){return this.set("active_config_etag",etag)}getThrottleMetadata(){return this.get("throttle_metadata")}setThrottleMetadata(metadata){return this.set("throttle_metadata",metadata)}deleteThrottleMetadata(){return this.delete("throttle_metadata")}async get(key){const db=await this.openDbPromise;return new Promise(((resolve,reject)=>{const objectStore=db.transaction(["app_namespace_store"],"readonly").objectStore("app_namespace_store"),compositeKey=this.createCompositeKey(key);try{const request=objectStore.get(compositeKey);request.onerror=event=>{reject(toFirebaseError(event,"storage-get"))},request.onsuccess=event=>{const result=event.target.result;resolve(result?result.value:void 0)}}catch(e){reject(ERROR_FACTORY.create("storage-get",{originalErrorMessage:null==e?void 0:e.message}))}}))}async set(key,value){const db=await this.openDbPromise;return new Promise(((resolve,reject)=>{const objectStore=db.transaction(["app_namespace_store"],"readwrite").objectStore("app_namespace_store"),compositeKey=this.createCompositeKey(key);try{const request=objectStore.put({compositeKey:compositeKey,value:value});request.onerror=event=>{reject(toFirebaseError(event,"storage-set"))},request.onsuccess=()=>{resolve()}}catch(e){reject(ERROR_FACTORY.create("storage-set",{originalErrorMessage:null==e?void 0:e.message}))}}))}async delete(key){const db=await this.openDbPromise;return new Promise(((resolve,reject)=>{const objectStore=db.transaction(["app_namespace_store"],"readwrite").objectStore("app_namespace_store"),compositeKey=this.createCompositeKey(key);try{const request=objectStore.delete(compositeKey);request.onerror=event=>{reject(toFirebaseError(event,"storage-delete"))},request.onsuccess=()=>{resolve()}}catch(e){reject(ERROR_FACTORY.create("storage-delete",{originalErrorMessage:null==e?void 0:e.message}))}}))}createCompositeKey(key){return[this.appId,this.appName,this.namespace,key].join()}}class StorageCache{constructor(storage){this.storage=storage}getLastFetchStatus(){return this.lastFetchStatus}getLastSuccessfulFetchTimestampMillis(){return this.lastSuccessfulFetchTimestampMillis}getActiveConfig(){return this.activeConfig}async loadFromStorage(){const lastFetchStatusPromise=this.storage.getLastFetchStatus(),lastSuccessfulFetchTimestampMillisPromise=this.storage.getLastSuccessfulFetchTimestampMillis(),activeConfigPromise=this.storage.getActiveConfig(),lastFetchStatus=await lastFetchStatusPromise;lastFetchStatus&&(this.lastFetchStatus=lastFetchStatus);const lastSuccessfulFetchTimestampMillis=await lastSuccessfulFetchTimestampMillisPromise;lastSuccessfulFetchTimestampMillis&&(this.lastSuccessfulFetchTimestampMillis=lastSuccessfulFetchTimestampMillis);const activeConfig=await activeConfigPromise;activeConfig&&(this.activeConfig=activeConfig)}setLastFetchStatus(status){return this.lastFetchStatus=status,this.storage.setLastFetchStatus(status)}setLastSuccessfulFetchTimestampMillis(timestampMillis){return this.lastSuccessfulFetchTimestampMillis=timestampMillis,this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis)}setActiveConfig(activeConfig){return this.activeConfig=activeConfig,this.storage.setActiveConfig(activeConfig)}}!function registerRemoteConfig(){(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.Xd)(new _firebase_component__WEBPACK_IMPORTED_MODULE_2__.wA("remote-config",(function remoteConfigFactory(container,{instanceIdentifier:namespace}){const app=container.getProvider("app").getImmediate(),installations=container.getProvider("installations-internal").getImmediate();if("undefined"==typeof window)throw ERROR_FACTORY.create("registration-window");if(!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.hl)())throw ERROR_FACTORY.create("indexed-db-unavailable");const{projectId:projectId,apiKey:apiKey,appId:appId}=app.options;if(!projectId)throw ERROR_FACTORY.create("registration-project-id");if(!apiKey)throw ERROR_FACTORY.create("registration-api-key");if(!appId)throw ERROR_FACTORY.create("registration-app-id");namespace=namespace||"firebase";const storage=new Storage(appId,app.name,namespace),storageCache=new StorageCache(storage),logger=new _firebase_logger__WEBPACK_IMPORTED_MODULE_3__.Yd(name);logger.logLevel=_firebase_logger__WEBPACK_IMPORTED_MODULE_3__.in.ERROR;const restClient=new RestClient(installations,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.Jn,namespace,projectId,apiKey,appId),retryingClient=new RetryingClient(restClient,storage),cachingClient=new CachingClient(retryingClient,storage,storageCache,logger),remoteConfigInstance=new RemoteConfig(app,cachingClient,storageCache,storage,logger);return function ensureInitialized(remoteConfig){const rc=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.m9)(remoteConfig);return rc._initializePromise||(rc._initializePromise=rc._storageCache.loadFromStorage().then((()=>{rc._isInitializationComplete=!0}))),rc._initializePromise}(remoteConfigInstance),remoteConfigInstance}),"PUBLIC").setMultipleInstances(!0)),(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.KN)(name,"0.4.4"),(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.KN)(name,"0.4.4","esm2017")}()},"./node_modules/@firebase/util/dist/index.esm2017.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$s:function(){return calculateBackoffMillis},L:function(){return base64urlEncodeWithoutPadding},LL:function(){return ErrorFactory},ZR:function(){return FirebaseError},eu:function(){return validateIndexedDBOpenable},hl:function(){return isIndexedDBAvailable},m9:function(){return getModularInstance},ru:function(){return isBrowserExtension},zI:function(){return areCookiesEnabled}});__webpack_require__("./node_modules/process/browser.js");const stringToByteArray$1=function(str){const out=[];let p=0;for(let i=0;i<str.length;i++){let c=str.charCodeAt(i);c<128?out[p++]=c:c<2048?(out[p++]=c>>6|192,out[p++]=63&c|128):55296==(64512&c)&&i+1<str.length&&56320==(64512&str.charCodeAt(i+1))?(c=65536+((1023&c)<<10)+(1023&str.charCodeAt(++i)),out[p++]=c>>18|240,out[p++]=c>>12&63|128,out[p++]=c>>6&63|128,out[p++]=63&c|128):(out[p++]=c>>12|224,out[p++]=c>>6&63|128,out[p++]=63&c|128)}return out},base64={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},HAS_NATIVE_SUPPORT:"function"==typeof atob,encodeByteArray(input,webSafe){if(!Array.isArray(input))throw Error("encodeByteArray takes an array as a parameter");this.init_();const byteToCharMap=webSafe?this.byteToCharMapWebSafe_:this.byteToCharMap_,output=[];for(let i=0;i<input.length;i+=3){const byte1=input[i],haveByte2=i+1<input.length,byte2=haveByte2?input[i+1]:0,haveByte3=i+2<input.length,byte3=haveByte3?input[i+2]:0,outByte1=byte1>>2,outByte2=(3&byte1)<<4|byte2>>4;let outByte3=(15&byte2)<<2|byte3>>6,outByte4=63&byte3;haveByte3||(outByte4=64,haveByte2||(outByte3=64)),output.push(byteToCharMap[outByte1],byteToCharMap[outByte2],byteToCharMap[outByte3],byteToCharMap[outByte4])}return output.join("")},encodeString(input,webSafe){return this.HAS_NATIVE_SUPPORT&&!webSafe?btoa(input):this.encodeByteArray(stringToByteArray$1(input),webSafe)},decodeString(input,webSafe){return this.HAS_NATIVE_SUPPORT&&!webSafe?atob(input):function(bytes){const out=[];let pos=0,c=0;for(;pos<bytes.length;){const c1=bytes[pos++];if(c1<128)out[c++]=String.fromCharCode(c1);else if(c1>191&&c1<224){const c2=bytes[pos++];out[c++]=String.fromCharCode((31&c1)<<6|63&c2)}else if(c1>239&&c1<365){const u=((7&c1)<<18|(63&bytes[pos++])<<12|(63&bytes[pos++])<<6|63&bytes[pos++])-65536;out[c++]=String.fromCharCode(55296+(u>>10)),out[c++]=String.fromCharCode(56320+(1023&u))}else{const c2=bytes[pos++],c3=bytes[pos++];out[c++]=String.fromCharCode((15&c1)<<12|(63&c2)<<6|63&c3)}}return out.join("")}(this.decodeStringToByteArray(input,webSafe))},decodeStringToByteArray(input,webSafe){this.init_();const charToByteMap=webSafe?this.charToByteMapWebSafe_:this.charToByteMap_,output=[];for(let i=0;i<input.length;){const byte1=charToByteMap[input.charAt(i++)],byte2=i<input.length?charToByteMap[input.charAt(i)]:0;++i;const byte3=i<input.length?charToByteMap[input.charAt(i)]:64;++i;const byte4=i<input.length?charToByteMap[input.charAt(i)]:64;if(++i,null==byte1||null==byte2||null==byte3||null==byte4)throw new DecodeBase64StringError;const outByte1=byte1<<2|byte2>>4;if(output.push(outByte1),64!==byte3){const outByte2=byte2<<4&240|byte3>>2;if(output.push(outByte2),64!==byte4){const outByte3=byte3<<6&192|byte4;output.push(outByte3)}}}return output},init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(let i=0;i<this.ENCODED_VALS.length;i++)this.byteToCharMap_[i]=this.ENCODED_VALS.charAt(i),this.charToByteMap_[this.byteToCharMap_[i]]=i,this.byteToCharMapWebSafe_[i]=this.ENCODED_VALS_WEBSAFE.charAt(i),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]]=i,i>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)]=i,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)]=i)}}};class DecodeBase64StringError extends Error{constructor(){super(...arguments),this.name="DecodeBase64StringError"}}const base64urlEncodeWithoutPadding=function(str){return function(str){const utf8Bytes=stringToByteArray$1(str);return base64.encodeByteArray(utf8Bytes,!0)}(str).replace(/\./g,"")};function isBrowserExtension(){const runtime="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof runtime&&void 0!==runtime.id}function isIndexedDBAvailable(){try{return"object"==typeof indexedDB}catch(e){return!1}}function validateIndexedDBOpenable(){return new Promise(((resolve,reject)=>{try{let preExist=!0;const DB_CHECK_NAME="validate-browser-context-for-indexeddb-analytics-module",request=self.indexedDB.open(DB_CHECK_NAME);request.onsuccess=()=>{request.result.close(),preExist||self.indexedDB.deleteDatabase(DB_CHECK_NAME),resolve(!0)},request.onupgradeneeded=()=>{preExist=!1},request.onerror=()=>{var _a;reject((null===(_a=request.error)||void 0===_a?void 0:_a.message)||"")}}catch(error){reject(error)}}))}function areCookiesEnabled(){return!("undefined"==typeof navigator||!navigator.cookieEnabled)}class FirebaseError extends Error{constructor(code,message,customData){super(message),this.code=code,this.customData=customData,this.name="FirebaseError",Object.setPrototypeOf(this,FirebaseError.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,ErrorFactory.prototype.create)}}class ErrorFactory{constructor(service,serviceName,errors){this.service=service,this.serviceName=serviceName,this.errors=errors}create(code,...data){const customData=data[0]||{},fullCode=`${this.service}/${code}`,template=this.errors[code],message=template?function replaceTemplate(template,data){return template.replace(PATTERN,((_,key)=>{const value=data[key];return null!=value?String(value):`<${key}?>`}))}(template,customData):"Error",fullMessage=`${this.serviceName}: ${message} (${fullCode}).`;return new FirebaseError(fullCode,fullMessage,customData)}}const PATTERN=/\{\$([^}]+)}/g;const DEFAULT_INTERVAL_MILLIS=1e3,DEFAULT_BACKOFF_FACTOR=2,MAX_VALUE_MILLIS=144e5,RANDOM_FACTOR=.5;function calculateBackoffMillis(backoffCount,intervalMillis=DEFAULT_INTERVAL_MILLIS,backoffFactor=DEFAULT_BACKOFF_FACTOR){const currBaseValue=intervalMillis*Math.pow(backoffFactor,backoffCount),randomWait=Math.round(RANDOM_FACTOR*currBaseValue*(Math.random()-.5)*2);return Math.min(MAX_VALUE_MILLIS,currBaseValue+randomWait)}function getModularInstance(service){return service&&service._delegate?service._delegate:service}}}]);