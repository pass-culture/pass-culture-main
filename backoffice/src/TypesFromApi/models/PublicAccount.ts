/* tslint:disable */
/* eslint-disable */
/**
 * pass Culture backoffice API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  UserRole,
  UserRoleFromJSON,
  UserRoleFromJSONTyped,
  UserRoleToJSON,
} from './'

/**
 *
 * @export
 * @interface PublicAccount
 */
export interface PublicAccount {
  /**
   *
   * @type {string}
   * @memberof PublicAccount
   */
  address?: string | null
  /**
   *
   * @type {string}
   * @memberof PublicAccount
   */
  city?: string | null
  /**
   *
   * @type {Date}
   * @memberof PublicAccount
   */
  dateOfBirth?: Date | null
  /**
   *
   * @type {string}
   * @memberof PublicAccount
   */
  email: string
  /**
   *
   * @type {string}
   * @memberof PublicAccount
   */
  firstName?: string | null
  /**
   *
   * @type {number}
   * @memberof PublicAccount
   */
  id: number
  /**
   *
   * @type {boolean}
   * @memberof PublicAccount
   */
  isActive: boolean
  /**
   *
   * @type {string}
   * @memberof PublicAccount
   */
  lastName?: string | null
  /**
   *
   * @type {string}
   * @memberof PublicAccount
   */
  phoneNumber?: string | null
  /**
   *
   * @type {string}
   * @memberof PublicAccount
   */
  postalCode?: string | null
  /**
   *
   * @type {Array<UserRole>}
   * @memberof PublicAccount
   */
  roles: Array<UserRole>
}

export function PublicAccountFromJSON(json: any): PublicAccount {
  return PublicAccountFromJSONTyped(json, false)
}

export function PublicAccountFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PublicAccount {
  if (json === undefined || json === null) {
    return json
  }
  return {
    address: !exists(json, 'address') ? undefined : json['address'],
    city: !exists(json, 'city') ? undefined : json['city'],
    dateOfBirth: !exists(json, 'dateOfBirth')
      ? undefined
      : json['dateOfBirth'] === null
      ? null
      : new Date(json['dateOfBirth']),
    email: json['email'],
    firstName: !exists(json, 'firstName') ? undefined : json['firstName'],
    id: json['id'],
    isActive: json['isActive'],
    lastName: !exists(json, 'lastName') ? undefined : json['lastName'],
    phoneNumber: !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
    postalCode: !exists(json, 'postalCode') ? undefined : json['postalCode'],
    roles: (json['roles'] as Array<any>).map(UserRoleFromJSON),
  }
}

export function PublicAccountToJSON(value?: PublicAccount | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    address: value.address,
    city: value.city,
    dateOfBirth:
      value.dateOfBirth === undefined
        ? undefined
        : value.dateOfBirth === null
        ? null
        : value.dateOfBirth.toISOString(),
    email: value.email,
    firstName: value.firstName,
    id: value.id,
    isActive: value.isActive,
    lastName: value.lastName,
    phoneNumber: value.phoneNumber,
    postalCode: value.postalCode,
    roles: (value.roles as Array<any>).map(UserRoleToJSON),
  }
}
