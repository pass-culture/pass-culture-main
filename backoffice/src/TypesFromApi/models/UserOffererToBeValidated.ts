/* tslint:disable */
/* eslint-disable */
/**
 * pass Culture backoffice API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  Comment,
  CommentFromJSON,
  CommentFromJSONTyped,
  CommentToJSON,
} from './'

/**
 *
 * @export
 * @interface UserOffererToBeValidated
 */
export interface UserOffererToBeValidated {
  /**
   *
   * @type {string}
   * @memberof UserOffererToBeValidated
   */
  email?: string | null
  /**
   *
   * @type {number}
   * @memberof UserOffererToBeValidated
   */
  id: number
  /**
   *
   * @type {Comment}
   * @memberof UserOffererToBeValidated
   */
  lastComment?: Comment | null
  /**
   *
   * @type {Date}
   * @memberof UserOffererToBeValidated
   */
  offererCreatedDate: Date
  /**
   *
   * @type {number}
   * @memberof UserOffererToBeValidated
   */
  offererId: number
  /**
   *
   * @type {string}
   * @memberof UserOffererToBeValidated
   */
  offererName: string
  /**
   *
   * @type {string}
   * @memberof UserOffererToBeValidated
   */
  ownerEmail?: string | null
  /**
   *
   * @type {number}
   * @memberof UserOffererToBeValidated
   */
  ownerId?: number | null
  /**
   *
   * @type {string}
   * @memberof UserOffererToBeValidated
   */
  phoneNumber?: string | null
  /**
   *
   * @type {Date}
   * @memberof UserOffererToBeValidated
   */
  dateCreated?: Date | null
  /**
   *
   * @type {string}
   * @memberof UserOffererToBeValidated
   */
  siren: string
  /**
   *
   * @type {string}
   * @memberof UserOffererToBeValidated
   */
  status: string
  /**
   *
   * @type {number}
   * @memberof UserOffererToBeValidated
   */
  userId: number
  /**
   *
   * @type {string}
   * @memberof UserOffererToBeValidated
   */
  userName: string
}

export function UserOffererToBeValidatedFromJSON(
  json: any
): UserOffererToBeValidated {
  return UserOffererToBeValidatedFromJSONTyped(json, false)
}

export function UserOffererToBeValidatedFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UserOffererToBeValidated {
  if (json === undefined || json === null) {
    return json
  }
  return {
    email: !exists(json, 'email') ? undefined : json['email'],
    id: json['id'],
    lastComment: !exists(json, 'lastComment')
      ? undefined
      : CommentFromJSON(json['lastComment']),
    offererCreatedDate: new Date(json['offererCreatedDate']),
    offererId: json['offererId'],
    offererName: json['offererName'],
    ownerEmail: !exists(json, 'ownerEmail') ? undefined : json['ownerEmail'],
    ownerId: !exists(json, 'ownerId') ? undefined : json['ownerId'],
    phoneNumber: !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
    dateCreated: !exists(json, 'dateCreated')
      ? undefined
      : json['dateCreated'] === null
      ? null
      : new Date(json['dateCreated']),
    siren: json['siren'],
    status: json['status'],
    userId: json['userId'],
    userName: json['userName'],
  }
}

export function UserOffererToBeValidatedToJSON(
  value?: UserOffererToBeValidated | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    email: value.email,
    id: value.id,
    lastComment: CommentToJSON(value.lastComment),
    offererCreatedDate: value.offererCreatedDate.toISOString(),
    offererId: value.offererId,
    offererName: value.offererName,
    ownerEmail: value.ownerEmail,
    ownerId: value.ownerId,
    phoneNumber: value.phoneNumber,
    dateCreated:
      value.dateCreated === undefined
        ? undefined
        : value.dateCreated === null
        ? null
        : value.dateCreated.toISOString(),
    siren: value.siren,
    status: value.status,
    userId: value.userId,
    userName: value.userName,
  }
}
