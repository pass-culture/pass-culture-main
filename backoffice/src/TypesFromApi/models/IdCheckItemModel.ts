/* tslint:disable */
/* eslint-disable */
/**
 * pass Culture backoffice API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  FraudCheckStatus,
  FraudCheckStatusFromJSON,
  FraudCheckStatusFromJSONTyped,
  FraudCheckStatusToJSON,
  FraudCheckType,
  FraudCheckTypeFromJSON,
  FraudCheckTypeFromJSONTyped,
  FraudCheckTypeToJSON,
  FraudReasonCode,
  FraudReasonCodeFromJSON,
  FraudReasonCodeFromJSONTyped,
  FraudReasonCodeToJSON,
} from './index'

/**
 *
 * @export
 * @interface IdCheckItemModel
 */
export interface IdCheckItemModel {
  /**
   *
   * @type {Date}
   * @memberof IdCheckItemModel
   */
  dateCreated: Date
  /**
   *
   * @type {string}
   * @memberof IdCheckItemModel
   */
  reason?: string | null
  /**
   *
   * @type {Array<FraudReasonCode>}
   * @memberof IdCheckItemModel
   */
  reasonCodes?: Array<FraudReasonCode> | null
  /**
   *
   * @type {string}
   * @memberof IdCheckItemModel
   */
  sourceId?: string | null
  /**
   *
   * @type {FraudCheckStatus}
   * @memberof IdCheckItemModel
   */
  status?: FraudCheckStatus | null
  /**
   *
   * @type {object}
   * @memberof IdCheckItemModel
   */
  technicalDetails?: object | null
  /**
   *
   * @type {string}
   * @memberof IdCheckItemModel
   */
  thirdPartyId: string
  /**
   *
   * @type {FraudCheckType}
   * @memberof IdCheckItemModel
   */
  type: FraudCheckType
}

export function IdCheckItemModelFromJSON(json: any): IdCheckItemModel {
  return IdCheckItemModelFromJSONTyped(json, false)
}

export function IdCheckItemModelFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IdCheckItemModel {
  if (json === undefined || json === null) {
    return json
  }
  return {
    dateCreated: new Date(json['dateCreated']),
    reason: !exists(json, 'reason') ? undefined : json['reason'],
    reasonCodes: !exists(json, 'reasonCodes')
      ? undefined
      : json['reasonCodes'] === null
      ? null
      : (json['reasonCodes'] as Array<any>).map(FraudReasonCodeFromJSON),
    sourceId: !exists(json, 'sourceId') ? undefined : json['sourceId'],
    status: !exists(json, 'status')
      ? undefined
      : FraudCheckStatusFromJSON(json['status']),
    technicalDetails: !exists(json, 'technicalDetails')
      ? undefined
      : json['technicalDetails'],
    thirdPartyId: json['thirdPartyId'],
    type: FraudCheckTypeFromJSON(json['type']),
  }
}

export function IdCheckItemModelToJSON(value?: IdCheckItemModel | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    dateCreated: value.dateCreated.toISOString(),
    reason: value.reason,
    reasonCodes:
      value.reasonCodes === undefined
        ? undefined
        : value.reasonCodes === null
        ? null
        : (value.reasonCodes as Array<any>).map(FraudReasonCodeToJSON),
    sourceId: value.sourceId,
    status: FraudCheckStatusToJSON(value.status),
    technicalDetails: value.technicalDetails,
    thirdPartyId: value.thirdPartyId,
    type: FraudCheckTypeToJSON(value.type),
  }
}
