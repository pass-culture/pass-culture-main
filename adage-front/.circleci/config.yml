version: 2.1

###################
#  EXECUTORS
###################

executors:

  node-gcp:
    docker:
      - image: ${GCP_REGION}-docker.pkg.dev/${GCP_INFRA_PROJECT}/${GCP_TOOLS_REGISTRY_NAME}/node-gcp:14
        auth:
          username: _json_key  # default username when using a JSON key file to authenticate
          password: $GCP_INFRA_KEY

###################
#  REFERENCES
###################

references:

  working_directory: &working_directory
    ~/pass-culture-main/adage-front

###################
#  COMMANDS       #
###################

commands:
  authenticate_gcp:
    description: Authenticate to a GCP project
    parameters:
      gcp_key_name:
        type: env_var_name
    steps:
      - run: echo ${<< parameters.gcp_key_name >>} > ${HOME}/gcp-key.json
      - run: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
      - run: gcloud --quiet config set project ${GCP_PROJECT}

  build:
    description: Build adage-front testing
    steps:
      - run: |
          cd ~/pass-culture-main/adage-front
          yarn install
          yarn build:testing

  push-to-bucket:
    description: Push adage-front to the cloudstorage testing bucket
    parameters:
      bucket_name:
        type: string
      build_path:
        type: string
    steps:
      - run: |
          set +eo pipefail
          gsutil rsync -r << parameters.build_path >> gs://<< parameters.bucket_name >>

  invalidate-cache:
    description: Invalidate Cache
    parameters:
      url_map_name:
        type: string
    steps:
      - run:
          name: Invalidate cache
          command: gcloud compute url-maps invalidate-cdn-cache << parameters.url_map_name >> --path "/*"

###################
#  JOBS
###################

jobs:
  quality:
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/
    steps:
      - run:
          name: Initialization environment
          command: |
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/pass-culture/pass-culture-main.git pass-culture-main || git clone https://github.com/pass-culture/pass-culture-main.git pass-culture-main
            cd pass-culture-main
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/pass-culture/pass-culture-api.git api || git clone https://github.com/pass-culture/pass-culture-api.git api
            ./install_lib_ci.sh
      - checkout:
          path: *working_directory
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "~/pass-culture-main/adage-front/yarn.lock" }}
      - run:
          name: Install dependencies
          working_directory: *working_directory
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install
            yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "~/pass-culture-main/adage-front/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Running linter
          working_directory: *working_directory
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install
            yarn lint:js

  unit-tests:
    machine:
      image: ubuntu-2004:202101-01
    working_directory: ~/
    steps:
      - run:
          name: Initialization environment
          command: |
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/pass-culture/pass-culture-main.git pass-culture-main || git clone https://github.com/pass-culture/pass-culture-main.git pass-culture-main
            cd pass-culture-main
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/pass-culture/pass-culture-api.git api || git clone https://github.com/pass-culture/pass-culture-api.git api
            ./install_lib_ci.sh
      - checkout:
          path: *working_directory
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "~/pass-culture-main/adage-front/yarn.lock" }}
      - run:
          name: Install dependencies
          working_directory: *working_directory
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install
            yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "~/pass-culture-main/adage-front/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Running Unit Tests
          working_directory: *working_directory
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install
            yarn test:unit --coverage --silent
            bash <(curl -s https://codecov.io/bash)

  deploy-adage-front:
    executor: node-gcp
    steps:
      - run:
          name: Checkout main
          command: |
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/pass-culture/pass-culture-main.git ~/pass-culture-main || git clone https://github.com/pass-culture/pass-culture-main.git ~/pass-culture-main
      - checkout:
          path: ~/pass-culture-main/adage-front
      - authenticate_gcp:
          gcp_key_name: GCP_METIER_KEY
      - build
      - push-to-bucket:
          build_path: ~/pass-culture-main/adage-front/build
          bucket_name: ${GCP_PROJECT}-testing-adage
      - invalidate-cache:
          url_map_name: testing-adage-url-map

###################
#  WORKFLOWS
###################

workflows:
  version: 2
  commit:
    jobs:
      - unit-tests
      - quality
      - deploy-adage-front:
          filters:
            branches:
              only:
                - master
          context:
            - GCP
            - GCP_EHP
          requires:
            - unit-tests
            - quality

