version: "3.7"

services:
  postgres:
    image: cimg/postgres:12.9-postgis
    container_name: pc-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - env_file
    networks:
      - db_nw
    ports:
      - 5434:5432 # This port is used outside docker-compose network (E2E tests and developers launching flask api on their local machines)
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_min_duration_statement=0 -c log_statement=all -c log_duration=on

  flask:
    image: europe-west1-docker.pkg.dev/passculture-infra-prod/pass-culture-artifact-registry/pcapi:${DOCKER_TAG}
    working_dir: /usr/src/app
    container_name: pc-api
    command: ["./start-api-when-database-is-ready.sh"]
    volumes:
      - ./api:/usr/src/app
    env_file:
      - env_file
    environment:
      - GUNICORN_PORT=5001
      - GUNICORN_MAX_REQUESTS=10
      - GUNICORN_MAX_REQUESTS_JITTER=10
      - GUNICORN_WORKERS=2
      - GUNICORN_THREADS=2
      - GUNICORN_TIMEOUT=10
      - GUNICORN_LOG_LEVEL=info
    networks:
      - db_nw
    depends_on:
      - postgres
      - redis
    ports:
      - 5001:5001
    stdin_open: true
    tty: true

  backoffice:
    build:
      context: ./api
      target: api-flask
    working_dir: /usr/src/app
    container_name: pc-backoffice
    command: ["./start-backoffice-when-api-is-ready.sh"]
    volumes:
      - ./api:/usr/src/app
    env_file:
      - env_file
    networks:
      - db_nw
    depends_on:
      - postgres
      - redis
    ports:
      - 5002:5001
    stdin_open: true
    tty: true

  redis:
    image: scalingo/redis
    container_name: pc-redis
    command: redis-server
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - db_nw

networks:
  db_nw:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
